{"version":3,"sources":["actions/employeeActions.js","components/RecpHomeNavBar.js","components/Footer.js","components/Home.js","components/HomeNavBar.js","screens/About.js","screens/Contact.js","screens/Doctors.js","screens/EmployeeScreen.js","constants/patientConstants.js","screens/PatientScreens/PatientSignInScreen.js","actions/patientAction.js","components/DoctorHomeNavBar.js","screens/AdminScreens/Profile.js","constants/DoctorConstants.js","screens/DoctorScreens/DoctorAppointmentScreen.js","actions/DoctorAction.js","screens/DoctorScreens/DoctorMedicineListScreen.js","screens/DoctorScreens/DoctorMedPrescriptionScreen.js","screens/DoctorScreens/DoctorTestListScreen.js","screens/DoctorScreens/DoctorTestPrescriptionScreen.js","screens/DoctorScreens/DoctorScreen.js","components/AdminHomeNavBar.js","screens/AdminScreens/AdminUpdateEmployeeScreen.js","screens/AdminScreens/AdminAddEmployeeScreen.js","screens/AdminScreens/AdminPaymentHistoryScreen.js","screens/AdminScreens/AdminViewEmployeesScreen.js","screens/AdminScreens/AdminHomeScreen.js","constants/RecpConstants.js","actions/recpActions.js","screens/ReceptionistScreens/RecpAcceptPayment.js","screens/ReceptionistScreens/RecpAdmitPatient.js","screens/ReceptionistScreens/RecpDischargePatient.js","screens/ReceptionistScreens/RecpViewAppointments.js","screens/ReceptionistScreens/RecpHomeScreen.js","components/LabNavBar.js","screens/LabMgrScreens/LabHomeScreen.js","constants/labManagerConstants.js","screens/LabMgrScreens/LabManagerViewPrescScreen.js","actions/labManagerActios.js","screens/PatientScreens/PatientSignUpScreen.js","components/PatientNavBar.js","screens/PatientScreens/PatientHomeScreen.js","screens/PatientScreens/PatientEditProfileScreen.js","screens/PatientScreens/PatientViewPrescScreen.js","constants/PaymentConstants.js","screens/PatientScreens/BookAppointmentScreen.js","actions/PaymentAction.js","screens/HomeScreen.js","App.js","reportWebVitals.js","store.js","reducers/employeeReducers.js","reducers/DoctorReducer.js","reducers/recpReducers.js","reducers/LabManagerReducer.js","reducers/patientReducer.js","reducers/paymentReducer.js","index.js","components/Header.js","constants/employeeConstants.js","constants/URLConstants.js"],"names":["employeeSigninAction","email","password","dispatch","type","EMPLOYEE_SIGNIN_REQUEST","body","url","SPRINGURL","axios","post","headers","then","response","EMPLOYEE_SIGNIN_SUCCESS","payload","catch","error","EMPLOYEE_SIGNIN_FAIL","employeeSignupAction","employee_details","EMPLOYEE_SIGNUP_REQUEST","EMPLOYEE_SIGNUP_SUCCESS","EMPLOYEE_SIGNUP_FAIL","viewEmployeesAction","EMPLOYEE_VIEWEMPLOYEES_REQUEST","get","EMPLOYEE_VIEWEMPLOYEES_SUCCESS","EMPLOYEE_VIEWEMPLOYEES_FAIL","employeeDeleteAction","emp_id","EMPLOYEE_DELETE_REQUEST","delete","dresponse","EMPLOYEE_DELETE_SUCCESS","derror","EMPLOYEE_DELETE_FAIL","employeeUpdateAction","emp_details","EMPLOYEE_UPDATE_REQUEST","put","EMPLOYEE_UPDATE_SUCCESS","EMPLOYEE_UPDATE_FAIL","employeeLogoutAction","sessionStorage","removeItem","EMPLOYEE_SIGNOUT","document","location","href","adminGetTotalChargesAction","ADMIN_GET_ALL_CHARGES_REQUEST","ADMIN_GET_ALL_CHARGES_SUCCESS","ADMIN_GET_ALL_CHARGES_FAIL","require","useDispatch","useSelector","RecpHomeNavBar","props","receptionist","JSON","parse","getItem","console","log","className","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","to","aria-current","name","onClick","Footer","data-wow-delay","Home","HomeNavBar","AboutScreen","Header","title","Contact","xmlns","width","height","fill","viewBox","fill-rule","d","DoctorScreen","src","alt","EmployeeScreen","useState","setEmail","setPassword","employeeSignin","store","loading","useEffect","status","setItem","stringify","data","role","history","push","alert","onChange","e","target","value","placeholder","PATIENT_SIGNIN_REQUEST","PATIENT_SIGNIN_SUCCESS","PATIENT_SIGNIN_FAIL","PATIENT_SIGNOUT","PATIENT_SIGNUP_REQUEST","PATIENT_SIGNUP_SUCCESS","PATIENT_SIGNUP_FAIL","PATIENT_GET_DOC_REQUEST","PATIENT_GET_DOC_SUCCESS","PATIENT_GET_DOC_FAIL","PATIENT_BOOK_Appointment_REQUEST","PATIENT_BOOK_Appointment_SUCCESS","PATIENT_BOOK_Appointment_FAIL","PATIENT_EDIT_PROFILE_REQUEST","PATIENT_EDIT_PROFILE_SUCCESS","PATIENT_EDIT_PROFILE_FAIL","PATIENT_GET_PROFILE_REQUEST","PATIENT_GET_PROFILE_SUCCESS","PATIENT_GET_PROFILE_FAIL","PATIENT_VIEW_PRESC_REQUEST","PATIENT_VIEW_PRESC_SUCCESS","PATIENT_VIEW_PRESC_FAIL","PatientSignInScreen","patientSignin","patientSigninAction","DoctorHomeNavBar","doctor","Profile","admin","contact","dob","APPOINTMENT_FETCH_REQUEST","APPOINTMENT_FETCH_SUCCESS","APPOINTMENT_FETCH_FAIL","APPOINTMENT_FETCH_RESET","MEDICINELIST_FETCH_REQUEST","MEDICINELIST_FETCH_SUCCESS","MEDICINELIST_FETCH_FAIL","MEDICINELIST_FETCH_RESET","TESTLIST_FETCH_REQUEST","TESTLIST_FETCH_SUCCESS","TESTLIST_FETCH_FAIL","TESTLIST_FETCH_RESET","TESTPRESC_FETCH_REQUEST","TESTPRESC_FETCH_SUCCESS","TESTPRESC_FETCH_FAIL","TESTPRESC_FETCH_RESET","MEDPRESC_FETCH_REQUEST","MEDPRESC_FETCH_SUCCESS","MEDPRESC_FETCH_FAIL","MEDPRESC_FETCH_RESET","DoctorAppointmentScreen","appointments","appointment","error2","response2","loading2","length","map","apptDate","apptPatient","class","DoctorMedicineListScreen","medicines","medicine","list","note","qty","getElementById","style","background","filter","item","pId","medPresc","DoctorMedPrescriptionScreen","response1","medicinePresc","prescDate","patient","med","index","DoctorTestListScreen","tests","test","charges","tests_id","p_id","DoctorTestPrescriptionScreen","prescription","docId","doct","path","component","exact","AdminHomeNavBar","default","AdminUpdateEmployeeScreen","setName","setContact","employeeUpdate","updateEmployee","AdminAddEmployeeScreen","gender","setGender","setDob","setRole","department","setDepartment","employeeSignup","defaultValue","selected","AdminPaymentHistoryScreen","totalCharges","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","AdminViewEmployeesScreen","viewEmployees","deleteEmployee","dloading","AdminHomeScreen","RECP_GET_DOCTORS_REQUEST","RECP_GET_DOCTORS_SUCCESS","RECP_GET_DOCTORS_FAIL","RECP_VIEW_APPOINTMENTS_REQUEST","RECP_VIEW_APPOINTMENTS_SUCCESS","RECP_VIEW_APPOINTMENTS_FAIL","RECP_VIEW_APPOINTMENTS_RESET","RECP_ALL_APPOINTMENTS_REQUEST","RECP_ALL_APPOINTMENTS_SUCCESS","RECP_ALL_APPOINTMENTS_FAIL","RECP_ALL_APPOINTMENTS_RESET","RECP_ADMIT_PATIENT_REQUEST","RECP_ADMIT_PATIENT_SUCCESS","RECP_ADMIT_PATIENT_FAIL","RECP_GET_ADMIT_PATIENT_REQUEST","RECP_GET_ADMIT_PATIENT_SUCCESS","RECP_GET_ADMIT_PATIENT_FAIL","RECP_DISCHARGE_PATIENT_REQUEST","RECP_DISCHARGE_PATIENT_SUCCESS","RECP_DISCHARGE_PATIENT_FAIL","RECP_MAKE_PAYMENT_REQUEST","RECP_MAKE_PAYMENT_SUCCESS","RECP_MAKE_PAYMENT_FAIL","recpGetAllAppointmentsAction","RecpAcceptPayment","patientId","setPatientId","apptId","setApptId","wardCharges","setWardCharges","testCharges","setTestCharges","aresponse","recpAllAppointments","recpMakePayment","merror","mresponse","aId","a","pop","disabled","recpMakePaymentAction","RecpAdmitPatient","admitDate","setAdmitDate","onAdmit","admitPatDetails","recpAdmitPatientAction","required","RecpDischargePatient","dischargePat","recpDischargePatient","isDischarged","admitPatients","recpGetAdmitPatients","onDischarge","recpDischargePatientAction","RecpViewAppointments","doc_id","setDoc_id","doctors","recpDoctors","recpAppointments","recpViewAppointmentsAction","app","RecpHomeScreen","LabNavBar","Labmgr","LabHomeScreen","user","LAB_VIEW_PRESC_REQUEST","LAB_VIEW_PRESC_SUCCESS","LAB_VIEW_PRESC_FAIL","LabManagerViewPrescScreen","setP_Id","LabViewPresc","labManagerviewPresc","Headers","PatientSignUpScreen","patientSignUp","patientSignup","patientSignupAction","PatientNavBar","PatientHomeScreen","city","PatientEditProfileScreen","setCity","age","setAge","phone","setPhone","bloodGroup","setBloodGroup","patientGetProfile","patientGetprofile","patientEditProfile","patientEditprofile","eloading","eerror","eresponse","readOnly","currentTarget","patientEditProfileAction","PatientViewPrescScreen","patientViewPrescription","presc","index2","PAYMENT_REQ","PAYMENT_SUCC","PAYMENT_FAIL","BookAppointmentScreen","setDoctor","date","setDate","patientGetDoc","bookAppointment","patientBookAppointment","berror","bloading","bresponse","paymentDetails","perror","ploading","presponse","d_id","apptDoctor","doc","stripeKey","token","amount","appointmentPaymentAction","HomeScreen","isLoggedIn","DoctorHomeScreen","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","state","action","loading1","error1","aloading","aerror","recpAdmitPatient","mloading","createStore","composeWithDevTools","applyMiddleware","logger","thunk","ReactDOM","render","StrictMode","defaultProps"],"mappings":"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","file":"static/js/main.4c40f642.chunk.js","sourcesContent":["import {\r\n  EMPLOYEE_SIGNIN_REQUEST,\r\n  EMPLOYEE_SIGNIN_SUCCESS,\r\n  EMPLOYEE_SIGNIN_FAIL,\r\n  EMPLOYEE_SIGNUP_REQUEST,\r\n  EMPLOYEE_SIGNUP_SUCCESS,\r\n  EMPLOYEE_SIGNUP_FAIL,\r\n  EMPLOYEE_VIEWEMPLOYEES_REQUEST,\r\n  EMPLOYEE_VIEWEMPLOYEES_FAIL,\r\n  EMPLOYEE_VIEWEMPLOYEES_SUCCESS,\r\n  EMPLOYEE_DELETE_REQUEST,\r\n  EMPLOYEE_DELETE_SUCCESS,\r\n  EMPLOYEE_DELETE_FAIL,\r\n  EMPLOYEE_UPDATE_REQUEST,\r\n  EMPLOYEE_UPDATE_SUCCESS,\r\n  EMPLOYEE_UPDATE_FAIL,\r\n  EMPLOYEE_SIGNOUT,\r\n  ADMIN_GET_ALL_CHARGES_FAIL,\r\n  ADMIN_GET_ALL_CHARGES_REQUEST,\r\n  ADMIN_GET_ALL_CHARGES_SUCCESS,\r\n} from '../constants/employeeConstants'\r\nimport axios from 'axios'\r\nimport { SPRINGURL } from '../constants/URLConstants'\r\n\r\nexport const employeeSigninAction = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_SIGNIN_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      email,\r\n      password,\r\n    }\r\n    const url = SPRINGURL + '/user/login'\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: EMPLOYEE_SIGNIN_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: EMPLOYEE_SIGNIN_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const employeeSignupAction = (employee_details) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_SIGNUP_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL + '/admin/register'\r\n    axios\r\n      .post(url, employee_details, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: EMPLOYEE_SIGNUP_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: EMPLOYEE_SIGNUP_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const viewEmployeesAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_VIEWEMPLOYEES_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/admin'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: EMPLOYEE_VIEWEMPLOYEES_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: EMPLOYEE_VIEWEMPLOYEES_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const employeeDeleteAction = (emp_id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_DELETE_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL + '/admin/delete/' + emp_id\r\n    axios\r\n      .delete(url, header)\r\n      .then((dresponse) => {\r\n        dispatch({\r\n          type: EMPLOYEE_DELETE_SUCCESS,\r\n          payload: dresponse,\r\n        })\r\n      })\r\n      .catch((derror) => {\r\n        dispatch({\r\n          type: EMPLOYEE_DELETE_FAIL,\r\n          payload: derror,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const employeeUpdateAction = (emp_id, emp_details) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_UPDATE_REQUEST,\r\n    })\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL + '/admin/update/' + emp_id\r\n    axios\r\n      .put(url, emp_details, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: EMPLOYEE_UPDATE_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: EMPLOYEE_UPDATE_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const employeeLogoutAction = () => {\r\n  return (dispatch) => {\r\n    sessionStorage.removeItem('emp_details')\r\n    sessionStorage.removeItem('emp_id')\r\n    sessionStorage.removeItem('isLoggedIn')\r\n    sessionStorage.removeItem('patient_id')\r\n    sessionStorage.removeItem('docId')\r\n    dispatch({ type: EMPLOYEE_SIGNOUT })\r\n    document.location.href = '/home'\r\n  }\r\n}\r\n\r\nexport const adminGetTotalChargesAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_GET_ALL_CHARGES_REQUEST,\r\n    })\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/receptionist/totalCharges'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: ADMIN_GET_ALL_CHARGES_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: ADMIN_GET_ALL_CHARGES_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { employeeLogoutAction } from \"../actions/employeeActions\";\r\n\r\nconst { useSelector,useDispatch } = require(\"react-redux\");\r\n\r\nconst RecpHomeNavBar = (props) => {\r\n  const receptionist = JSON.parse(sessionStorage.getItem('emp_details'))\r\n  console.log(\"receptionist\",receptionist)\r\n  const dispatch = useDispatch()\r\n  const onLogout = () => {\r\n    dispatch(employeeLogoutAction())\r\n  };\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo01\"\r\n            aria-controls=\"navbarTogglerDemo01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <span className=\"navbar-brand\">Hospital Management System</span>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <Link to=\"/receptionist/home\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Home\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/receptionist/view-appointments\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                   View Appointments\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/receptionist/admit-patient\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Admit Patient\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/receptionist/discharge-patient\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Discharge Patient\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/receptionist/accept-payment\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Accept Payment\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n            <div>Welcome {receptionist.name}</div>\r\n            <div>\r\n              <button\r\n                onClick={onLogout}\r\n                className=\"btn btn-success mx-3 float-end\"\r\n                type=\"button\"\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default RecpHomeNavBar;\r\n","const Footer = () => {\r\n  return (\r\n    <div>\r\n      <footer className=\"footer\">\r\n        <div className=\"col-md-12 col-sm-12 border-top\">\r\n          <div className=\"col-md-4 col-sm-6\">\r\n            <div className=\"copyright-text\">\r\n              <p>Copyright &copy; 2022 Sunbeam</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-2 col-sm-2 text-align-center\">\r\n            <div className=\"angle-up-btn\">\r\n              <a\r\n                href=\"#top\"\r\n                className=\"smoothScroll wow fadeInUp\"\r\n                data-wow-delay=\"1.2s\">\r\n                <i className=\"fa fa-angle-up\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\nexport default Footer\r\n","const Home = () => {\r\n  return (\r\n    <div className=\"imagebcg\">\r\n      <section id=\"home\">\r\n        <div className=\"container \">\r\n          <div className=\"about-info heding\">\r\n            <h2 className=\"wow fadeInUp homeText\" data-wow-delay=\"0.6s\">\r\n              Welcome to Your Health Care Center\r\n            </h2>\r\n        </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\nexport default Home\r\n","import { Link } from 'react-router-dom'\r\nconst HomeNavBar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar  navbar-expand-lg navbar-dark bg-primary \">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo01\"\r\n            aria-controls=\"navbarTogglerDemo01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <Link to=\"/home\">\r\n              <span className=\"navbar-brand\" href=\"#\">\r\n                Home\r\n              </span>\r\n            </Link>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <Link to=\"/aboutUs\">\r\n                <li className=\"nav-item\">\r\n                  <span className=\"nav-link active\" aria-current=\"page\">\r\n                    About Us\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/doctors\">\r\n                <li className=\"nav-item\">\r\n                  <span className=\"nav-link active\">Doctors</span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/contacts\">\r\n                <li className=\"nav-item\">\r\n                  <span className=\"nav-link active\">Contact</span>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n\r\n            <div>\r\n              <Link to=\"/employee\">\r\n                <button className=\"btn btn-emp mx-3\" type=\"submit\">\r\n                  Employee Login\r\n                </button>\r\n              </Link>\r\n              <Link to=\"/patientSignIn\">\r\n                <button className=\"btn btn-appt mx-3\" type=\"submit\">\r\n                  Book Appointment\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  \r\n    </div>\r\n  )\r\n}\r\nexport default HomeNavBar\r\n","import Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\n\r\nconst AboutScreen = () => {\r\n  return (\r\n    <div className=\"container center \">\r\n      <Header title=\"About Us\" />\r\n      <section id=\"about\" className=\"about\">\r\n        <div className=\"row\">\r\n          <div className=\"wow fadeInUp  container\" data-wow-delay=\"0.8s\">\r\n            <p className=\"font-weight-bold text-dark about-font\">\r\n              Our group has over two decades of experience in the healthcare\r\n              sector, and is known for providing quality healthcare and valuable\r\n              experience to all domestic and international patients. Our\r\n              healthcare offerings are supported by a team of compassionate and\r\n              dedicated medical professionals who have rich knowledge and\r\n              experience in their respective domains. In addition, the company\r\n              is built on lasting value systems that focuses on excellence,\r\n              expertise, empathy and innovation. This approach has given us an\r\n              in-depth understanding of specific disorders and their treatments,\r\n              enabling us to focus on providing the best treatment options and\r\n              care for our patients.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default AboutScreen;\r\n","const Contact = () => {\r\n  return (\r\n    <div className=\"container center contact\" id=\"contact-sec\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-sm-6\">\r\n          <div className=\"footer-thumb\">\r\n            <h4 className=\"wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n              Contact Info\r\n            </h4>\r\n\r\n            <p>More colony, Jath , Jath road, Dist-Sangli</p>\r\n\r\n            <div className=\"contact-info\">\r\n              <p>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-telephone-fill mx-3\"\r\n                  viewBox=\"0 0 16 16\">\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    d=\"M1.885.511a1.745 1.745 0 0 1 2.61.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z\"\r\n                  />\r\n                </svg>{' '}\r\n                010-070-0170\r\n              </p>\r\n              <p>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-envelope-fill mx-3\"\r\n                  viewBox=\"0 0 16 16\">\r\n                  <path d=\"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555zM0 4.697v7.104l5.803-3.558L0 4.697zM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757zm3.436-.586L16 11.801V4.697l-5.803 3.546z\" />\r\n                </svg>\r\n                info@company.com\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 col-sm-6\">\r\n          <div className=\"footer-thumb\">\r\n            <div className=\"opening-hours\">\r\n              <h4 className=\"wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n                Opening Hours\r\n              </h4>\r\n              <p>\r\n                Monday - Friday <span>06:00 AM - 10:00 PM</span>\r\n              </p>\r\n              <p>\r\n                Saturday <span>09:00 AM - 08:00 PM</span>\r\n              </p>\r\n              <p>\r\n                Sunday <span>Closed</span>\r\n              </p>\r\n              <div className=\"social\">\r\n                <span>\r\n                  <i className=\"ri-twitter-fill mx-3\"></i>\r\n                </span>\r\n                <span>\r\n                  <i className=\"ri-facebook-fill mx-3\"></i>\r\n                </span>\r\n                <span>\r\n                  <i className=\"ri-instagram-fill mx-3\"></i>\r\n                </span>\r\n                <span>\r\n                  <i className=\"ri-linkedin-box-fill mx-3\"></i>{' '}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Contact\r\n","import Header from \"../components/Header\";\r\n\r\nconst DoctorScreen = () => {\r\n  return (\r\n    <div>\r\n      <section id=\"doctors\" className=\"doctors\">\r\n        <div className=\"container center\">\r\n          <div>\r\n            <Header title=\"Our Doctors\" />\r\n            <p>\r\n              Meet Our Doctors At HMS, we support you every step of the way\r\n              through your care. We’ve gathered a team of leading specialists\r\n              who are committed to providing you with the most intuitive and\r\n              comfortable treatments. The following list will help you to find\r\n              the doctor that is right for you.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"member d-flex align-items-start\">\r\n                <div className=\"pic\">\r\n                  <img\r\n                    src=\"assets/img/doctors/doctors-1.jpg\"\r\n                    className=\"img-fluid\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"member-info\">\r\n                  <h4>Walter White</h4>\r\n                  <span>Chief Medical Officer</span>\r\n                  <p>\r\n                    Walter White is associated with HMS since November 2005.He\r\n                    has an immense experience of 18yrs.\r\n                  </p>\r\n                  <div className=\"social\">\r\n                    <span href=\"\">\r\n                      <i className=\"ri-twitter-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      <i className=\"ri-facebook-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      <i className=\"ri-instagram-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      {\" \"}\r\n                      <i className=\"ri-linkedin-box-fill\"></i>{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-6 mt-4 mt-lg-0\">\r\n              <div className=\"member d-flex align-items-start\">\r\n                <div className=\"pic\">\r\n                  <img\r\n                    src=\"assets/img/doctors/doctors-2.jpg\"\r\n                    className=\"img-fluid\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"member-info\">\r\n                  <h4>Sarah Shitole</h4>\r\n                  <span>Anesthesiologist</span>\r\n                  <p>\r\n                    Sarah Shitole is associated with HMS since November 2005.She\r\n                    has an immense experience of 7yrs.\r\n                  </p>\r\n                  <div className=\"social\">\r\n                    <span href=\"\">\r\n                      <i className=\"ri-twitter-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      <i className=\"ri-facebook-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      <i className=\"ri-instagram-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      {\" \"}\r\n                      <i className=\"ri-linkedin-box-fill\"></i>{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-6 mt-4\">\r\n              <div className=\"member d-flex align-items-start\">\r\n                <div className=\"pic\">\r\n                  <img\r\n                    src=\"assets/img/doctors/doctors-3.jpg\"\r\n                    className=\"img-fluid\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"member-info\">\r\n                  <h4>Jaydeep Shitole</h4>\r\n                  <span>Cardiology</span>\r\n                  <p>\r\n                    Jaydeep Shitole is associated with HMS since November\r\n                    2005.He has an immense experience of 7yrs.\r\n                  </p>\r\n                  <div className=\"social\">\r\n                    <span href=\"\">\r\n                      <i className=\"ri-twitter-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      <i className=\"ri-facebook-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      <i className=\"ri-instagram-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      {\" \"}\r\n                      <i className=\"ri-linkedin-box-fill\"></i>{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-6 mt-4\">\r\n              <div className=\"member d-flex align-items-start\">\r\n                <div className=\"pic\">\r\n                  <img\r\n                    src=\"assets/img/doctors/doctors-4.jpg\"\r\n                    className=\"img-fluid\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"member-info\">\r\n                  <h4>Amanda Jepson</h4>\r\n                  <span>Neurosurgeon</span>\r\n                  <p>\r\n                    Amanda Jepson is associated with HMS since November 2005.He\r\n                    has an immense experience of 5yrs.\r\n                  </p>\r\n                  <div className=\"social\">\r\n                    <span href=\"\">\r\n                      <i className=\"ri-twitter-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      <i className=\"ri-facebook-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      <i className=\"ri-instagram-fill\"></i>\r\n                    </span>\r\n                    <span href=\"\">\r\n                      {\" \"}\r\n                      <i className=\"ri-linkedin-box-fill\"></i>{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default DoctorScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport { employeeSigninAction } from \"../actions/employeeActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EmployeeScreen = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const employeeSignin = useSelector((store) => store.employeeSignin);\r\n  const { loading, error, response } = employeeSignin;\r\n\r\n  const dispatch = useDispatch();\r\n  const onSignin = () => {\r\n    dispatch(employeeSigninAction(email, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response && response.status == \"200\") {\r\n      sessionStorage.setItem(\"emp_details\", JSON.stringify(response.data));\r\n      sessionStorage.setItem(\"isLoggedIn\", true);\r\n      if (response.data.role == \"DOCTOR\") {\r\n        props.history.push(\"/doctor\");\r\n      } else if (response.data.role == \"ADMIN\") {\r\n        props.history.push(\"/admin\");\r\n      } else if (response.data.role == \"RECEPTIONIST\") {\r\n        props.history.push(\"/receptionist\");\r\n      } else if (response.data.role == \"LABMANAGER\") {\r\n        props.history.push(\"/lab\");\r\n      }\r\n    } else if (response && response.status == \"error\") {\r\n      alert(response.error);\r\n    } else if (error) {\r\n      alert(error);\r\n    }\r\n  }, [loading, error, response]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"center-align fadeInDown\">\r\n        <h3 className=\"text-center\">Employee Signin</h3>\r\n        <div className=\"form box-shadow\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Email</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"hms@gmail.com\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Password</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"*****\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button\r\n            onClick={onSignin}\r\n            className=\"btn btn-success btn-lg btn-block\"\r\n          >\r\n            Signin\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {loading && <div className=\"text-center\">waiting for response</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeScreen;\r\n","export const PATIENT_SIGNIN_REQUEST = 'PATIENT_SIGNIN_REQUEST'\r\nexport const PATIENT_SIGNIN_SUCCESS = 'PATIENT_SIGNIN_SUCCESS'\r\nexport const PATIENT_SIGNIN_FAIL = 'PATIENT_SIGNIN_FAIL'\r\nexport const PATIENT_SIGNOUT = 'PATIENT_SIGNOUT'\r\n\r\nexport const PATIENT_SIGNUP_REQUEST = 'PATIENT_SIGNUP_REQUEST'\r\nexport const PATIENT_SIGNUP_SUCCESS = 'PATIENT_SIGNUP_SUCCESS'\r\nexport const PATIENT_SIGNUP_FAIL = 'PATIENT_SIGNUP_FAIL'\r\n\r\nexport const PATIENT_GET_DOC_REQUEST=\"PATIENT_GET_DOC_REQUEST\"\r\nexport const PATIENT_GET_DOC_SUCCESS=\"PATIENT_GET_DOC_SUCCESS\"\r\nexport const PATIENT_GET_DOC_FAIL=\"PATIENT_GET_DOC_FAIL\"\r\n\r\nexport const PATIENT_BOOK_Appointment_REQUEST=\"PATIENT_BOOK_Appointment_REQUEST\"\r\nexport const PATIENT_BOOK_Appointment_SUCCESS=\"PATIENT_BOOK_Appointment_SUCCESS\"\r\nexport const PATIENT_BOOK_Appointment_FAIL=\"PATIENT_BOOK_Appointment_FAIL\"\r\n\r\nexport const PATIENT_EDIT_PROFILE_REQUEST=\"PATIENT_EDIT_PROFILE_REQUEST\"\r\nexport const PATIENT_EDIT_PROFILE_SUCCESS=\"PATIENT_EDIT_PROFILE_SUCCESS\"\r\nexport const PATIENT_EDIT_PROFILE_FAIL=\"PATIENT_EDIT_PROFILE_FAIL\"\r\n\r\nexport const PATIENT_GET_PROFILE_REQUEST=\"PATIENT_GET_PROFILE_REQUEST\"\r\nexport const PATIENT_GET_PROFILE_SUCCESS=\"PATIENT_GET_PROFILE_SUCCESS\"\r\nexport const PATIENT_GET_PROFILE_FAIL=\"PATIENT_GET_PROFILE_FAIL\"\r\n\r\nexport const PATIENT_VIEW_PRESC_REQUEST = 'PATIENT_VIEW_PRESC_REQUEST'\r\nexport const PATIENT_VIEW_PRESC_SUCCESS = 'PATIENT_VIEW_PRESC_SUCCESS'\r\nexport const PATIENT_VIEW_PRESC_FAIL = 'PATIENT_VIEW_PRESC_FAIL'","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { patientSigninAction } from '../../actions/patientAction'\r\nimport Header from '../../components/Header'\r\n\r\nconst PatientSignInScreen = (props) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const patientSignin = useSelector((store) => store.patientSignin)\r\n  const { loading, error, response } = patientSignin\r\n\r\n  const dispatch = useDispatch()\r\n  const onSignin = () => {\r\n    dispatch(patientSigninAction(email, password))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (response && response.status == '200') {\r\n      sessionStorage.setItem('pat_info', JSON.stringify(response.data))\r\n      sessionStorage.setItem('isLoggedIn', true)\r\n      props.history.push('/bookAppointment')\r\n    } else if (response && response.status == 'error') {\r\n      alert(response.error)\r\n    } else if (error) {\r\n      alert(error)\r\n    }\r\n  }, [loading, error, response])\r\n\r\n  return (\r\n    <div>\r\n      <div className='center-align fadeInDown'>\r\n        <h3 className='text-center'>Patient Signin</h3>\r\n        <div className='form box-shadow'>\r\n          <div className='mb-3'>\r\n            <label className='form-label'>Email</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setEmail(e.target.value)\r\n              }}\r\n              type='email'\r\n              className='form-control'\r\n              placeholder='hms@gmail.com'\r\n            />\r\n          </div>\r\n          <div className='mb-3'>\r\n            <label className='form-label'>Password</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setPassword(e.target.value)\r\n              }}\r\n              className='form-control'\r\n              placeholder='*****'></input>\r\n          </div>\r\n        </div>\r\n        <div className='text-center'>\r\n          <button\r\n            onClick={onSignin}\r\n            className='btn btn-success btn-lg btn-block'>\r\n            Signin\r\n          </button>\r\n          <div>\r\n            New User? <Link to='/patientSignUp'>Signup here</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {loading && (\r\n        <div className='Container text-center'>waiting for response</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default PatientSignInScreen\r\n","import {\r\n  PATIENT_SIGNIN_REQUEST,\r\n  PATIENT_SIGNIN_SUCCESS,\r\n  PATIENT_SIGNIN_FAIL,\r\n  PATIENT_SIGNOUT,\r\n  PATIENT_SIGNUP_REQUEST,\r\n  PATIENT_SIGNUP_SUCCESS,\r\n  PATIENT_SIGNUP_FAIL,\r\n  PATIENT_GET_DOC_REQUEST,\r\n  PATIENT_GET_DOC_SUCCESS,\r\n  PATIENT_GET_DOC_FAIL,\r\n  PATIENT_BOOK_Appointment_REQUEST,\r\n  PATIENT_BOOK_Appointment_SUCCESS,\r\n  PATIENT_BOOK_Appointment_FAIL,\r\n  PATIENT_GET_PROFILE_REQUEST,\r\n  PATIENT_GET_PROFILE_SUCCESS,\r\n  PATIENT_GET_PROFILE_FAIL,\r\n  PATIENT_EDIT_PROFILE_REQUEST,\r\n  PATIENT_EDIT_PROFILE_SUCCESS,\r\n  PATIENT_EDIT_PROFILE_FAIL,\r\n  PATIENT_VIEW_PRESC_REQUEST,\r\n  PATIENT_VIEW_PRESC_SUCCESS,\r\n  PATIENT_VIEW_PRESC_FAIL,\r\n} from '../constants/patientConstants'\r\nimport axios from 'axios'\r\nimport {SPRINGURL} from \"../constants/URLConstants\"\r\n\r\nexport const patientSigninAction = (email, password) => {\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_SIGNIN_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      email,\r\n      password,\r\n    }\r\n    const url = SPRINGURL+'/patient/login'\r\n\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_SIGNIN_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_SIGNIN_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\nexport const patientSignupAction = (name, gender, email, password) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_SIGNUP_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      name,\r\n      gender,\r\n      email,\r\n      password,\r\n    }\r\n    const url = SPRINGURL+'/patient/register'\r\n\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_SIGNUP_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_SIGNUP_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\nexport const patientGetdoctors = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_GET_DOC_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL+'/patient/bookAppointment'\r\n\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_GET_DOC_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_GET_DOC_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\nexport const patientBookAppointment = (date, p_id, d_id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_BOOK_Appointment_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const body = {\r\n      apptDate: date,\r\n      apptPatient: {\r\n        id: p_id,\r\n      },\r\n      apptDoctor: {\r\n        id: d_id,\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL+'/patient/bookAppointment'\r\n\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_BOOK_Appointment_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_BOOK_Appointment_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const patientGetProfileAction = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_GET_PROFILE_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL+'/patient/editProfile/' + id\r\n\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_GET_PROFILE_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_GET_PROFILE_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const patientEditProfileAction = (\r\n  name,gender,email,password,city,age,contact,bloodGroup) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_EDIT_PROFILE_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const body = {name,gender,email,password,city,age,contact,bloodGroup}\r\n\r\n    const url = SPRINGURL+'/patient/editProfile'\r\n\r\n    axios\r\n      .put(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_EDIT_PROFILE_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_EDIT_PROFILE_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const patientGetPrescAction = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_VIEW_PRESC_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL+'/patient/viewPrescription/' + id\r\n\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_VIEW_PRESC_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_VIEW_PRESC_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const patientLogout = () => {\r\n  return (dispatch) => {\r\n    sessionStorage.removeItem('pat_info')    \r\n    sessionStorage.removeItem('isLoggedIn')\r\n    dispatch({ type: PATIENT_SIGNOUT })\r\n    document.location.href = '/home'\r\n  }\r\n}","import { Link } from 'react-router-dom'\r\nimport '../App.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { employeeLogoutAction } from \"../actions/employeeActions\";\r\n\r\nconst DoctorHomeNavBar = () => {\r\n  const dispatch = useDispatch()\r\n  const doctor = JSON.parse(sessionStorage.getItem('emp_details'))\r\n  const onLogout = () => {\r\n    dispatch(employeeLogoutAction())\r\n  }\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo01\"\r\n            aria-controls=\"navbarTogglerDemo01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <span className=\"navbar-brand\">Hospital Management System</span>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <Link to=\"/doctor/home\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\">\r\n                    Home\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/doctor/appointments\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\">\r\n                    View Appointment\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n            <div>Welcome {doctor.name} !</div>\r\n            <div>\r\n              <button\r\n                onClick={onLogout}\r\n                className=\"btn btn-success mx-3 float-end\"\r\n                type=\"button\">\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\nexport default DoctorHomeNavBar\r\n","const Profile = () => {\n  const admin = JSON.parse(sessionStorage.getItem(\"emp_details\"));\n  return (\n    <div className=\"page-content\">\n      <div className=\"padding\">\n        <div className=\"row container d-flex justify-content-center\">\n          <div className=\"col-xl-6 col-md-12\">\n            <div className=\"card user-card-full\">\n              <div className=\"row m-l-0 m-r-0\">\n                <div className=\"col-sm-4 bg-c-lite-green user-profile\">\n                  <div className=\"card-block text-center text-white\">\n                    <div className=\"m-b-25\">\n                      {\" \"}\n                      <img\n                        src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                        className=\"img-radius\"\n                        alt=\"User-Profile-Image\"\n                      />{\" \"}\n                    </div>\n                    <h6 className=\"f-w-600\">{admin.name}</h6>\n                    <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\n                  </div>\n                </div>\n                <div className=\"col-sm-8\">\n                  <div className=\"card-block\">\n                    <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">\n                      Id: {admin.id}\n                    </h6>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Role</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.role}</h6>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Email</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.email}</h6>\n                      </div>\n                    </div>\n                    <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600\"></h6>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Phone</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.contact}</h6>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Date of Birth</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.dob}</h6>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"card text-dark  mb-3 container profile\">\n        <div className=\"card-header\">Hii {admin.name}</div>\n        <div className=\"card-body\">\n          <h3 className=\"card-title\">Your Details:</h3>\n          <h5>Id:{admin.id}</h5>\n          <h5>Role:{admin.role}</h5>\n          <h5>Email:{admin.email}</h5>\n          <h5>Dob:{admin.dob}</h5>\n          <h5>Contact:{admin.contact}</h5>\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default Profile;\n","export const APPOINTMENT_FETCH_REQUEST = 'APPOINTMENT_FETCH_REQUEST'\r\nexport const APPOINTMENT_FETCH_SUCCESS = 'APPOINTMENT_FETCH_SUCCESS'\r\nexport const APPOINTMENT_FETCH_FAIL = 'APPOINTMENT_FETCH_FAIL'\r\nexport const APPOINTMENT_FETCH_RESET = 'APPOINTMENT_FETCH_RESET'\r\n\r\n\r\nexport const MEDICINELIST_FETCH_REQUEST = 'MEDICINELIST_FETCH_REQUEST'\r\nexport const MEDICINELIST_FETCH_SUCCESS = 'MEDICINELIST_FETCH_SUCCESS'\r\nexport const MEDICINELIST_FETCH_FAIL = 'MEDICINELIST_FETCH_FAIL'\r\nexport const MEDICINELIST_FETCH_RESET = 'MEDICINELIST_FETCH_RESET'\r\n\r\nexport const TESTLIST_FETCH_REQUEST = 'TESTLIST_FETCH_REQUEST'\r\nexport const TESTLIST_FETCH_SUCCESS = 'TESTLIST_FETCH_SUCCESS'\r\nexport const TESTLIST_FETCH_FAIL = 'TESTLIST_FETCH_FAIL'\r\nexport const TESTLIST_FETCH_RESET = 'TESTLIST_FETCH_RESET'\r\n\r\nexport const TESTPRESC_FETCH_REQUEST = 'TESTPRESC_FETCH_REQUEST'\r\nexport const TESTPRESC_FETCH_SUCCESS = 'TESTPRESC_FETCH_SUCCESS'\r\nexport const TESTPRESC_FETCH_FAIL = 'TESTPRESC_FETCH_FAIL'\r\nexport const TESTPRESC_FETCH_RESET = 'TESTPRESC_FETCH_RESET'\r\n\r\nexport const MEDPRESC_FETCH_REQUEST = 'MEDPRESC_FETCH_REQUEST'\r\nexport const MEDPRESC_FETCH_SUCCESS = 'MEDPRESC_FETCH_SUCCESS'\r\nexport const MEDPRESC_FETCH_FAIL = 'MEDPRESC_FETCH_FAIL'\r\nexport const MEDPRESC_FETCH_RESET = 'MEDPRESC_FETCH_RESET'","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAppointment } from '../../actions/DoctorAction'\nimport Header from '../../components/Header'\n\nconst DoctorAppointmentScreen = (props) => {\n  const doctor = useSelector((store) => store.employeeSignin)\n  const { response } = doctor\n  const docId = response && response.data && response.data.id\n  const dispatch = useDispatch()\n  const appointments = useSelector((store) => store.appointment)\n  const { error2, response2, loading2 } = appointments\n\n  // call this only once (when the page has loaded successfully)\n  useEffect(() => {\n    dispatch(getAppointment(docId))\n  }, [])\n\n  useEffect(() => {}, [error2, response2, loading2])\n  const create_med = () => {\n    console.log('pId ' + sessionStorage['patient_id'])\n    props.history.push('/doctor/med_list')\n  }\n  const create_test = () => {\n    console.log('pId ' + sessionStorage['patient_id'])\n    props.history.push('/doctor/test_list')\n  }\n  return (\n    <div className=\"container\">\n      <Header title=\"Appointments\" />\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Appointment id</th>\n            <th>Date</th>\n            <th>Patient id</th>\n            <th>Patient name</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response2 &&\n            response2.length > 0 &&\n            response2.map((appointment) => {\n              return (\n                <tr>\n                  <td>{appointment.id}</td>\n                  <td>{appointment.apptDate}</td>\n                  <td>{appointment.apptPatient.id}</td>\n                  <td>{appointment.apptPatient.name}</td>\n                  <td>\n                    <button\n                      class=\"btn btn-success\"\n                      onClick={() => {\n                        sessionStorage.setItem(\n                          'patient_id',\n                          appointment.apptPatient.id\n                        )\n                        create_med()\n                      }}>\n                      Create Medicine Prescription\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      class=\"btn btn-success\"\n                      onClick={() => {\n                        sessionStorage.setItem(\n                          'patient_id',\n                          appointment.apptPatient.id\n                        )\n                        create_test()\n                      }}>\n                      Create Test Prescription\n                    </button>\n                  </td>\n                  <td></td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default DoctorAppointmentScreen\n","import {\r\n  APPOINTMENT_FETCH_REQUEST,\r\n  APPOINTMENT_FETCH_SUCCESS,\r\n  APPOINTMENT_FETCH_FAIL,\r\n  APPOINTMENT_FETCH_RESET,\r\n  MEDICINELIST_FETCH_REQUEST,\r\n  MEDICINELIST_FETCH_SUCCESS,\r\n  MEDICINELIST_FETCH_FAIL,\r\n  TESTPRESC_FETCH_REQUEST,\r\n  TESTPRESC_FETCH_SUCCESS,\r\n  TESTPRESC_FETCH_FAIL,\r\n  TESTLIST_FETCH_REQUEST,\r\n  TESTLIST_FETCH_SUCCESS,\r\n  TESTLIST_FETCH_FAIL,\r\n  MEDPRESC_FETCH_REQUEST,\r\n  MEDPRESC_FETCH_SUCCESS,\r\n  MEDPRESC_FETCH_FAIL,\r\n} from '../constants/DoctorConstants'\r\nimport axios from 'axios'\r\nimport { SPRINGURL } from '../constants/URLConstants'\r\n\r\nexport const getAppointment = (docId) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: APPOINTMENT_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + `/doctor/appointments/${sessionStorage['docId']}`\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: APPOINTMENT_FETCH_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: APPOINTMENT_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getMedicines = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: MEDICINELIST_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/doctor/medicines'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: MEDICINELIST_FETCH_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: MEDICINELIST_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const testPresc = (tests_id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TESTPRESC_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      p_id: sessionStorage['patient_id'],\r\n      tests_id,\r\n    }\r\n    const url =\r\n      SPRINGURL + `/doctor/tests/prescription/${sessionStorage['docId']}`\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: TESTPRESC_FETCH_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: TESTPRESC_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getTests = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TESTLIST_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/doctor/tests'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: TESTLIST_FETCH_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: TESTLIST_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const medPresc = (medicines) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: MEDPRESC_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      pId: sessionStorage['patient_id'],\r\n      medicines,\r\n    }\r\n    const url =\r\n      SPRINGURL + `/doctor/medicine/prescription/${sessionStorage['docId']}`\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: MEDPRESC_FETCH_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: MEDPRESC_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getMedicines, medPresc } from '../../actions/DoctorAction'\nimport '../../App.css'\nimport Header from '../../components/Header'\n\nconst DoctorMedicineListScreen = (props) => {\n  const dispatch = useDispatch()\n  const medicines = useSelector((store) => store.medicine)\n  const { error, response, loading } = medicines\n\n\n  // call this only once (when the page has loaded successfully)\n  useEffect(() => {\n    dispatch(getMedicines())\n  }, [])\n\n  useEffect(() => {}, [error, response, loading])\n  let list = []\n  const med_presc = () => {\n    dispatch(medPresc(list))\n    props.history.push('/doctor/med_presc')\n  }\n  const add_to_list = (id, qty) => {\n    list = list.filter((item) => item != id)\n    list.push({\n      medicine: { id: id },\n      qty: qty,\n    })\n    console.log('lists :' + list)\n    console.log('qty :' + qty)\n  }\n  const remove_from_list = (id, qty) => {\n    list = list.filter((item) => item.medicine.id != id)\n\n    console.log('lists :' + list)\n    console.log('qty :' + qty)\n  }\n  return (\n    <div>\n      <Header title=\"List\" />\n      <div>\n        <div className=\"subheader \">Select Medicines</div>\n        <table className=\"table table-striped container\">\n          <thead>\n            <tr>\n              <th>Medicine id</th>\n              <th>Medicine name</th>\n\n              <th>Quantity</th>\n\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {response &&\n              response.length > 0 &&\n              response.map((note) => {\n                return (\n                  <tr id={note.id}>\n                    <td>{note.id}</td>\n                    <td>{note.name}</td>\n                    <td>\n                      <input id={note.name} type=\"number\" name=\"qty\" />\n                    </td>\n                    <td>\n                      <button\n                        class=\"btn btn-primary\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'lightblue'\n                          add_to_list(\n                            note.id,\n                            document.getElementById(note.name).value\n                          )\n                        }}>\n                        Add\n                      </button>\n                    </td>\n                    <td>\n                      <button\n                        class=\"btn btn-danger\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'white'\n                          remove_from_list(\n                            note.id,\n                            document.getElementById(note.name).value\n                          )\n                        }}>\n                        Remove\n                      </button>\n                    </td>\n                    <td></td>\n                  </tr>\n                )\n              })}\n          </tbody>\n        </table>\n      </div>\n      <div class=\"text-center\">\n        <button onClick={med_presc} className=\"btn btn-success float-center\">\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default DoctorMedicineListScreen\n","import Header from '../../components/Header'\nimport '../../App.css'\n\nimport {useSelector } from 'react-redux'\n\nconst DoctorMedPrescriptionScreen = (props) => {\n\n\n  const medicinePresc = useSelector((store) => store.medicinePresc)\n  const { response1 } = medicinePresc\n\n  return (\n    <div>\n      <Header title=\"Medicine Prescription\" />\n\n      <div className=\"container\">\n        {response1 && response1.data && (\n          <div>\n            <table>\n              <tr>\n                <td>Prescription id : {response1.data.id}</td>\n                <td></td>\n                <td>Date : {response1.data.prescDate}</td>\n              </tr>\n              <tr>\n                <td>Patient id : {response1.data.patient.id}</td>\n                <td></td>\n                <td>Patient name : {response1.data.patient.name}</td>\n              </tr>\n            </table>\n            <hr></hr>\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th>Sr.No.</th>\n                  <th>Name</th>\n                  <th>Quantity</th>\n                </tr>\n              </thead>\n              <tbody>\n                {response1.data.medicines.map((med, index) => {\n                  return (\n                    <tr>\n                      <td>{index + 1}</td>\n                      <td>{med.medicine.name}</td>\n                      <td>{med.qty}</td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n            <br></br>\n            <hr></hr>\n            <table className=\"prescdoc\">\n              <tr>Doctor name : {response1.data.doctor.name}</tr>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default DoctorMedPrescriptionScreen\n","import Header from '../../components/Header'\nimport '../../App.css'\n\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getTests,\n  testPresc,\n} from '../../actions/DoctorAction'\nconst DoctorTestListScreen = (props) => {\n  const dispatch = useDispatch()\n\n\n  const tests = useSelector((store) => store.test)\n  const { error, response, loading } = tests\n\n  useEffect(() => {\n    dispatch(getTests())\n  }, [])\n\n  useEffect(() => {}, [error, response, loading])\n  let list = []\n  const test_presc = () => {\n    dispatch(testPresc(list))\n    props.history.push('/doctor/test_presc')\n  }\n\n  const add_to_list = (id) => {\n    list = list.filter((item) => item != id)\n    list.push(id)\n  }\n  const remove_from_list = (id) => {\n    list = list.filter((item) => item != id)\n  }\n  return (\n    <div className=\"container\">\n      <Header title=\"List\" />\n      <div>\n        <div className=\"subheader \">Select Tests</div>\n        <table className=\"table table-striped \">\n          <thead>\n            <tr>\n              <th>Test id</th>\n              <th>Test name</th>\n              <th>Test charge</th>\n\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {response &&\n              response.length > 0 &&\n              response.map((note) => {\n                return (\n                  <tr id={note.id}>\n                    <td>{note.id}</td>\n                    <td>{note.name}</td>\n                    <td>{note.charges}</td>\n\n                    <td>\n                      <button\n                        class=\"btn btn-primary mx-3\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'lightblue'\n                          add_to_list(note.id)\n                        }}>\n                        Add\n                      </button>\n                      <button\n                        class=\"btn btn-danger\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'white'\n                          remove_from_list(note.id)\n                        }}>\n                        Remove\n                      </button>\n                    </td>\n                    <td></td>\n                  </tr>\n                )\n              })}\n          </tbody>\n        </table>\n      </div>\n      <div class=\"text-center\">\n        <button onClick={test_presc} className=\"btn btn-success float-center\">\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default DoctorTestListScreen\n","import Header from '../../components/Header'\nimport '../../App.css'\n\nimport { useSelector } from 'react-redux'\n\nconst DoctorTestPrescriptionScreen = (props) => {\n\n  const presc = useSelector((store) => store.prescription)\n  const { response1 } = presc\n\n  // call this only once (when the page has loaded successfully)\n  // console.log(\"new \"+response1.data)\n\n  return (\n    <div>\n      <Header title=\"Test Prescription\" />\n\n      <div className=\"container\">\n        {response1 && response1.data && (\n          <div>\n            <table>\n              <tr>\n                <td>Prescription id : {response1.data.id}</td>\n                <td></td>\n                <td>Date : {response1.data.prescDate}</td>\n              </tr>\n              <tr>\n                <td>Patient id : {response1.data.patient.id}</td>\n                <td></td>\n                <td>Patient name : {response1.data.patient.name}</td>\n              </tr>\n            </table>\n            <hr></hr>\n            <table className=\"table table-striped \">\n              <thead>\n                <tr>\n                  <th>Sr.No.</th>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {response1.data.tests.map((test, index) => {\n                  return (\n                    <tr>\n                      <td>{index + 1}</td>\n                      <td>{test.name}</td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n            <br></br>\n            <hr></hr>\n            <table className=\"prescdoc\">\n              <tr>Doctor name : {response1.data.doctor.name}</tr>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default DoctorTestPrescriptionScreen\n","import { useSelector } from 'react-redux'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport DoctorHomeNavBar from '../../components/DoctorHomeNavBar'\nimport Profile from '../AdminScreens/Profile'\nimport DoctorAppointmentScreen from './DoctorAppointmentScreen'\nimport DoctorMedicineListScreen from './DoctorMedicineListScreen'\nimport DoctorMedPrescriptionScreen from './DoctorMedPrescriptionScreen'\nimport DoctorTestListScreen from './DoctorTestListScreen'\nimport DoctorTestPrescriptionScreen from './DoctorTestPrescriptionScreen'\n\nconst DoctorScreen = (props) => {\n  const doctor = useSelector((store) => store.employeeSignin)\n  const { response } = doctor\n  const docId = response && response.data && response.data.id\n  console.log('Doc id ' + docId)\n  const doct = JSON.parse(sessionStorage.getItem('emp_details'))\n  console.log('Doc id ' + docId)\n  sessionStorage.setItem('docId', doct.id)\n\n  return (\n    <div>\n      <DoctorHomeNavBar />\n      <Switch>\n        <Route\n          path=\"/doctor/appointments\"\n          component={DoctorAppointmentScreen}\n        />\n        <Route exact path=\"/doctor\">\n          <Redirect to=\"/doctor/home\" />\n        </Route>\n        <Route path=\"/doctor/home\" component={Profile} />\n        <Route path=\"/doctor/med_list\" component={DoctorMedicineListScreen} />\n        <Route path=\"/doctor/test_list\" component={DoctorTestListScreen} />\n        <Route\n          path=\"/doctor/test_presc\"\n          component={DoctorTestPrescriptionScreen}\n        />\n        <Route\n          path=\"/doctor/med_presc\"\n          component={DoctorMedPrescriptionScreen}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default DoctorScreen\n","import { Link } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { employeeLogoutAction } from \"../actions/employeeActions\";\r\nconst AdminHomeNavBar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const admin = JSON.parse(sessionStorage.getItem(\"emp_details\"));\r\n  const onLogout = () => {\r\n    dispatch(employeeLogoutAction());\r\n  };\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo01\"\r\n            aria-controls=\"navbarTogglerDemo01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <span className=\"navbar-brand\">Hospital Management System</span>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <Link to=\"/admin/home\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Profile\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/admin/add-employee\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Add Employee\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/admin/view-employees\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    View Employees\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/admin/payment-history\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Payment History\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n            <div>Welcome {admin.name}!</div>\r\n            <div>\r\n              <button\r\n                onClick={onLogout}\r\n                className=\"btn btn-success mx-3 float-end\"\r\n                type=\"button\"\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default AdminHomeNavBar;\r\n","import { useState, useEffect } from \"react\";\nimport {employeeUpdateAction } from \"../../actions/employeeActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst { default: Header } = require(\"../../components/Header\");\n\nconst AdminUpdateEmployeeScreen = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const dispatch = useDispatch();\n  const emp_id=sessionStorage.getItem('emp_id')\n  const employee_details = {\n    name,\n    email,\n    password,\n    contact,\n  };\n  const employeeUpdate = useSelector((store) => store.updateEmployee);\n  const { loading, response, error } = employeeUpdate;\n\n  useEffect(() => {\n    if (response && response.status == \"200\") {\n      // user successfully got registered\n      props.history.push(\"/admin/view-employees\");\n    } else if (error) {\n      // there is an error while making the API call\n      console.log(error);\n      alert(\"error while making API call\");\n    }\n  }, [loading, response, error]);\n\n  const onUpdate = () => {\n    dispatch(employeeUpdateAction(emp_id,employee_details));\n  };\n  return (\n    <div>\n      <Header title=\"Update Employee Details\" />\n      <div className=\"form\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Name</label>\n          <input\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Email</label>\n          <input\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"test@test.com\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Password</label>\n          <input\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"*****\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Contact No</label>\n          <input\n            onChange={(e) => {\n              setContact(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        \n        <div className=\"text-center\">\n          <button onClick={onUpdate} className=\"btn btn-primary\">\n            Update\n          </button>\n        </div>\n      </div>\n\n      {employeeUpdate.loading && <div>waiting for result</div>}\n    </div>\n  );\n};\n\nexport default AdminUpdateEmployeeScreen;\n","import { useState, useEffect } from \"react\";\nimport { employeeSignupAction } from \"../../actions/employeeActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst { default: Header } = require(\"../../components/Header\");\n\nconst AdminAddEmployeeScreen = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const employee_details = {\n    name,\n    email,\n    password,\n    gender,\n    contact,\n    role,\n    dob,\n    department,\n  };\n  const employeeSignup = useSelector((store) => store.employeeSignup);\n  const { loading, response, error } = employeeSignup;\n\n  useEffect(() => {\n    if (response && response.status == \"200\") {\n      // user successfully got registered\n      alert(\"Employee added successfully\");\n      document.location.href = \"/admin/view-employees\";\n    } else if (error) {\n      // there is an error while making the API call\n      console.log(error);\n      alert(\"error while making API call\");\n    }\n  }, [loading, response, error]);\n\n  const onSignup = () => {\n    dispatch(employeeSignupAction(employee_details));\n  };\n  return (\n    <div className=\"container\">\n      <Header title=\"Add Employee\" />\n      <div className=\"form\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Name</label>\n              <input\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                className=\"form-control\"\n              ></input>\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"test@test.com\"\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Password</label>\n              <input\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"*****\"\n              ></input>\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Date of birth</label>\n              <input\n                onChange={(e) => {\n                  setDob(e.target.value);\n                }}\n                type=\"date\"\n                className=\"form-control\"\n              ></input>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Contact No</label>\n              <input\n                onChange={(e) => {\n                  setContact(e.target.value);\n                }}\n                className=\"form-control\"\n              ></input>\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Gender</label>\n              <select\n                onChange={(e) => {\n                  setGender(e.target.value);\n                }}\n                className=\"form-select\"\n                aria-label=\"Default select example\"\n              >\n                <option defaultValue>Select Gender</option>\n                <option value=\"MALE\">Male</option>\n                <option value=\"FEMALE\">Female</option>\n                <option value=\"OTHER\">Other</option>\n              </select>\n            </div>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Role</label>\n              <select\n                onChange={(e) => {\n                  setRole(e.target.value);\n                }}\n                className=\"form-select\"\n                aria-label=\"Default select example\"\n              >\n                <option defaultValue>Select Role</option>\n                <option value=\"DOCTOR\">Doctor</option>\n                <option value=\"RECEPTIONIST\">Receptionist</option>\n                <option value=\"LABMANAGER\">Lab Manager</option>\n              </select>\n            </div>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Department Id</label>\n              <select\n                onChange={(e) => {\n                  setDepartment(e.target.value);\n                }}\n                class=\"form-select\"\n                aria-label=\"Default select example\"\n              >\n                <option selected>Select Department Id</option>\n                <option value=\"1\">Admin</option>\n                <option value=\"2\">Cardiology</option>\n                <option value=\"3\">Neurology</option>\n                <option value=\"4\">Orthopedics</option>\n                <option value=\"5\">Opthalmology</option>\n                <option value=\"6\">Receptionist</option>\n                <option value=\"7\">LABMANAGER</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <button onClick={onSignup} className=\"btn btn-success btn-block\">\n              Add Employee\n            </button>\n          </div>\n        </div>\n      </div>\n      {employeeSignup.loading && <div>waiting for result</div>}\n    </div>\n  );\n};\n\nexport default AdminAddEmployeeScreen;\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Bar } from 'react-chartjs-2'\nimport { adminGetTotalChargesAction } from '../../actions/employeeActions'\nimport Header from '../../components/Header'\n\nconst AdminPaymentHistoryScreen = () => {\n  const totalCharges = useSelector((store) => store.totalCharges)\n  const { response } = totalCharges\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(adminGetTotalChargesAction())\n  }, [])\n  const data = response ? response.data : []\n  return (\n    <div className=\"container\">\n      <Header title=\"Payment History\" />\n      <Bar\n        className=\"container\"\n        data={{\n          labels: ['Cons Charges', 'Test Charges', 'Ward Charges'],\n          datasets: [\n            {\n              label: 'Revenue',\n              data: data,\n              backgroundColor: 'rgba(54, 162, 132, 0.2)',\n              borderColor: 'black',\n              borderWidth: 1,\n            },\n          ],\n        }}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n        width={100}\n        height={200}\n      />\n    </div>\n  )\n}\n\nexport default AdminPaymentHistoryScreen\n","import Header from \"../../components/Header\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  employeeDeleteAction,\n  viewEmployeesAction,\n} from \"../../actions/employeeActions\";\nconst AdminViewEmployeesScreen = (props) => {\n  const dispatch = useDispatch();\n  const viewEmployees = useSelector((store) => store.viewEmployees);\n  const { loading, response, error } = viewEmployees;\n\n  const deleteEmployee = useSelector((store) => store.deleteEmployee);\n  const { dloading, dresponse, derror } = deleteEmployee;\n  let message;\n  const onDelete = (emp_id) => {\n    dispatch(employeeDeleteAction(emp_id));\n  };\n\n  const onUpdate = (emp_id) => {\n    sessionStorage.setItem(\"emp_id\", emp_id);\n    props.history.push(\"/admin/update-employee\");\n  };\n\n  useEffect(() => {\n    dispatch(viewEmployeesAction());\n  }, []);\n  useEffect(() => {\n    if (dresponse && dresponse.status == \"200\") {\n      alert(\"Employee deleted successfully\");\n      document.location.href = \"/admin/view-employees\";\n      // props.history.push(\"/admin/view-employees\");\n    } else if (derror) {\n      alert(\"Cannot delete employee\");\n    }\n  }, [derror, dresponse, dloading]);\n\n  useEffect(() => {\n    // console.log(\"use effect list \", response);\n  }, [error, response, loading]);\n  return (\n    <div className=\"container\">\n      <Header className=\"text-center\" title=\"List of  Employees\" />\n      <table className=\"table table-striped container\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Role</th>\n            <th>Delete</th>\n            <th>Update</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response &&\n            response.data.list.length > 0 &&\n            response.data.list.map((e) => {\n              return (\n                <tr>\n                  <td>{e.id}</td>\n                  <td>{e.name}</td>\n                  <td>{e.role}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        onDelete(e.id);\n                      }}\n                      className=\"btn btn-danger\"\n                      type=\"button\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        onUpdate(e.id);\n                      }}\n                      className=\"btn btn-primary\"\n                      type=\"button\"\n                    >\n                      Update\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminViewEmployeesScreen;\n","import { Redirect, Route, Switch } from 'react-router-dom'\nimport AdminHomeNavBar from '../../components/AdminHomeNavBar'\nimport AdminUpdateEmployeeScreen from './AdminUpdateEmployeeScreen'\nimport AdminAddEmployeeScreen from './AdminAddEmployeeScreen'\nimport AdminPaymentHistoryScreen from './AdminPaymentHistoryScreen'\nimport AdminViewEmployeesScreen from './AdminViewEmployeesScreen'\nimport Profile from './Profile'\n\nconst AdminHomeScreen = () => {\n  return (\n    <div className=\"admin\">\n      <AdminHomeNavBar />\n      <Switch>\n        <Route exact path=\"/admin\">\n          <Redirect to=\"/admin/home\" />\n        </Route>\n        <Route path=\"/admin/home\" component={Profile} />\n        <Route path=\"/admin/add-employee\" component={AdminAddEmployeeScreen} />\n        <Route\n          path=\"/admin/view-employees\"\n          component={AdminViewEmployeesScreen}\n        />\n        <Route\n          path=\"/admin/payment-history\"\n          component={AdminPaymentHistoryScreen}\n        />\n        <Route\n          path=\"/admin/update-employee\"\n          component={AdminUpdateEmployeeScreen}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default AdminHomeScreen\n","export const RECP_GET_DOCTORS_REQUEST = \"RECP_GET_DOCTORS_REQUEST\";\r\nexport const RECP_GET_DOCTORS_SUCCESS = \"RECP_GET_DOCTORS_SUCCESS\";\r\nexport const RECP_GET_DOCTORS_FAIL = \"RECP_GET_DOCTORS_FAIL\";\r\n\r\nexport const RECP_VIEW_APPOINTMENTS_REQUEST = \"RECP_VIEW_APPOINTMENTS_REQUEST\";\r\nexport const RECP_VIEW_APPOINTMENTS_SUCCESS = \"RECP_VIEW_APPOINTMENTS_SUCCESS\";\r\nexport const RECP_VIEW_APPOINTMENTS_FAIL = \"RECP_VIEW_APPOINTMENTS_FAIL\";\r\nexport const RECP_VIEW_APPOINTMENTS_RESET = \"RECP_VIEW_APPOINTMENTS_RESET\";\r\n\r\nexport const RECP_ALL_APPOINTMENTS_REQUEST = \"RECP_ALL_APPOINTMENTS_REQUEST\";\r\nexport const RECP_ALL_APPOINTMENTS_SUCCESS = \"RECP_ALL_APPOINTMENTS_SUCCESS\";\r\nexport const RECP_ALL_APPOINTMENTS_FAIL = \"RECP_ALL_APPOINTMENTS_FAIL\";\r\nexport const RECP_ALL_APPOINTMENTS_RESET = \"RECP_ALL_APPOINTMENTS_RESET\";\r\n\r\nexport const RECP_ADMIT_PATIENT_REQUEST = \"RECP_ADMIT_PATIENT_REQUEST\";\r\nexport const RECP_ADMIT_PATIENT_SUCCESS = \"RECP_ADMIT_PATIENT_SUCCESS\";\r\nexport const RECP_ADMIT_PATIENT_FAIL = \"RECP_ADMIT_PATIENT_FAIL\";\r\n\r\nexport const RECP_GET_ADMIT_PATIENT_REQUEST = \"RECP_GET_ADMIT_PATIENT_REQUEST\";\r\nexport const RECP_GET_ADMIT_PATIENT_SUCCESS = \"RECP_GET_ADMIT_PATIENT_SUCCESS\";\r\nexport const RECP_GET_ADMIT_PATIENT_FAIL = \"RECP_GET_ADMIT_PATIENT_FAIL\";\r\n\r\nexport const RECP_DISCHARGE_PATIENT_REQUEST = \"RECP_DISCHARGE_PATIENT_REQUEST\";\r\nexport const RECP_DISCHARGE_PATIENT_SUCCESS = \"RECP_DISCHARGE_PATIENT_SUCCESS\";\r\nexport const RECP_DISCHARGE_PATIENT_FAIL = \"RECP_DISCHARGE_PATIENT_FAIL\";\r\n\r\nexport const RECP_MAKE_PAYMENT_REQUEST = \"RECP_MAKE_PAYMENT_REQUEST\";\r\nexport const RECP_MAKE_PAYMENT_SUCCESS = \"RECP_MAKE_PAYMENT_SUCCESS\";\r\nexport const RECP_MAKE_PAYMENT_FAIL = \"RECP_MAKE_PAYMENT_FAIL\";\r\n","import {\r\n  RECP_ADMIT_PATIENT_FAIL,\r\n  RECP_ADMIT_PATIENT_REQUEST,\r\n  RECP_ADMIT_PATIENT_SUCCESS,\r\n  RECP_ALL_APPOINTMENTS_FAIL,\r\n  RECP_ALL_APPOINTMENTS_REQUEST,\r\n  RECP_ALL_APPOINTMENTS_SUCCESS,\r\n  RECP_DISCHARGE_PATIENT_FAIL,\r\n  RECP_DISCHARGE_PATIENT_REQUEST,\r\n  RECP_DISCHARGE_PATIENT_SUCCESS,\r\n  RECP_GET_ADMIT_PATIENT_FAIL,\r\n  RECP_GET_ADMIT_PATIENT_REQUEST,\r\n  RECP_GET_ADMIT_PATIENT_SUCCESS,\r\n  RECP_GET_DOCTORS_FAIL,\r\n  RECP_GET_DOCTORS_REQUEST,\r\n  RECP_GET_DOCTORS_SUCCESS,\r\n  RECP_MAKE_PAYMENT_REQUEST,\r\n  RECP_MAKE_PAYMENT_SUCCESS,\r\n  RECP_MAKE_PAYMENT_FAIL,\r\n  RECP_VIEW_APPOINTMENTS_FAIL,\r\n  RECP_VIEW_APPOINTMENTS_REQUEST,\r\n  RECP_VIEW_APPOINTMENTS_SUCCESS,\r\n} from \"../constants/RecpConstants\";\r\nimport axios from \"axios\";\r\nimport {SPRINGURL} from \"../constants/URLConstants\"\r\n\r\nexport const recpGetDoctorsAction = () => {\r\n  \r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_GET_DOCTORS_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/appointments\";\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_GET_DOCTORS_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_GET_DOCTORS_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpViewAppointmentsAction = (doc_id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_VIEW_APPOINTMENTS_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/appointments/\" + doc_id;\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_VIEW_APPOINTMENTS_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_VIEW_APPOINTMENTS_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpGetAllAppointmentsAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_ALL_APPOINTMENTS_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/allAppointments\";\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_ALL_APPOINTMENTS_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_ALL_APPOINTMENTS_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpAdmitPatientAction = (appointment, admitDate, department) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_ADMIT_PATIENT_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const admitPatDetails = { appointment, admitDate, department };\r\n    const url = SPRINGURL+\"/receptionist/admitPatient\";\r\n    axios\r\n      .post(url, admitPatDetails, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_ADMIT_PATIENT_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_ADMIT_PATIENT_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpGetAdmitPatientsAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_GET_ADMIT_PATIENT_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/dischargePatient\";\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_GET_ADMIT_PATIENT_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_GET_ADMIT_PATIENT_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpDischargePatientAction = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_DISCHARGE_PATIENT_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/dischargePatient/\" + id;\r\n    axios\r\n      .put(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_DISCHARGE_PATIENT_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_DISCHARGE_PATIENT_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpMakePaymentAction = (\r\n  patientId,\r\n  apptId,\r\n  wardCharges,\r\n  testCharges\r\n) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_MAKE_PAYMENT_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = { apptId, patientId, testCharges, wardCharges };\r\n    const url = SPRINGURL+\"/receptionist/acceptPayment\";\r\n    axios\r\n      .put(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_MAKE_PAYMENT_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_MAKE_PAYMENT_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  recpGetAllAppointmentsAction,\r\n  recpMakePaymentAction,\r\n} from \"../../actions/recpActions\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst RecpAcceptPayment = (props) => {\r\n  const [patientId, setPatientId] = useState(\"\");\r\n  const [apptId, setApptId] = useState(\"\");\r\n  const [wardCharges, setWardCharges] = useState(\"\");\r\n  const [testCharges, setTestCharges] = useState(\"\");\r\n  let appointments = [];\r\n  const getAppointment = (aId) => {\r\n    appointments = aresponse.data.filter((a) => a.id == aId);\r\n    setPatientId(appointments.pop().apptPatient.id);\r\n  };\r\n  const allAppts = useSelector((store) => store.recpAllAppointments);\r\n  const { aresponse } = allAppts;\r\n  const recpMakePayment = useSelector((store) => store.recpMakePayment);\r\n  let { merror, mresponse } = recpMakePayment;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(recpGetAllAppointmentsAction());\r\n  }, []);\r\n\r\n  const onPayment = () => {\r\n    dispatch(\r\n      recpMakePaymentAction(patientId, apptId, wardCharges, testCharges)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mresponse && mresponse.status == \"202\") {\r\n      alert(\"Payment successfull\");\r\n      document.location.href = \"/receptionist/home\";\r\n    } else if (merror) {\r\n      alert(\"Payment failed....\");\r\n    }\r\n  }, [merror, mresponse]);\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Accept Payment\" />\r\n      <div className=\"form\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Appt Id</label>\r\n          <select\r\n            onChange={(e) => {\r\n              getAppointment(e.target.value);\r\n              setApptId(e.target.value);\r\n            }}\r\n            className=\"form-select\"\r\n          >\r\n            <option defaultValue>Select appointment id</option>\r\n            {aresponse &&\r\n              aresponse.data.length > 0 &&\r\n              aresponse.data.map((a) => {\r\n                return <option value={a.id}>{a.id}</option>;\r\n              })}\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Patient Id</label>\r\n          <select\r\n            disabled\r\n            onChange={(e) => {\r\n              setPatientId(e.target.value);\r\n            }}\r\n            className=\"form-select\"\r\n          >\r\n            <option defaultValue=\"\" value={patientId}>\r\n              {patientId}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Ward Charges</label>\r\n          <input\r\n            defaultValue={0.0}\r\n            onChange={(e) => {\r\n              setWardCharges(e.target.value);\r\n            }}\r\n            className=\"form-control\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Lab Charges</label>\r\n          <input\r\n            defaultValue={0.0}\r\n            onChange={(e) => {\r\n              setTestCharges(e.target.value);\r\n            }}\r\n            className=\"form-control\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button onClick={onPayment} className=\"btn btn-success btn-block \">\r\n            Make Payment\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecpAcceptPayment;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  recpAdmitPatientAction,\r\n  recpGetAllAppointmentsAction,\r\n} from \"../../actions/recpActions\";\r\nimport Header from \"../../components/Header\";\r\nimport { useEffect, useState } from \"react\";\r\nconst RecpAdmitPatient = (props) => {\r\n  const [admitDate, setAdmitDate] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const allAppts = useSelector((store) => store.recpAllAppointments);\r\n  const {  aresponse } = allAppts;\r\n  \r\n  const dispatch = useDispatch();\r\n  const onAdmit = (id) => {\r\n    console.log(\"id\", id);\r\n    dispatch(recpAdmitPatientAction(id, admitDate, department));\r\n    //  window.location.reload(true)\r\n  };\r\n  useEffect(() => {}, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(recpGetAllAppointmentsAction());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Admit Patient\" />\r\n      {aresponse && aresponse.data.length > 0 ? (\r\n        <div className=\"form\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Select Date</label>\r\n            <input\r\n              required\r\n              onChange={(e) => {\r\n                setAdmitDate(e.target.value);\r\n              }}\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Department Id</label>\r\n            <select\r\n              required\r\n              onChange={(e) => {\r\n                setDepartment(e.target.value);\r\n              }}\r\n              className=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected>Select Department Id</option>\r\n              <option value=\"2\">Cardiology</option>\r\n              <option value=\"3\">Neurology</option>\r\n              <option value=\"4\">Orthopedics</option>\r\n              <option value=\"5\">Opthalmology</option>\r\n            </select>\r\n          </div>\r\n\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Appt Id</th>\r\n                <th>Appt Date</th>\r\n                <th>Patient Name</th>\r\n                <th>Admit</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {aresponse && aresponse.data.map((e) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{e.id}</td>\r\n                    <td>{e.apptDate}</td>\r\n                    <td>{e.apptPatient.name}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => {\r\n                          onAdmit(e.id);\r\n                        }}\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        Admit\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <h3>No Patient to be admitted</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecpAdmitPatient;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  recpDischargePatientAction,\r\n  recpGetAdmitPatientsAction,\r\n} from \"../../actions/recpActions\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst RecpDischargePatient = (props) => {\r\n  const dischargePat = useSelector((store) => store.recpDischargePatient);\r\n  const { derror, dresponse, dloading } = dischargePat;\r\n  let isDischarged = false;\r\n  const admitPatients = useSelector((store) => store.recpGetAdmitPatients);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(recpGetAdmitPatientsAction());\r\n  }, [isDischarged]);\r\n\r\n  useEffect(() => {\r\n    if (dresponse && dresponse.status == \"200\") {\r\n      document.location.href = \"/receptionist/discharge-patient\";\r\n      alert(\"Patient discharged successfully\");\r\n    }else if(derror){\r\n      alert(derror);\r\n    }\r\n  }, [derror, dresponse, dloading]);\r\n\r\n  const onDischarge = (id) => {\r\n    isDischarged = true;\r\n    dispatch(recpDischargePatientAction(id));\r\n    // window.location.reload(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header title=\"Discharge Patient\" />\r\n      <div className=\"container\">\r\n        {admitPatients.response &&\r\n        admitPatients.response.data.list.length > 0 ? (\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Aadmit Date</th>\r\n                <th>Patient Id</th>\r\n                <th>Dept Id</th>\r\n                <th>Discharge</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admitPatients.response.data.list.map((e) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{e.id}</td>\r\n                    <td>{e.admitDate}</td>\r\n                    <td>{e.patient}</td>\r\n                    <td>{e.department}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => {\r\n                          onDischarge(e.id);\r\n                        }}\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        Discharge\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <h3>No Patient is admitted</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RecpDischargePatient;\r\n","import Header from \"../../components/Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  recpGetDoctorsAction,\r\n  recpViewAppointmentsAction,\r\n} from \"../../actions/recpActions\";\r\n\r\nconst RecpViewAppointments = (props) => {\r\n  const [doc_id, setDoc_id] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const doctors = useSelector((store) => store.recpDoctors);\r\n\r\n  const appointments = useSelector((store) => store.recpAppointments);\r\n  const { response } = appointments;\r\n\r\n  useEffect(() => {\r\n    dispatch(recpGetDoctorsAction());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(recpViewAppointmentsAction(doc_id));\r\n  }, [doc_id]);\r\n\r\n  return (\r\n    <div className=\"recp-view-appt container\">\r\n      <Header title=\"Today's All Appointments\" />\r\n      <div>\r\n        <label className=\"form-label\">Select Doctor</label>\r\n        <select\r\n          onChange={(e) => {\r\n            setDoc_id(e.target.value);\r\n          }}\r\n          className=\"form-select\"\r\n          aria-label=\"Default select example\"\r\n        >\r\n          <option defaultValue>Select Doctor</option>\r\n          {doctors.dresponse &&\r\n            doctors.dresponse.data.map((d) => {\r\n              return <option value={d.id}>{d.name}</option>;\r\n            })}\r\n        </select>\r\n      </div>\r\n      {doc_id &&\r\n      appointments.response &&\r\n      appointments.response.data.length > 0 ? (\r\n        <div>\r\n          <h3 className=\"title\">Appointments</h3>\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>App Id</th>\r\n                <th>App date</th>\r\n                <th>Patient Name</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {response.data.map((app) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{app.id}</td>\r\n                    <td>{app.apptDate}</td>\r\n                    {app.apptPatient && <td>{app.apptPatient.name}</td>}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <h3 className=\"text-center\">No Appointments for the doctor today</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecpViewAppointments;\r\n","import { Redirect, Route, Switch } from 'react-router-dom'\r\nimport RecpAcceptPayment from './RecpAcceptPayment'\r\nimport RecpAdmitPatient from './RecpAdmitPatient'\r\nimport RecpDischargePatient from './RecpDischargePatient'\r\nimport RecpViewAppointments from './RecpViewAppointments'\r\n\r\nimport Profile from '../AdminScreens/Profile'\r\n\r\nconst { default: RecpHomeNavBar } = require('../../components/RecpHomeNavBar')\r\n\r\nconst RecpHomeScreen = (props) => {\r\n  return (\r\n    <div>\r\n      <RecpHomeNavBar />\r\n      <Switch>\r\n        <Route exact path=\"/receptionist\">\r\n          <Redirect to=\"/receptionist/home\" />\r\n        </Route>\r\n        <Route path=\"/receptionist/home\" component={Profile} />\r\n        <Route\r\n          path=\"/receptionist/view-appointments\"\r\n          component={RecpViewAppointments}\r\n        />\r\n        <Route\r\n          path=\"/receptionist/accept-payment\"\r\n          component={RecpAcceptPayment}\r\n        />\r\n        <Route\r\n          path=\"/receptionist/admit-patient\"\r\n          component={RecpAdmitPatient}\r\n        />\r\n        <Route\r\n          path=\"/receptionist/discharge-patient\"\r\n          component={RecpDischargePatient}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecpHomeScreen\r\n","import { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { employeeLogoutAction } from \"../actions/employeeActions\";\r\nimport \"../App.css\";\r\n\r\nconst LabNavBar = (props) => {\r\n  const dispatch= useDispatch()\r\n  const Labmgr = JSON.parse(sessionStorage.getItem('emp_details'))\r\n  const onLogout = () => {\r\n      dispatch(employeeLogoutAction())\r\n  }\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo01\"\r\n            aria-controls=\"navbarTogglerDemo01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <span className=\"navbar-brand\">Welcome to Hospital</span>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <Link to=\"/lab/home\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\t\r\n                    Home\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/lab/viewPrescriptions\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    View Prescriptions\r\n                  </span>\r\n                </li>\r\n              </Link>             \r\n            </ul>\r\n            <div>Welcome {Labmgr.name} </div>\r\n            <div>\r\n              <button onClick={onLogout} className=\"btn btn-success mx-3 float-end\" type=\"button\">\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default LabNavBar;\r\n","import Header from \"../../components/Header\";\nimport LabNavBar from \"../../components/LabNavBar\";\n\nconst LabHomeScreen = () => {\n  const user = JSON.parse(sessionStorage.getItem(\"emp_details\"));\n  return (\n    <div>\n      <LabNavBar />\n      <div className=\"page-content\">\n        <div className=\"padding\">\n          <div className=\"row container d-flex justify-content-center\">\n            <div className=\"col-xl-6 col-md-12\">\n              <div className=\"card user-card-full\">\n                <div className=\"row m-l-0 m-r-0\">\n                  <div className=\"col-sm-4 bg-c-lite-green user-profile\">\n                    <div className=\"card-block text-center text-white\">\n                      <div className=\"m-b-25\">\n                        {\" \"}\n                        <img\n                          src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                          className=\"img-radius\"\n                          alt=\"User-Profile-Image\"\n                        />{\" \"}\n                      </div>\n                      <h6 className=\"f-w-600\">{user.name}</h6>\n                      <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-8\">\n                    <div className=\"card-block\">\n                      <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">\n                        Id: {user.id}\n                      </h6>\n                      <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Role</p>\n                          <h6 className=\"text-muted f-w-400\">{user.role}</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Email</p>\n                          <h6 className=\"text-muted f-w-400\">{user.email}</h6>\n                        </div>\n                      </div>\n                      <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600\"></h6>\n                      <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Phone</p>\n                          <h6 className=\"text-muted f-w-400\">{user.contact}</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Date of Birth</p>\n                          <h6 className=\"text-muted f-w-400\">{user.dob}</h6>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default LabHomeScreen;\n","export const LAB_VIEW_PRESC_REQUEST=\"LAB_VIEW_PRESC_REQUEST\"\r\nexport const LAB_VIEW_PRESC_SUCCESS=\"LAB_VIEW_PRESC_SUCCESS\"\r\nexport const LAB_VIEW_PRESC_FAIL=\"LAB_VIEW_PRESC_FAIL\"","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { labManagerViewPrescriptionAction } from \"../../actions/labManagerActios\";\nimport Header from \"../../components/Header\";\nimport LabNavBar from \"../../components/LabNavBar\";\n\nconst LabManagerViewPrescScreen = (props) => {\n  const [pId, setP_Id] = useState(\"\");\n  const dispatch = useDispatch();\n  const LabViewPresc = useSelector((store) => store.labManagerviewPresc);\n  const { error, loading, response } = LabViewPresc;\n\n  const onViewPrescription = () => {\n    dispatch(labManagerViewPrescriptionAction(pId));\n  };\n\n  useEffect(() => {}, [error, loading, response]);\n  \n  // useEffect(() => {\n  //   dispatch(labManagerViewPrescriptionAction(pId))\n  // }, [])\n\n\n  return (\n    <div>\n      <LabNavBar />\n      <Header title=\"Prescriptions\" />\n      <div className=\"form\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Enter Patient Id</label>\n          <input\n            onChange={(e) => {\n              setP_Id(e.target.value);\n            }}\n            type=\"number\"\n            className=\"form-control\"\n            placeholder=\"Patient id\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <button onClick={onViewPrescription} className=\"btn btn-success\">\n            View Prescription\n          </button>\n        </div>\n      </div>\n      <div>\n        {response && (\n          <table className=\"table table-striped container\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Recommended By Dr.</th>\n                <th>Date</th>\n                <th>tests</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <h5>{response && response.data.patient}</h5>\n                </td>\n                <td>\n                  <h5>{response && response.data.doctor}</h5>\n                </td>\n                <td>\n                  <h5>{response && response.data.prescDate}</h5>\n                </td>\n                {response &&\n                  response.data.tests.map((test, index) => (\n                    <tr>\n                      <td>\n                        <h5>{index + 1}. </h5>\n                      </td>\n                      <td>\n                        <h5>{test.name}</h5>\n                      </td>\n                    </tr>\n                  ))}\n              </tr>\n            </tbody>\n          </table>\n        )}\n      </div>\n      {!response && (\n        <div className=\"container text-center\">No Prescriptions</div>\n      )}\n    </div>\n  );\n};\nexport default LabManagerViewPrescScreen;\n","import axios from 'axios'\r\nimport { LAB_VIEW_PRESC_FAIL, LAB_VIEW_PRESC_REQUEST, LAB_VIEW_PRESC_SUCCESS } from '../constants/labManagerConstants'\r\nimport {SPRINGURL} from \"../constants/URLConstants\"\r\n\r\nexport const labManagerViewPrescriptionAction = (id) => {\r\n  \r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LAB_VIEW_PRESC_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL+'/lab/viewTestPresc/' + id\r\n\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: LAB_VIEW_PRESC_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: LAB_VIEW_PRESC_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { patientSignupAction } from '../../actions/patientAction'\r\nimport Header from '../../components/Header'\r\n\r\nconst PatientSignUpScreen = (props) => {\r\n  const [name, setName] = useState('')\r\n  const [gender, setGender] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const patientSignUp = useSelector((store) => store.patientSignup)\r\n  const { loading, error, response } = patientSignUp\r\n\r\n  const dispatch = useDispatch()\r\n  const onSignup = () => {\r\n    dispatch(patientSignupAction(name, gender, email, password))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (response && response.status == '200') {\r\n      props.history.push('/patientSignIn')\r\n    } else if (response && response.status == 'error') {\r\n      alert(response.error)\r\n    } else if (error) {\r\n      alert(error)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Header title='Sign Up' />\r\n      <div className='form'>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Name</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setName(e.target.value)\r\n            }}\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Your name'\r\n          />\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Gender</label>\r\n          <select\r\n            onChange={(e) => {\r\n              setGender(e.target.value)\r\n            }}\r\n            class='form-select'\r\n            aria-label='Default select example'>\r\n            <option selected>Select Gender</option>\r\n            <option value='MALE'>Male</option>\r\n            <option value='FEMALE'>Female</option>\r\n            <option value='OTHER'>Other</option>\r\n          </select>\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Email</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setEmail(e.target.value)\r\n            }}\r\n            type='email'\r\n            className='form-control'\r\n            placeholder='hms@gmail.com'\r\n          />\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Password</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setPassword(e.target.value)\r\n            }}\r\n            className='form-control'\r\n            placeholder='*****'></input>\r\n        </div>\r\n        <div className='mb-3'>\r\n          <button onClick={onSignup} className='btn btn-success'>\r\n            Sign Up\r\n          </button>\r\n          <div className='float-end'>\r\n            Already have account? <Link to='/patientSignIn'>SignIn here</Link>\r\n          </div>\r\n        </div>\r\n        {loading && (\r\n          <div className='container text-center'>waiting for response</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default PatientSignUpScreen\r\n","import { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport '../App.css'\r\nimport { patientLogout } from '../actions/patientAction'\r\nconst PatientNavBar = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onLogout = () => {\r\n    dispatch(patientLogout())\r\n  }\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo01\"\r\n            aria-controls=\"navbarTogglerDemo01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <span className=\"navbar-brand\">Welcome to Hospital</span>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <Link to=\"/patientHome\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\">\r\n                    Home\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/patient/viewPrescription\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\">\r\n                    View Prescriptions\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/bookAppointment\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\">\r\n                    Book Appointment\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n\r\n              <Link to=\"/patient/editProfile\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\">\r\n                    edit profile\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n            <div>Welcome {props.name}</div>\r\n            <div>\r\n              <button\r\n                onClick={onLogout}\r\n                className=\"btn btn-success mx-3 float-end\"\r\n                type=\"button\">\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\nexport default PatientNavBar\r\n","import PatientNavBar from \"../../components/PatientNavBar\";\r\n\r\nconst PatientHomeScreen = (props) => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"pat_info\"));\r\n  return (\r\n    <div>\r\n      <PatientNavBar name={user.name} />\r\n      <div className=\"page-content\">\r\n        <div className=\"padding\">\r\n          <div className=\"row container d-flex justify-content-center\">\r\n            <div className=\"col-xl-6 col-md-12\">\r\n              <div className=\"card user-card-full\">\r\n                <div className=\"row m-l-0 m-r-0\">\r\n                  <div className=\"col-sm-4 bg-c-lite-green user-profile\">\r\n                    <div className=\"card-block text-center text-white\">\r\n                      <div className=\"m-b-25\">\r\n                        {\" \"}\r\n                        <img\r\n                          src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\r\n                          className=\"img-radius\"\r\n                          alt=\"User-Profile-Image\"\r\n                        />{\" \"}\r\n                      </div>\r\n                      <h6 className=\"f-w-600\">{user.name}</h6>\r\n                      <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-8\">\r\n                    <div className=\"card-block\">\r\n                      <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">\r\n                        Id: {user.id}\r\n                      </h6>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                          <p className=\"m-b-10 f-w-600\">Role</p>\r\n                          <h6 className=\"text-muted f-w-400\">Patient</h6>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                          <p className=\"m-b-10 f-w-600\">Email</p>\r\n                          <h6 className=\"text-muted f-w-400\">{user.email}</h6>\r\n                        </div>\r\n                      </div>\r\n                      <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600\"></h6>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                          <p className=\"m-b-10 f-w-600\">Phone</p>\r\n                          <h6 className=\"text-muted f-w-400\">{user.contact}</h6>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                          <p className=\"m-b-10 f-w-600\">City</p>\r\n                          <h6 className=\"text-muted f-w-400\">{user.city}</h6>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PatientHomeScreen;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  patientGetProfileAction,\r\n  patientEditProfileAction,\r\n} from \"../../actions/patientAction\";\r\nimport Header from \"../../components/Header\";\r\nimport PatientNavBar from \"../../components/PatientNavBar\";\r\n\r\nconst PatientEditProfileScreen = (props) => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"pat_info\"));\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [age, setAge] = useState();\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [bloodGroup, setBloodGroup] = useState(\"\");\r\n\r\n  const patientGetProfile = useSelector((store) => store.patientGetprofile);\r\n  const { loading, error, response } = patientGetProfile;\r\n\r\n  const patientEditProfile = useSelector((store) => store.patientEditprofile);\r\n  const { eloading, eerror, eresponse } = patientEditProfile;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(patientGetProfileAction(user.id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setName(response && response.data.name);\r\n    setGender(response && response.data.gender);\r\n    setEmail(response && response.data.email);\r\n    setPassword(response && response.data.password);\r\n    setCity(response && response.data.city);\r\n    setAge(response && response.data.age);\r\n    setPhone(response && response.data.phone);\r\n    setBloodGroup(response && response.data.bloodGroup);\r\n  }, [response]);\r\n\r\n  const onUpdate = () => {\r\n    dispatch(\r\n      // console.log(\r\n      //   'my data ',\r\n      //   name,\r\n      //   gender,\r\n      //   email,\r\n      //   password,\r\n      //   city,\r\n      //   age,\r\n      //   contact,\r\n      //   bloodGroup\r\n      // ),\r\n      patientEditProfileAction(\r\n        name,\r\n        gender,\r\n        email,\r\n        password,\r\n        city,\r\n        age,\r\n        phone,\r\n        bloodGroup\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eresponse && eresponse.status == \"200\") {\r\n      alert(\"profile updated successfully\");\r\n      props.history.push(\"/patientHome\");\r\n    } else if (eresponse && eresponse.status == \"error\") {\r\n      alert(eresponse.error);\r\n    } else if (error) {\r\n      alert(error);\r\n    }\r\n  }, [eloading, eerror, eresponse]);\r\n  return (\r\n    <div>\r\n      <PatientNavBar name={user.name} />\r\n      <div className=\"form edit-profile\">\r\n        <Header title=\"Edit Profile\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                defaultValue={name}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                defaultValue={email}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Age</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setAge(e.currentTarget.value);\r\n                }}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                defaultValue={age}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Blood Group</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setBloodGroup(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                defaultValue={bloodGroup}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Gender</label>\r\n              <select\r\n                onChange={(e) => {\r\n                  setGender(e.target.value);\r\n                }}\r\n                className=\"form-select\"\r\n                aria-label=\"Default select example\"\r\n                readOnly={true}\r\n              >\r\n                <option defaultValue={gender}>{gender}</option>\r\n                <option value=\"MALE\">Male</option>\r\n                <option value=\"FEMALE\">Female</option>\r\n                <option value=\"OTHER\">Other</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Password</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n                className=\"form-control\"\r\n                placeholder=\"*****\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Phone</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setPhone(e.currentTarget.value);\r\n                }}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                defaultValue={phone}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">City</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setCity(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                defaultValue={city}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <button\r\n              onClick={onUpdate}\r\n              className=\"btn btn-success btn-lg btn-block\"\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n          {loading && <div>waiting for response</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PatientEditProfileScreen;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { patientGetPrescAction } from '../../actions/patientAction'\r\nimport Header from '../../components/Header'\r\nimport PatientNavBar from '../../components/PatientNavBar'\r\n\r\nconst PatientViewPrescScreen = () => {\r\n  const user = JSON.parse(sessionStorage.getItem('pat_info'))\r\n  const prescriptions = useSelector((store) => store.patientViewPrescription)\r\n  const { response } = prescriptions\r\n\r\n  //const[prescription,setPrescription]=useState('')\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(patientGetPrescAction(user.id))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <PatientNavBar name={user.name} />\r\n      <Header title=\"My prescriptions\" />\r\n\r\n      <table className=\"table table-striped container\">\r\n        <thead>\r\n          <tr>\r\n            <th>Number</th>\r\n            <th>Date</th>\r\n            <th>Doctor</th>\r\n            <th>Details</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {response &&\r\n            response.data &&\r\n            response.data.length > 0 &&\r\n            response.data.map((presc, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{presc.prescDate}</td>\r\n                  <td>Dr. {presc.name}</td>\r\n                  <td>\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>No.</th>\r\n                          <th>Medicine Name</th>\r\n                          <th>Qty</th>\r\n                        </tr>\r\n                      </thead>\r\n                      {presc.medicines.map((med, index2) => {\r\n                        return (\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>{index2 + 1}</td>\r\n                              <td>{med.medicine.name}</td>\r\n                              <td>{med.qty}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        )\r\n                      })}\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nexport default PatientViewPrescScreen\r\n","export const PAYMENT_REQ=\"PAYMENT_REQ\"\r\nexport const PAYMENT_SUCC=\"PAYMENT_SUCC\"\r\nexport const PAYMENT_FAIL=\"PAYMENT_FAIL\"","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  patientGetdoctors,\r\n  patientBookAppointment,\r\n} from \"../../actions/patientAction\";\r\nimport Header from \"../../components/Header\";\r\nimport PatientNavBar from \"../../components/PatientNavBar\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { appointmentPaymentAction } from \"../../actions/PaymentAction\";\r\n\r\nconst BookAppointmentScreen = (props) => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"pat_info\"));\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  // const user = useSelector((store) => store.patientSignin.response.data)\r\n  const doctors = useSelector((store) => store.patientGetDoc);\r\n  const { error, response, loading } = doctors;\r\n  const bookAppointment = useSelector((store) => store.patientBookAppointment);\r\n  const { berror, bloading, bresponse } = bookAppointment;\r\n\r\n  const paymentDetails = useSelector((store) => store.paymentDetails);\r\n  const { perror, ploading, presponse } = paymentDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(patientGetdoctors());\r\n  }, []);\r\n\r\n  const onToken = (token) => {\r\n    console.log(token);\r\n    // TODO: Send the token information and any other\r\n    // relevant information to your payment process\r\n    // server, wait for the response, and update the UI\r\n    // accordingly. How this is done is up to you. Using\r\n    // XHR, fetch, or a GraphQL mutation is typical.\r\n    dispatch(appointmentPaymentAction(user.email, token.id, 300));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (presponse && presponse.status == \"200\") {\r\n      dispatch(patientBookAppointment(date, user.id, doctor));\r\n    } else if (presponse && presponse.status == \"error\") {\r\n      alert(presponse.error);\r\n    } else if (perror) {\r\n      alert(perror);\r\n    }\r\n  }, [perror, ploading, presponse]);\r\n\r\n  useEffect(() => {\r\n    if (bresponse && bresponse.status == \"200\") {\r\n      alert(\"appointment booked successfully\");\r\n      props.history.push(\"/patientHome\");\r\n    } else if (bresponse && bresponse.status == \"error\") {\r\n      alert(bresponse.error);\r\n    } else if (berror) {\r\n      alert(berror);\r\n    }\r\n  }, [berror, bloading, bresponse]);\r\n\r\n  return (\r\n    <div>\r\n      <PatientNavBar name={user.name} />\r\n      <div className=\"center-align fadeInDown\">\r\n        <h3 className=\"text-center\">Book Appointment</h3>\r\n        <div className=\"form box-shadow\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Select Doctor</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setDoctor(e.target.value);\r\n              }}\r\n              className=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected>Select Doctor</option>\r\n              {response &&\r\n                response.data.map((doc) => (\r\n                  <option value={doc.id}>{doc.name}</option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Appointment Date</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setDate(e.target.value);\r\n              }}\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <StripeCheckout\r\n            stripeKey=\"pk_test_51IH49aL4tlyYStR0PBlw9PW5vQGgaIhuGy61N9FBDlDK5bEDbDx7fJvrwE8C45QyHH9A5h4IIuuc4tiyGgcIyUjR00N9lXSPrP\"\r\n            token={onToken}\r\n          >\r\n            <button className=\"btn btn-primary btn-lg btn-block\">\r\n              Pay and Book\r\n            </button>\r\n          </StripeCheckout>\r\n        </div>\r\n      </div>\r\n      {loading && <div className=\"text-center\">waiting for response</div>}\r\n    </div>\r\n  );\r\n};\r\nexport default BookAppointmentScreen;\r\n","import axios from \"axios\";\r\nimport { PAYMENT_FAIL, PAYMENT_REQ, PAYMENT_SUCC } from \"../constants/PaymentConstants\";\r\nimport {SPRINGURL} from \"../constants/URLConstants\"\r\n\r\nexport const appointmentPaymentAction = (email, token,amount) => {\r\n  \r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PAYMENT_REQ,\r\n    });\r\n\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = {\r\n      email,\r\n      token,\r\n      amount\r\n    };\r\n    const url = SPRINGURL+\"/payment\";\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PAYMENT_SUCC,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PAYMENT_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};","import { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Footer from '../components/Footer'\r\nimport Home from '../components/Home'\r\nimport HomeNavBar from '../components/HomeNavBar'\r\nimport AboutScreen from './About'\r\nimport Contact from './Contact'\r\nimport DoctorScreen from './Doctors'\r\nimport EmployeeScreen from './EmployeeScreen'\r\nimport PatientSignInScreen from './PatientScreens/PatientSignInScreen'\r\nimport DoctorHomeScreen from './DoctorScreens/DoctorScreen'\r\nimport AdminHomeScreen from './AdminScreens/AdminHomeScreen'\r\nimport DoctorAppointmentScreen from './DoctorScreens/DoctorAppointmentScreen'\r\nimport DoctorMedicineListScreen from './DoctorScreens/DoctorMedicineListScreen'\r\nimport DoctorTestListScreen from './DoctorScreens/DoctorTestListScreen'\r\nimport DoctorTestPrescriptionScreen from './DoctorScreens/DoctorTestPrescriptionScreen'\r\nimport DoctorMedPrescriptionScreen from './DoctorScreens/DoctorMedPrescriptionScreen'\r\nimport RecpHomeScreen from './ReceptionistScreens/RecpHomeScreen'\r\nimport LabHomeScreen from './LabMgrScreens/LabHomeScreen'\r\nimport LabManagerViewPrescScreen from './LabMgrScreens/LabManagerViewPrescScreen'\r\nimport PatientSignUpScreen from './PatientScreens/PatientSignUpScreen'\r\nimport PatientHomeScreen from './PatientScreens/PatientHomeScreen'\r\nimport PatientEditProfileScreen from './PatientScreens/PatientEditProfileScreen'\r\nimport PatientViewPrescScreen from './PatientScreens/PatientViewPrescScreen'\r\nimport BookAppointmentScreen from './PatientScreens/BookAppointmentScreen'\r\n\r\nconst HomeScreen = () => {\r\n  const isLoggedIn = sessionStorage.getItem('isLoggedIn')\r\n\r\n  return (\r\n    <div>\r\n      {!isLoggedIn && <HomeNavBar />}\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/home\" />\r\n        </Route>\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/aboutUs\" component={AboutScreen} />\r\n        <Route path=\"/doctors\" component={DoctorScreen} />\r\n        <Route path=\"/contacts\" component={Contact} />\r\n        <Route path=\"/employee\" component={EmployeeScreen} />\r\n        <Route path=\"/patientSignIn\" component={PatientSignInScreen} />\r\n        <Route path=\"/bookAppointment\" component={BookAppointmentScreen} />\r\n        {/* admin */}\r\n        <Route path=\"/admin\" component={AdminHomeScreen} />\r\n        {/* doctor */}\r\n        \r\n        <Route path=\"/doctor\" component={DoctorHomeScreen} />\r\n        <Route path=\"/doctor/appointment\" component={DoctorAppointmentScreen} />\r\n        <Route path=\"/doctor/med_list\" component={DoctorMedicineListScreen} />\r\n        <Route path=\"/doctor/test_list\" component={DoctorTestListScreen} />\r\n        <Route\r\n          path=\"/doctor/test_presc\"\r\n          component={DoctorTestPrescriptionScreen}\r\n        />\r\n        <Route\r\n          path=\"/doctor/med_presc\"\r\n          component={DoctorMedPrescriptionScreen}\r\n        />\r\n        {/* receptionist */}\r\n        <Route path=\"/receptionist\" component={RecpHomeScreen} />\r\n        {/* lab manager */}\r\n        <Route exact path=\"/lab\">\r\n          <Redirect to=\"/lab/home\" />\r\n        </Route>\r\n        <Route path=\"/lab/home\" component={LabHomeScreen} />\r\n        <Route\r\n          path=\"/lab/viewPrescriptions\"\r\n          component={LabManagerViewPrescScreen}\r\n        />\r\n        {/* patient */}\r\n        <Route path=\"/patientSignIn\" component={PatientSignInScreen} />\r\n        <Route path=\"/patientSignUp\" component={PatientSignUpScreen} />\r\n        <Route path=\"/patientHome\" component={PatientHomeScreen} />\r\n        <Route\r\n          path=\"/patient/editProfile\"\r\n          component={PatientEditProfileScreen}\r\n        />\r\n        <Route\r\n          path=\"/patient/viewPrescription\"\r\n          component={PatientViewPrescScreen}\r\n        />\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\nexport default HomeScreen\r\n","import './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport HomeScreen from './screens/HomeScreen'\nimport BookAppointment from './screens/PatientScreens/BookAppointmentScreen'\nimport EmployeeScreen from './screens/EmployeeScreen'\nimport AdminHomeScreen from './screens/AdminScreens/AdminHomeScreen'\nimport RecpHomeScreen from './screens/ReceptionistScreens/RecpHomeScreen'\nimport PatientSignIn from './screens/PatientScreens/PatientSignInScreen'\nimport PatientSignUp from './screens/PatientScreens/PatientSignUpScreen'\nimport PatientHome from './screens/PatientScreens/PatientHomeScreen'\nimport PatientViewPresc from './screens/PatientScreens/PatientViewPrescScreen'\nimport PatientEditProfile from './screens/PatientScreens/PatientEditProfileScreen'\nimport LabManagerViewPresc from './screens/LabMgrScreens/LabManagerViewPrescScreen'\nimport LabHomeScreen from './screens/LabMgrScreens/LabHomeScreen'\nimport DoctorScreen from './screens/DoctorScreens/DoctorScreen'\nimport DoctorAppointmentScreen from './screens/DoctorScreens/DoctorAppointmentScreen'\nimport DoctorMedicineListScreen from './screens/DoctorScreens/DoctorMedicineListScreen'\nimport DoctorTestListScreen from './screens/DoctorScreens/DoctorTestListScreen'\nimport DoctorTestPrescriptionScreen from './screens/DoctorScreens/DoctorTestPrescriptionScreen'\nimport DoctorMedPrescriptionScreen from './screens/DoctorScreens/DoctorMedPrescriptionScreen'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={HomeScreen} />\n          \n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport {adminTotalChargesReducer, employeeDeleteReducer,employeeSigninReducer,employeeSignupReducer,employeeUpdateReducer,viewEmployeesReducer,} from './reducers/employeeReducers'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { recpAdmitPatientReducer, recpDischargePatientReducer, recpGetAdmitPatientsReducer, recpGetAllAppointmentsReducer, recpGetDoctorsReducer, recpMakePaymentReducer, recpViewAppointmentsReducer } from './reducers/recpReducers'\nimport {patientSigninReducer,patientSignupReducer,patientGetDocReducer,patientBookAppoReducer,patientGetProfileReducer,patientEditProfileReducer,patientviewPrescReducer,} from './reducers/patientReducer'\nimport { createMedPrescReducer, createTestPrescReducer, fetchAppointmentReducer, fetchMedicinesReducer, fetchTestsReducer } from \"./reducers/DoctorReducer\";\nimport { labManagerViewPrescReducer } from './reducers/LabManagerReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\n\n// combined reducers\nconst reducers = combineReducers({\n  employeeSignin: employeeSigninReducer,\n\n  employeeSignup: employeeSignupReducer,\n  //admin\n  viewEmployees:viewEmployeesReducer,\n  deleteEmployee:employeeDeleteReducer,\n  updateEmployee:employeeUpdateReducer,\n  totalCharges:adminTotalChargesReducer,\n\n\n\n  //doctor\n  appointment:fetchAppointmentReducer,\n  medicine:fetchMedicinesReducer,\n  test:fetchTestsReducer,\n  prescription:createTestPrescReducer,\n  medicinePresc:createMedPrescReducer,\n  \n  //receptionist\n  recpDoctors:recpGetDoctorsReducer,\n  recpAppointments:recpViewAppointmentsReducer,\n  recpAllAppointments:recpGetAllAppointmentsReducer,\n  recpAdmitPatient:recpAdmitPatientReducer,\n  recpGetAdmitPatients:recpGetAdmitPatientsReducer,\n  recpDischargePatient:recpDischargePatientReducer,\n  recpMakePayment:recpMakePaymentReducer,\n  //lab manager\n  labManagerviewPresc: labManagerViewPrescReducer,\n\n\n\n\n  //patient\n  patientSignin: patientSigninReducer,\n  patientSignup: patientSignupReducer,\n  patientGetDoc: patientGetDocReducer,\n  patientBookAppointment: patientBookAppoReducer,\n  patientGetprofile: patientGetProfileReducer,\n  patientEditprofile: patientEditProfileReducer,\n  patientViewPrescription: patientviewPrescReducer,\n  paymentDetails:paymentReducer\n})\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(logger, thunk))\n)\n\nexport default store\n","import {\r\n  ADMIN_GET_ALL_CHARGES_FAIL,\r\n  ADMIN_GET_ALL_CHARGES_REQUEST,\r\n  ADMIN_GET_ALL_CHARGES_SUCCESS,\r\n  EMPLOYEE_DELETE_FAIL,\r\n  EMPLOYEE_DELETE_REQUEST,\r\n  EMPLOYEE_DELETE_SUCCESS,\r\n  EMPLOYEE_SIGNIN_FAIL,\r\n  EMPLOYEE_SIGNIN_REQUEST,\r\n  EMPLOYEE_SIGNIN_SUCCESS,\r\n  EMPLOYEE_SIGNOUT,\r\n  EMPLOYEE_SIGNUP_FAIL,\r\n  EMPLOYEE_SIGNUP_REQUEST,\r\n  EMPLOYEE_SIGNUP_SUCCESS,\r\n  EMPLOYEE_UPDATE_FAIL,\r\n  EMPLOYEE_UPDATE_REQUEST,\r\n  EMPLOYEE_UPDATE_SUCCESS,\r\n  EMPLOYEE_VIEWEMPLOYEES_FAIL,\r\n  EMPLOYEE_VIEWEMPLOYEES_REQUEST,\r\n  EMPLOYEE_VIEWEMPLOYEES_SUCCESS,\r\n} from \"../constants/employeeConstants\";\r\n\r\nexport const employeeSigninReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case EMPLOYEE_SIGNIN_REQUEST:\r\n      return { loading: true };\r\n    case EMPLOYEE_SIGNIN_SUCCESS:\r\n      return { loading: false, response: action.payload };\r\n    case EMPLOYEE_SIGNIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case EMPLOYEE_SIGNOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const employeeSignupReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case EMPLOYEE_SIGNUP_REQUEST:\r\n      return { loading: true };\r\n    case EMPLOYEE_SIGNUP_SUCCESS:\r\n      return { loading: false, response: action.payload };\r\n    case EMPLOYEE_SIGNUP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const viewEmployeesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case EMPLOYEE_VIEWEMPLOYEES_REQUEST:\r\n      return { loading: true };\r\n    case EMPLOYEE_VIEWEMPLOYEES_SUCCESS:\r\n      return { loading: false, response: action.payload };\r\n    case EMPLOYEE_VIEWEMPLOYEES_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const employeeDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case EMPLOYEE_DELETE_REQUEST:\r\n      return { dloading: true };\r\n    case EMPLOYEE_DELETE_SUCCESS:\r\n      return { dloading: false, dresponse: action.payload };\r\n    case EMPLOYEE_DELETE_FAIL:\r\n      return { dloading: false, derror: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const employeeUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case EMPLOYEE_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case EMPLOYEE_UPDATE_SUCCESS:\r\n      return { loading: false, response: action.payload };\r\n    case EMPLOYEE_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const adminTotalChargesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_GET_ALL_CHARGES_REQUEST:\r\n      return { loading: true };\r\n    case ADMIN_GET_ALL_CHARGES_SUCCESS:\r\n      return { loading: false, response: action.payload };\r\n    case ADMIN_GET_ALL_CHARGES_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  APPOINTMENT_FETCH_REQUEST,\r\n  APPOINTMENT_FETCH_SUCCESS,\r\n  APPOINTMENT_FETCH_FAIL ,\r\n  APPOINTMENT_FETCH_RESET,\r\n  MEDICINELIST_FETCH_REQUEST,\r\n  MEDICINELIST_FETCH_SUCCESS,\r\n  MEDICINELIST_FETCH_FAIL,\r\n  MEDICINELIST_FETCH_RESET,\r\n  TESTLIST_FETCH_REQUEST,\r\n  TESTLIST_FETCH_SUCCESS,\r\n  TESTLIST_FETCH_FAIL,\r\n  TESTLIST_FETCH_RESET,\r\n  TESTPRESC_FETCH_REQUEST,\r\n  TESTPRESC_FETCH_SUCCESS,\r\n  TESTPRESC_FETCH_FAIL,\r\n  TESTPRESC_FETCH_RESET,\r\n  MEDPRESC_FETCH_REQUEST,\r\n  MEDPRESC_FETCH_SUCCESS,\r\n  MEDPRESC_FETCH_FAIL,\r\n  MEDPRESC_FETCH_RESET,\r\n} from \"../constants/DoctorConstants\"\r\n\r\nexport const fetchAppointmentReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n      case APPOINTMENT_FETCH_REQUEST:\r\n        return { loading2: true }\r\n      case APPOINTMENT_FETCH_SUCCESS:\r\n        return { loading2: false, response2: action.payload }\r\n      case APPOINTMENT_FETCH_FAIL:\r\n        return { loading2: false, error2: action.payload }\r\n      case APPOINTMENT_FETCH_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const fetchMedicinesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n      case MEDICINELIST_FETCH_REQUEST:\r\n        return { loading: true }\r\n      case MEDICINELIST_FETCH_SUCCESS:\r\n        return { loading: false, response: action.payload }\r\n      case MEDICINELIST_FETCH_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case MEDICINELIST_FETCH_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n   export const fetchTestsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n      case TESTLIST_FETCH_REQUEST:\r\n        return { loading: true }\r\n      case TESTLIST_FETCH_SUCCESS:\r\n        return { loading: false, response: action.payload }\r\n      case TESTLIST_FETCH_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case TESTLIST_FETCH_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const createTestPrescReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case TESTPRESC_FETCH_REQUEST:\r\n        return { loading1: true };\r\n      case TESTPRESC_FETCH_SUCCESS:\r\n        return { loading1: false, response1: action.payload };\r\n      case TESTPRESC_FETCH_FAIL:\r\n        return { loading1: false, error1: action.payload };\r\n      case TESTPRESC_FETCH_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  export const createMedPrescReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case MEDPRESC_FETCH_REQUEST:\r\n        return { loading1: true };\r\n      case MEDPRESC_FETCH_SUCCESS:\r\n        return { loading1: false, response1: action.payload };\r\n      case MEDPRESC_FETCH_FAIL:\r\n        return { loading1: false, error1: action.payload };\r\n      case MEDPRESC_FETCH_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n  ","import {\r\n  RECP_GET_DOCTORS_FAIL,\r\n  RECP_GET_DOCTORS_REQUEST,\r\n  RECP_GET_DOCTORS_SUCCESS,\r\n  RECP_VIEW_APPOINTMENTS_FAIL,\r\n  RECP_VIEW_APPOINTMENTS_REQUEST,\r\n  RECP_VIEW_APPOINTMENTS_SUCCESS,\r\n  RECP_VIEW_APPOINTMENTS_RESET,\r\n  RECP_ALL_APPOINTMENTS_REQUEST,\r\n  RECP_ALL_APPOINTMENTS_SUCCESS,\r\n  RECP_ALL_APPOINTMENTS_FAIL,\r\n  RECP_ALL_APPOINTMENTS_RESET,\r\n  RECP_ADMIT_PATIENT_REQUEST,\r\n  RECP_ADMIT_PATIENT_SUCCESS,\r\n  RECP_ADMIT_PATIENT_FAIL,\r\n  RECP_DISCHARGE_PATIENT_REQUEST,\r\n  RECP_DISCHARGE_PATIENT_SUCCESS,\r\n  RECP_DISCHARGE_PATIENT_FAIL,\r\n  RECP_GET_ADMIT_PATIENT_REQUEST,\r\n  RECP_GET_ADMIT_PATIENT_SUCCESS,\r\n  RECP_GET_ADMIT_PATIENT_FAIL,\r\n  RECP_MAKE_PAYMENT_REQUEST,\r\n  RECP_MAKE_PAYMENT_SUCCESS,\r\n  RECP_MAKE_PAYMENT_FAIL,\r\n} from \"../constants/RecpConstants\";\r\n\r\nexport const recpGetDoctorsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RECP_GET_DOCTORS_REQUEST:\r\n      return { dloading: true };\r\n    case RECP_GET_DOCTORS_SUCCESS:\r\n      return { dloading: false, dresponse: action.payload };\r\n    case RECP_GET_DOCTORS_FAIL:\r\n      return { dloading: false, derror: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const recpViewAppointmentsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RECP_VIEW_APPOINTMENTS_REQUEST:\r\n      return { loading: true };\r\n    case RECP_VIEW_APPOINTMENTS_SUCCESS:\r\n      return { loading: false, response: action.payload };\r\n    case RECP_VIEW_APPOINTMENTS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case RECP_VIEW_APPOINTMENTS_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const recpGetAllAppointmentsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RECP_ALL_APPOINTMENTS_REQUEST:\r\n      return { aloading: true };\r\n    case RECP_ALL_APPOINTMENTS_SUCCESS:\r\n      return { aloading: false, aresponse: action.payload };\r\n    case RECP_ALL_APPOINTMENTS_FAIL:\r\n      return { aloading: false, aerror: action.payload };\r\n    case RECP_ALL_APPOINTMENTS_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const recpAdmitPatientReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RECP_ADMIT_PATIENT_REQUEST:\r\n      return { ploading: true };\r\n    case RECP_ADMIT_PATIENT_SUCCESS:\r\n      return { ploading: false, presponse: action.payload };\r\n    case RECP_ADMIT_PATIENT_FAIL:\r\n      return { ploading: false, perror: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const recpGetAdmitPatientsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RECP_GET_ADMIT_PATIENT_REQUEST:\r\n      return { loading: true };\r\n    case RECP_GET_ADMIT_PATIENT_SUCCESS:\r\n      return { loading: false, response: action.payload };\r\n    case RECP_GET_ADMIT_PATIENT_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const recpDischargePatientReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RECP_DISCHARGE_PATIENT_REQUEST:\r\n      return { dloading: true };\r\n    case RECP_DISCHARGE_PATIENT_SUCCESS:\r\n      return { dloading: false, dresponse: action.payload };\r\n    case RECP_DISCHARGE_PATIENT_FAIL:\r\n      return { dloading: false, derror: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const recpMakePaymentReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RECP_MAKE_PAYMENT_REQUEST:\r\n      return { mloading: true };\r\n    case RECP_MAKE_PAYMENT_SUCCESS:\r\n      return { mloading: false, mresponse: action.payload };\r\n    case RECP_MAKE_PAYMENT_FAIL:\r\n      return { mloading: false, merror: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LAB_VIEW_PRESC_FAIL, LAB_VIEW_PRESC_REQUEST, LAB_VIEW_PRESC_SUCCESS } from \"../constants/labManagerConstants\";\r\n\r\nexport const labManagerViewPrescReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LAB_VIEW_PRESC_REQUEST:\r\n      return { loading: true };\r\n    case LAB_VIEW_PRESC_SUCCESS:\r\n      return { loading: false, response: action.payload };\r\n    case LAB_VIEW_PRESC_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  PATIENT_SIGNIN_REQUEST,\r\n  PATIENT_SIGNIN_SUCCESS,\r\n  PATIENT_SIGNIN_FAIL,\r\n  PATIENT_SIGNOUT,\r\n  PATIENT_SIGNUP_SUCCESS,\r\n  PATIENT_SIGNUP_REQUEST,\r\n  PATIENT_SIGNUP_FAIL,\r\n  PATIENT_GET_DOC_REQUEST,\r\n  PATIENT_GET_DOC_SUCCESS,\r\n  PATIENT_GET_DOC_FAIL,\r\n  PATIENT_BOOK_Appointment_REQUEST,\r\n  PATIENT_BOOK_Appointment_SUCCESS,\r\n  PATIENT_BOOK_Appointment_FAIL,\r\n  PATIENT_EDIT_PROFILE_FAIL,\r\n  PATIENT_EDIT_PROFILE_REQUEST,\r\n  PATIENT_EDIT_PROFILE_SUCCESS,\r\n  PATIENT_GET_PROFILE_FAIL,\r\n  PATIENT_GET_PROFILE_REQUEST,\r\n  PATIENT_GET_PROFILE_SUCCESS,\r\n  PATIENT_VIEW_PRESC_REQUEST,\r\n  PATIENT_VIEW_PRESC_SUCCESS,\r\n  PATIENT_VIEW_PRESC_FAIL,\r\n} from '../constants/patientConstants'\r\n\r\nexport const patientSigninReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_SIGNIN_REQUEST:\r\n      return { loading: true }\r\n    case PATIENT_SIGNIN_SUCCESS:\r\n      return { loading: false, response: action.payload }\r\n    case PATIENT_SIGNIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PATIENT_SIGNOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const patientSignupReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_SIGNUP_REQUEST:\r\n      return { loading: true }\r\n    case PATIENT_SIGNUP_SUCCESS:\r\n      return { loading: false, response: action.payload }\r\n    case PATIENT_SIGNUP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const patientGetDocReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_GET_DOC_REQUEST:\r\n      return { loading: true }\r\n    case PATIENT_GET_DOC_SUCCESS:\r\n      return { loading: false, response: action.payload }\r\n    case PATIENT_GET_DOC_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const patientBookAppoReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_BOOK_Appointment_REQUEST:\r\n      return { bloading: true }\r\n    case PATIENT_BOOK_Appointment_SUCCESS:\r\n      return { bloading: false, bresponse: action.payload }\r\n    case PATIENT_BOOK_Appointment_FAIL:\r\n      return { bloading: false, berror: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const patientGetProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_GET_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case PATIENT_GET_PROFILE_SUCCESS:\r\n      return { loading: false, response: action.payload }\r\n    case PATIENT_GET_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const patientEditProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_EDIT_PROFILE_REQUEST:\r\n      return { eloading: true }\r\n    case PATIENT_EDIT_PROFILE_SUCCESS:\r\n      return { eloading: false, eresponse: action.payload }\r\n    case PATIENT_EDIT_PROFILE_FAIL:\r\n      return { eloading: false, eerror: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const patientviewPrescReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_VIEW_PRESC_REQUEST:\r\n      return {loading: true }\r\n    case PATIENT_VIEW_PRESC_SUCCESS:\r\n      return { loading: false, response: action.payload }\r\n    case PATIENT_VIEW_PRESC_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { PAYMENT_FAIL, PAYMENT_REQ, PAYMENT_SUCC } from \"../constants/PaymentConstants\"\r\n\r\nexport const paymentReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PAYMENT_REQ:\r\n      return { ploading: true }\r\n    case PAYMENT_SUCC:\r\n      return { ploading: false, presponse: action.payload }\r\n    case PAYMENT_FAIL:\r\n      return { ploading: false, perror: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const Header = (props) => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"title\">{props.title}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: '',\r\n}\r\n\r\nexport default Header\r\n","export const EMPLOYEE_SIGNIN_REQUEST = \"EMPLOYEE_SIGNIN_REQUEST\";\r\nexport const EMPLOYEE_SIGNIN_SUCCESS = \"EMPLOYEE_SIGNIN_SUCCESS\";\r\nexport const EMPLOYEE_SIGNIN_FAIL = \"EMPLOYEE_SIGNIN_FAIL\";\r\nexport const EMPLOYEE_SIGNOUT = \"EMPLOYEE_SIGNOUT\";\r\n\r\nexport const EMPLOYEE_SIGNUP_REQUEST = \"EMPLOYEE_SIGNUP_REQUEST\";\r\nexport const EMPLOYEE_SIGNUP_SUCCESS = \"EMPLOYEE_SIGNUP_SUCCESS\";\r\nexport const EMPLOYEE_SIGNUP_FAIL = \"EMPLOYEE_SIGNUP_FAIL\";\r\n\r\nexport const EMPLOYEE_VIEWEMPLOYEES_REQUEST = \"EMPLOYEE_VIEWEMPLOYEES_REQUEST\";\r\nexport const EMPLOYEE_VIEWEMPLOYEES_SUCCESS = \"EMPLOYEE_VIEWEMPLOYEES_SUCCESS\";\r\nexport const EMPLOYEE_VIEWEMPLOYEES_FAIL = \"EMPLOYEE_VIEWEMPLOYEES_FAIL\";\r\n\r\nexport const EMPLOYEE_DELETE_REQUEST = \"EMPLOYEE_DELETE_REQUEST\";\r\nexport const EMPLOYEE_DELETE_SUCCESS = \"EMPLOYEE_DELETE_SUCCESS\";\r\nexport const EMPLOYEE_DELETE_FAIL = \"EMPLOYEE_DELETE_FAIL\";\r\n\r\nexport const EMPLOYEE_UPDATE_REQUEST = \"EMPLOYEE_UPDATE_REQUEST\";\r\nexport const EMPLOYEE_UPDATE_SUCCESS = \"EMPLOYEE_UPDATE_SUCCESS\";\r\nexport const EMPLOYEE_UPDATE_FAIL = \"EMPLOYEE_UPDATE_FAIL\";\r\n\r\nexport const ADMIN_GET_ALL_CHARGES_REQUEST = \"ADMIN_GET_ALL_CHARGES_REQUEST\";\r\nexport const ADMIN_GET_ALL_CHARGES_SUCCESS = \"ADMIN_GET_ALL_CHARGES_SUCCESS\";\r\nexport const ADMIN_GET_ALL_CHARGES_FAIL = \"ADMIN_GET_ALL_CHARGES_FAIL\";\r\n","//export const SPRINGURL='http://13.235.135.204:8080/hms'\r\n//export const SPRINGURL='http://127.0.0.1:8080/hms'\r\nexport const SPRINGURL='http://13.126.28.221:8080/hms'"],"sourceRoot":""}