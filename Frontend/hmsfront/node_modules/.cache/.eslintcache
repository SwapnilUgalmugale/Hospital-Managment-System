[{"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\index.js":"1","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reportWebVitals.js":"2","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\App.js":"3","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\store.js":"4","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\HomeScreen.js":"5","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\EmployeeScreen.js":"6","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\BookAppointmentScreen.js":"7","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\LabMgrScreens\\LabHomeScreen.js":"8","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientSignUpScreen.js":"9","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientSignInScreen.js":"10","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminHomeScreen.js":"11","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\LabMgrScreens\\LabManagerViewPrescScreen.js":"12","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientEditProfileScreen.js":"13","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpHomeScreen.js":"14","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorAppointmentScreen.js":"15","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorMedPrescriptionScreen.js":"16","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorTestPrescriptionScreen.js":"17","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorTestListScreen.js":"18","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientViewPrescScreen.js":"19","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientHomeScreen.js":"20","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorMedicineListScreen.js":"21","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\paymentReducer.js":"22","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\recpReducers.js":"23","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorScreen.js":"24","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\DoctorReducer.js":"25","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\LabManagerReducer.js":"26","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\employeeReducers.js":"27","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\patientReducer.js":"28","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\Contact.js":"29","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\Doctors.js":"30","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\About.js":"31","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminViewEmployeesScreen.js":"32","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminPaymentHistoryScreen.js":"33","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\Profile.js":"34","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminUpdateEmployeeScreen.js":"35","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminAddEmployeeScreen.js":"36","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpAcceptPayment.js":"37","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpViewAppointments.js":"38","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpDischargePatient.js":"39","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpAdmitPatient.js":"40","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\Home.js":"41","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\RecpHomeNavBar.js":"42","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\PatientNavBar.js":"43","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\Header.js":"44","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\Footer.js":"45","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\DoctorHomeNavBar.js":"46","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\AdminHomeNavBar.js":"47","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\LabNavBar.js":"48","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\PaymentAction.js":"49","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\labManagerActios.js":"50","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\patientAction.js":"51","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\HomeNavBar.js":"52","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\employeeActions.js":"53","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\DoctorAction.js":"54","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\PaymentConstants.js":"55","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\labManagerConstants.js":"56","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\patientConstants.js":"57","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\RecpConstants.js":"58","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\employeeConstants.js":"59","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\DoctorConstants.js":"60","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\recpActions.js":"61","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\URLConstants.js":"62","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\index.js":"63","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reportWebVitals.js":"64","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\App.js":"65","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\store.js":"66","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\BookAppointmentScreen.js":"67","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\HomeScreen.js":"68","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\EmployeeScreen.js":"69","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientEditProfileScreen.js":"70","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpHomeScreen.js":"71","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientSignUpScreen.js":"72","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientHomeScreen.js":"73","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientViewPrescScreen.js":"74","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorMedicineListScreen.js":"75","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorScreen.js":"76","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorMedPrescriptionScreen.js":"77","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorTestListScreen.js":"78","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\LabMgrScreens\\LabHomeScreen.js":"79","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorTestPrescriptionScreen.js":"80","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientSignInScreen.js":"81","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminHomeScreen.js":"82","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\recpReducers.js":"83","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\LabMgrScreens\\LabManagerViewPrescScreen.js":"84","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\patientReducer.js":"85","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\DoctorReducer.js":"86","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\LabManagerReducer.js":"87","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\paymentReducer.js":"88","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\employeeReducers.js":"89","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorAppointmentScreen.js":"90","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\About.js":"91","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\Contact.js":"92","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpAcceptPayment.js":"93","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\Doctors.js":"94","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpAdmitPatient.js":"95","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpViewAppointments.js":"96","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpDischargePatient.js":"97","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminViewEmployeesScreen.js":"98","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\Profile.js":"99","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminAddEmployeeScreen.js":"100","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\Header.js":"101","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminPaymentHistoryScreen.js":"102","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\Home.js":"103","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminUpdateEmployeeScreen.js":"104","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\RecpHomeNavBar.js":"105","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\AdminHomeNavBar.js":"106","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\HomeNavBar.js":"107","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\Footer.js":"108","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\PatientNavBar.js":"109","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\DoctorHomeNavBar.js":"110","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\LabNavBar.js":"111","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\employeeActions.js":"112","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\DoctorAction.js":"113","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\labManagerActios.js":"114","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\labManagerConstants.js":"115","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\RecpConstants.js":"116","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\patientAction.js":"117","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\employeeConstants.js":"118","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\PaymentConstants.js":"119","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\PaymentAction.js":"120","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\patientConstants.js":"121","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\DoctorConstants.js":"122","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\recpActions.js":"123","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\URLConstants.js":"124"},{"size":616,"mtime":1655817991980,"results":"125","hashOfConfig":"126"},{"size":362,"mtime":1655817992040,"results":"127","hashOfConfig":"126"},{"size":1669,"mtime":1655817991270,"results":"128","hashOfConfig":"126"},{"size":2503,"mtime":1655817992136,"results":"129","hashOfConfig":"126"},{"size":3744,"mtime":1655817993960,"results":"130","hashOfConfig":"126"},{"size":2513,"mtime":1655817993910,"results":"131","hashOfConfig":"126"},{"size":3955,"mtime":1663561616322,"results":"132","hashOfConfig":"126"},{"size":2827,"mtime":1655817994734,"results":"133","hashOfConfig":"126"},{"size":3009,"mtime":1663405154204,"results":"134","hashOfConfig":"126"},{"size":2360,"mtime":1655817995018,"results":"135","hashOfConfig":"126"},{"size":1166,"mtime":1655817994081,"results":"136","hashOfConfig":"126"},{"size":2578,"mtime":1655817994799,"results":"137","hashOfConfig":"126"},{"size":6052,"mtime":1663409047178,"results":"138","hashOfConfig":"126"},{"size":1195,"mtime":1655817995357,"results":"139","hashOfConfig":"126"},{"size":2826,"mtime":1655817994362,"results":"140","hashOfConfig":"126"},{"size":1780,"mtime":1655817994436,"results":"141","hashOfConfig":"126"},{"size":1780,"mtime":1655817994690,"results":"142","hashOfConfig":"126"},{"size":2668,"mtime":1655817994613,"results":"143","hashOfConfig":"126"},{"size":2267,"mtime":1655817995128,"results":"144","hashOfConfig":"126"},{"size":2808,"mtime":1655817994955,"results":"145","hashOfConfig":"126"},{"size":3324,"mtime":1655817994486,"results":"146","hashOfConfig":"126"},{"size":424,"mtime":1655817993604,"results":"147","hashOfConfig":"126"},{"size":3642,"mtime":1655817993672,"results":"148","hashOfConfig":"126"},{"size":1677,"mtime":1655817994563,"results":"149","hashOfConfig":"126"},{"size":2849,"mtime":1655817993387,"results":"150","hashOfConfig":"126"},{"size":495,"mtime":1655817993431,"results":"151","hashOfConfig":"126"},{"size":2917,"mtime":1655817993474,"results":"152","hashOfConfig":"126"},{"size":3373,"mtime":1655817993553,"results":"153","hashOfConfig":"126"},{"size":3072,"mtime":1655817993786,"results":"154","hashOfConfig":"126"},{"size":6038,"mtime":1655817993839,"results":"155","hashOfConfig":"126"},{"size":1344,"mtime":1655817993709,"results":"156","hashOfConfig":"126"},{"size":2784,"mtime":1663405837171,"results":"157","hashOfConfig":"126"},{"size":1369,"mtime":1655817994130,"results":"158","hashOfConfig":"126"},{"size":3014,"mtime":1655817994298,"results":"159","hashOfConfig":"126"},{"size":2766,"mtime":1655817994175,"results":"160","hashOfConfig":"126"},{"size":5653,"mtime":1663563554015,"results":"161","hashOfConfig":"126"},{"size":3309,"mtime":1655817995175,"results":"162","hashOfConfig":"126"},{"size":2236,"mtime":1655817995409,"results":"163","hashOfConfig":"126"},{"size":2449,"mtime":1655817995285,"results":"164","hashOfConfig":"126"},{"size":3045,"mtime":1655817995238,"results":"165","hashOfConfig":"126"},{"size":396,"mtime":1655818319256,"results":"166","hashOfConfig":"126"},{"size":3293,"mtime":1655817992991,"results":"167","hashOfConfig":"126"},{"size":2658,"mtime":1655817992930,"results":"168","hashOfConfig":"126"},{"size":176,"mtime":1655817992718,"results":"169","hashOfConfig":"126"},{"size":735,"mtime":1663563369356,"results":"170","hashOfConfig":"126"},{"size":2122,"mtime":1655817992601,"results":"171","hashOfConfig":"126"},{"size":2861,"mtime":1655818247370,"results":"172","hashOfConfig":"126"},{"size":2115,"mtime":1655817992878,"results":"173","hashOfConfig":"126"},{"size":813,"mtime":1655817992260,"results":"174","hashOfConfig":"126"},{"size":797,"mtime":1655817992379,"results":"175","hashOfConfig":"126"},{"size":5642,"mtime":1655817992415,"results":"176","hashOfConfig":"126"},{"size":2016,"mtime":1655817992805,"results":"177","hashOfConfig":"126"},{"size":4763,"mtime":1663404427292,"results":"178","hashOfConfig":"126"},{"size":4083,"mtime":1655817992196,"results":"179","hashOfConfig":"126"},{"size":120,"mtime":1655817993111,"results":"180","hashOfConfig":"126"},{"size":176,"mtime":1655817993291,"results":"181","hashOfConfig":"126"},{"size":1467,"mtime":1655817993335,"results":"182","hashOfConfig":"126"},{"size":1698,"mtime":1655817993150,"results":"183","hashOfConfig":"126"},{"size":1287,"mtime":1655817993240,"results":"184","hashOfConfig":"126"},{"size":1278,"mtime":1655817993039,"results":"185","hashOfConfig":"126"},{"size":5352,"mtime":1655817992493,"results":"186","hashOfConfig":"126"},{"size":110,"mtime":1663404599005,"results":"187","hashOfConfig":"126"},{"size":616,"mtime":1655817991980,"results":"188","hashOfConfig":"189"},{"size":362,"mtime":1655817992040,"results":"190","hashOfConfig":"189"},{"size":1669,"mtime":1655817991270,"results":"191","hashOfConfig":"189"},{"size":2503,"mtime":1655817992136,"results":"192","hashOfConfig":"189"},{"size":3964,"mtime":1664261532962,"results":"193","hashOfConfig":"189"},{"size":3831,"mtime":1664261500980,"results":"194","hashOfConfig":"189"},{"size":2592,"mtime":1664261500973,"results":"195","hashOfConfig":"189"},{"size":6250,"mtime":1664261532981,"results":"196","hashOfConfig":"189"},{"size":1236,"mtime":1664261533134,"results":"197","hashOfConfig":"189"},{"size":3022,"mtime":1664261533035,"results":"198","hashOfConfig":"189"},{"size":2873,"mtime":1664261532991,"results":"199","hashOfConfig":"189"},{"size":2339,"mtime":1664261533055,"results":"200","hashOfConfig":"189"},{"size":3324,"mtime":1663994249159,"results":"201","hashOfConfig":"189"},{"size":1677,"mtime":1663994099821,"results":"202","hashOfConfig":"189"},{"size":1780,"mtime":1663994119127,"results":"203","hashOfConfig":"189"},{"size":2668,"mtime":1663994353845,"results":"204","hashOfConfig":"189"},{"size":2827,"mtime":1663994514396,"results":"205","hashOfConfig":"189"},{"size":1780,"mtime":1663994325592,"results":"206","hashOfConfig":"189"},{"size":2387,"mtime":1664261533024,"results":"207","hashOfConfig":"189"},{"size":1166,"mtime":1663993517595,"results":"208","hashOfConfig":"189"},{"size":3761,"mtime":1663992903468,"results":"209","hashOfConfig":"189"},{"size":2672,"mtime":1663994643379,"results":"210","hashOfConfig":"189"},{"size":3488,"mtime":1663992903422,"results":"211","hashOfConfig":"189"},{"size":2949,"mtime":1663992903354,"results":"212","hashOfConfig":"189"},{"size":508,"mtime":1663992903372,"results":"213","hashOfConfig":"189"},{"size":437,"mtime":1663992903428,"results":"214","hashOfConfig":"189"},{"size":3018,"mtime":1663992903388,"results":"215","hashOfConfig":"189"},{"size":2826,"mtime":1663993979299,"results":"216","hashOfConfig":"189"},{"size":1374,"mtime":1664261500926,"results":"217","hashOfConfig":"189"},{"size":3153,"mtime":1664261500927,"results":"218","hashOfConfig":"189"},{"size":3418,"mtime":1664261533076,"results":"219","hashOfConfig":"189"},{"size":6203,"mtime":1664261500947,"results":"220","hashOfConfig":"189"},{"size":3145,"mtime":1664261533086,"results":"221","hashOfConfig":"189"},{"size":2313,"mtime":1664261533170,"results":"222","hashOfConfig":"189"},{"size":2529,"mtime":1664261533123,"results":"223","hashOfConfig":"189"},{"size":2784,"mtime":1663993728340,"results":"224","hashOfConfig":"189"},{"size":3033,"mtime":1664286310771,"results":"225","hashOfConfig":"189"},{"size":5653,"mtime":1663993126947,"results":"226","hashOfConfig":"189"},{"size":189,"mtime":1663992902965,"results":"227","hashOfConfig":"189"},{"size":1369,"mtime":1663993590710,"results":"228","hashOfConfig":"189"},{"size":412,"mtime":1663992903126,"results":"229","hashOfConfig":"189"},{"size":2766,"mtime":1663993704789,"results":"230","hashOfConfig":"189"},{"size":3391,"mtime":1663992903202,"results":"231","hashOfConfig":"189"},{"size":2947,"mtime":1664279704372,"results":"232","hashOfConfig":"189"},{"size":2078,"mtime":1663992903131,"results":"233","hashOfConfig":"189"},{"size":762,"mtime":1664281220514,"results":"234","hashOfConfig":"189"},{"size":2739,"mtime":1663992903171,"results":"235","hashOfConfig":"189"},{"size":2185,"mtime":1663992902890,"results":"236","hashOfConfig":"189"},{"size":2178,"mtime":1663992903166,"results":"237","hashOfConfig":"189"},{"size":4925,"mtime":1663992901764,"results":"238","hashOfConfig":"189"},{"size":3933,"mtime":1663992901703,"results":"239","hashOfConfig":"189"},{"size":830,"mtime":1663992902214,"results":"240","hashOfConfig":"189"},{"size":178,"mtime":1663992903323,"results":"241","hashOfConfig":"189"},{"size":1727,"mtime":1663992903257,"results":"242","hashOfConfig":"189"},{"size":5909,"mtime":1663992902223,"results":"243","hashOfConfig":"189"},{"size":1311,"mtime":1663992903289,"results":"244","hashOfConfig":"189"},{"size":122,"mtime":1663992903247,"results":"245","hashOfConfig":"189"},{"size":851,"mtime":1663992901763,"results":"246","hashOfConfig":"189"},{"size":1494,"mtime":1663992903329,"results":"247","hashOfConfig":"189"},{"size":1302,"mtime":1663992903209,"results":"248","hashOfConfig":"189"},{"size":5586,"mtime":1663992902329,"results":"249","hashOfConfig":"189"},{"size":167,"mtime":1664341041049,"results":"250","hashOfConfig":"189"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},"1sdp0y3",{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"253"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"253"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"253"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"253"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"253"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"253"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"253"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"253"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"253"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"253"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"253"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"253"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"253"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"253"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"253"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"253"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"253"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"253"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"253"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"253"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"253"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"253"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"253"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ng7sp5",{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\index.js",[],["541","542"],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reportWebVitals.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\App.js",["543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559"],"import './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport HomeScreen from './screens/HomeScreen'\nimport BookAppointment from './screens/PatientScreens/BookAppointmentScreen'\nimport EmployeeScreen from './screens/EmployeeScreen'\nimport AdminHomeScreen from './screens/AdminScreens/AdminHomeScreen'\nimport RecpHomeScreen from './screens/ReceptionistScreens/RecpHomeScreen'\nimport PatientSignIn from './screens/PatientScreens/PatientSignInScreen'\nimport PatientSignUp from './screens/PatientScreens/PatientSignUpScreen'\nimport PatientHome from './screens/PatientScreens/PatientHomeScreen'\nimport PatientViewPresc from './screens/PatientScreens/PatientViewPrescScreen'\nimport PatientEditProfile from './screens/PatientScreens/PatientEditProfileScreen'\nimport LabManagerViewPresc from './screens/LabMgrScreens/LabManagerViewPrescScreen'\nimport LabHomeScreen from './screens/LabMgrScreens/LabHomeScreen'\nimport DoctorScreen from './screens/DoctorScreens/DoctorScreen'\nimport DoctorAppointmentScreen from './screens/DoctorScreens/DoctorAppointmentScreen'\nimport DoctorMedicineListScreen from './screens/DoctorScreens/DoctorMedicineListScreen'\nimport DoctorTestListScreen from './screens/DoctorScreens/DoctorTestListScreen'\nimport DoctorTestPrescriptionScreen from './screens/DoctorScreens/DoctorTestPrescriptionScreen'\nimport DoctorMedPrescriptionScreen from './screens/DoctorScreens/DoctorMedPrescriptionScreen'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={HomeScreen} />\n          \n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\store.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\HomeScreen.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\EmployeeScreen.js",["560","561","562","563","564","565","566","567"],"import { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport { employeeSigninAction } from \"../actions/employeeActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst EmployeeScreen = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const employeeSignin = useSelector((store) => store.employeeSignin);\n  const { loading, error, response } = employeeSignin;\n\n  const dispatch = useDispatch();\n  const onSignin = () => {\n    dispatch(employeeSigninAction(email, password));\n  };\n\n  useEffect(() => {\n    if (response && response.status == \"200\") {\n      sessionStorage.setItem(\"emp_details\", JSON.stringify(response.data));\n      sessionStorage.setItem(\"isLoggedIn\", true);\n      if (response.data.role == \"DOCTOR\") {\n        props.history.push(\"/doctor\");\n      } else if (response.data.role == \"ADMIN\") {\n        props.history.push(\"/admin\");\n      } else if (response.data.role == \"RECEPTIONIST\") {\n        props.history.push(\"/receptionist\");\n      } else if (response.data.role == \"LABMANAGER\") {\n        props.history.push(\"/lab\");\n      }\n    } else if (response && response.status == \"error\") {\n      alert(response.error);\n    } else if (error) {\n      alert(error);\n    }\n  }, [loading, error, response]);\n\n  return (\n    <div>\n      <div className=\"center-align fadeInDown\">\n        <h3 className=\"text-center\">Employee Signin</h3>\n        <div className=\"form box-shadow\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Email</label>\n            <input\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"hms@gmail.com\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Password</label>\n            <input\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"*****\"\n            ></input>\n          </div>\n        </div>\n        <div className=\"text-center\">\n          <button\n            onClick={onSignin}\n            className=\"btn btn-success btn-lg btn-block\"\n          >\n            Signin\n          </button>\n        </div>\n      </div>\n      {loading && <div className=\"text-center\">waiting for response</div>}\n    </div>\n  );\n};\n\nexport default EmployeeScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\BookAppointmentScreen.js",["568","569","570","571","572","573","574","575","576"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  patientGetdoctors,\n  patientBookAppointment,\n} from \"../../actions/patientAction\";\nimport Header from \"../../components/Header\";\nimport PatientNavBar from \"../../components/PatientNavBar\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { appointmentPaymentAction } from \"../../actions/PaymentAction\";\n\nconst BookAppointmentScreen = (props) => {\n  const user = JSON.parse(sessionStorage.getItem(\"pat_info\"));\n  const [doctor, setDoctor] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n  // const user = useSelector((store) => store.patientSignin.response.data)\n  const doctors = useSelector((store) => store.patientGetDoc);\n  const { error, response, loading } = doctors;\n  const bookAppointment = useSelector((store) => store.patientBookAppointment);\n  const { berror, bloading, bresponse } = bookAppointment;\n\n  const paymentDetails = useSelector((store) => store.paymentDetails);\n  const { perror, ploading, presponse } = paymentDetails;\n\n  useEffect(() => {\n    dispatch(patientGetdoctors());\n  }, []);\n\n  const onToken = (token) => {\n    console.log(token);\n    // TODO: Send the token information and any other\n    // relevant information to your payment process\n    // server, wait for the response, and update the UI\n    // accordingly. How this is done is up to you. Using\n    // XHR, fetch, or a GraphQL mutation is typical.\n    dispatch(appointmentPaymentAction(user.email, token.id, 300));\n  };\n\n  useEffect(() => {\n    if (presponse && presponse.status == \"200\") {\n      dispatch(patientBookAppointment(date, user.id, doctor));\n    } else if (presponse && presponse.status == \"error\") {\n      alert(presponse.error);\n    } else if (perror) {\n      alert(perror);\n    }\n  }, [perror, ploading, presponse]);\n\n  useEffect(() => {\n    if (bresponse && bresponse.status == \"200\") {\n      alert(\"appointment booked successfully\");\n      props.history.push(\"/patientHome\");\n    } else if (bresponse && bresponse.status == \"error\") {\n      alert(bresponse.error);\n    } else if (berror) {\n      alert(berror);\n    }\n  }, [berror, bloading, bresponse]);\n\n  return (\n    <div>\n      <PatientNavBar name={user.name} />\n      <div className=\"center-align fadeInDown\">\n        <h3 className=\"text-center\">Book Appointment</h3>\n        <div className=\"form box-shadow\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Select Doctor</label>\n            <select\n              onChange={(e) => {\n                setDoctor(e.target.value);\n              }}\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n            >\n              <option selected>Select Doctor</option>\n              {response &&\n                response.data.map((doc) => (\n                  <option value={doc.id}>{doc.name}</option>\n                ))}\n            </select>\n          </div>\n          <div className=\"mb-3\" >\n            <label className=\"form-label\"onClick={()=>{document.getElementById('calender').click()}}>Appointment Date</label>\n            <input\n            \n              onChange={(e) => {\n                setDate(e.target.value);\n              }}\n              type=\"date\"\n              id='calender'\n              className=\"form-control\"\n            />\n          </div>\n        </div>\n        <div className=\"text-center\">\n          <StripeCheckout\n            stripeKey=\"pk_test_51IH49aL4tlyYStR0PBlw9PW5vQGgaIhuGy61N9FBDlDK5bEDbDx7fJvrwE8C45QyHH9A5h4IIuuc4tiyGgcIyUjR00N9lXSPrP\"\n            token={onToken}\n          >\n            <button className=\"btn btn-primary btn-lg btn-block\">\n              Pay and Book\n            </button>\n          </StripeCheckout>\n        </div>\n      </div>\n      {loading && <div className=\"text-center\">waiting for response</div>}\n    </div>\n  );\n};\nexport default BookAppointmentScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\LabMgrScreens\\LabHomeScreen.js",["577","578","579"],"import Header from \"../../components/Header\";\nimport LabNavBar from \"../../components/LabNavBar\";\n\nconst LabHomeScreen = () => {\n  const user = JSON.parse(sessionStorage.getItem(\"emp_details\"));\n  return (\n    <div>\n      <LabNavBar />\n      <div className=\"page-content\">\n        <div className=\"padding\">\n          <div className=\"row container d-flex justify-content-center\">\n            <div className=\"col-xl-6 col-md-12\">\n              <div className=\"card user-card-full\">\n                <div className=\"row m-l-0 m-r-0\">\n                  <div className=\"col-sm-4 bg-c-lite-green user-profile\">\n                    <div className=\"card-block text-center text-white\">\n                      <div className=\"m-b-25\">\n                        {\" \"}\n                        <img\n                          src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                          className=\"img-radius\"\n                          alt=\"User-Profile-Image\"\n                        />{\" \"}\n                      </div>\n                      <h6 className=\"f-w-600\">{user.name}</h6>\n                      <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-8\">\n                    <div className=\"card-block\">\n                      <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">\n                        Id: {user.id}\n                      </h6>\n                      <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Role</p>\n                          <h6 className=\"text-muted f-w-400\">{user.role}</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Email</p>\n                          <h6 className=\"text-muted f-w-400\">{user.email}</h6>\n                        </div>\n                      </div>\n                      <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600\"></h6>\n                      <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Phone</p>\n                          <h6 className=\"text-muted f-w-400\">{user.contact}</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Date of Birth</p>\n                          <h6 className=\"text-muted f-w-400\">{user.dob}</h6>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default LabHomeScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientSignUpScreen.js",["580","581","582"],"import React,{ useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { patientSignupAction } from \"../../actions/patientAction\";\nimport Header from \"../../components/Header\";\n\nconst PatientSignUpScreen = (props) => {\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const patientSignUp = useSelector((store) => store.patientSignup);\n  const { loading, error, response } = patientSignUp;\n\n  const dispatch = useDispatch();\n  const onSignup = () => {\n    dispatch(patientSignupAction(name, gender, email, password));\n  };\n  \n  // useEffect(() => {\n  //   if (response && response.status == \"200\") {\n  //     props.history.push(\"/patientSignIn\");\n  //   } else if (response && response.status == \"error\") {\n  //     alert(response.error);\n  //   } else if (error) {\n  //     alert(error);\n  //   }\n  // });\n\n  return (\n    <div>\n      <Header title=\"Sign Up\" />\n      <div className=\"form\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Name</label>\n          <input\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Your name\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Gender</label>\n          <select\n            onChange={(e) => {\n              setGender(e.target.value);\n            }}\n            class=\"form-select\"\n            aria-label=\"Default select example\"\n          >\n            <option selected>Select Gender</option>\n            <option value=\"MALE\">Male</option>\n            <option value=\"FEMALE\">Female</option>\n            <option value=\"OTHER\">Other</option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Email</label>\n          <input\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"hms@gmail.com\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Password</label>\n          <input\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n            className=\"form-control\"\n            placeholder=\"*****\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <button onClick={onSignup} className=\"btn btn-success\">\n            Sign Up\n          </button>\n          <div className=\"float-end\">\n            Already have account? <Link to=\"/patientSignIn\">SignIn here</Link>\n          </div>\n        </div>\n        {loading && (\n          <div className=\"container text-center\">waiting for response</div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default PatientSignUpScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientSignInScreen.js",["583","584","585","586"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { patientSigninAction } from \"../../actions/patientAction\";\nimport Header from \"../../components/Header\";\n\nconst PatientSignInScreen = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const patientSignin = useSelector((store) => store.patientSignin);\n  const { loading, error, response } = patientSignin;\n\n  const dispatch = useDispatch();\n  const onSignin = () => {\n    dispatch(patientSigninAction(email, password));\n  };\n\n  useEffect(() => {\n    if (response && response.status == \"200\") {\n      sessionStorage.setItem(\"pat_info\", JSON.stringify(response.data));\n      sessionStorage.setItem(\"isLoggedIn\", true);\n      props.history.push(\"/bookAppointment\");\n    } else if (response && response.status == \"error\") {\n      alert(response.error);\n    } else if (error) {\n      alert(error);\n    }\n  }, [loading, error, response]);\n\n  return (\n    <div>\n      <div className=\"center-align fadeInDown\">\n        <h3 className=\"text-center\">Patient Signin</h3>\n        <div className=\"form box-shadow\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Email</label>\n            <input\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"hms@gmail.com\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Password</label>\n            <input\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"*****\"\n            ></input>\n          </div>\n        </div>\n        <div className=\"text-center\">\n          <button\n            onClick={onSignin}\n            className=\"btn btn-success btn-lg btn-block\"\n          >\n            Signin\n          </button>\n          <div>\n            New User? <Link to=\"/patientSignUp\">Signup here</Link>\n          </div>\n        </div>\n      </div>\n      {loading && (\n        <div className=\"Container text-center\">waiting for response</div>\n      )}\n    </div>\n  );\n};\nexport default PatientSignInScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminHomeScreen.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\LabMgrScreens\\LabManagerViewPrescScreen.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientEditProfileScreen.js",["587","588","589","590","591"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  patientGetProfileAction,\n  patientEditProfileAction,\n} from \"../../actions/patientAction\";\nimport Header from \"../../components/Header\";\nimport PatientNavBar from \"../../components/PatientNavBar\";\n\nconst PatientEditProfileScreen = (props) => {\n  const user = JSON.parse(sessionStorage.getItem(\"pat_info\"));\n\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [age, setAge] = useState();\n  const [phone, setPhone] = useState(\"\");\n  const [bloodGroup, setBloodGroup] = useState(\"\");\n\n  const patientGetProfile = useSelector((store) => store.patientGetprofile);\n  const { loading, error, response } = patientGetProfile;\n\n  const patientEditProfile = useSelector((store) => store.patientEditprofile);\n  const { eloading, eerror, eresponse } = patientEditProfile;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(patientGetProfileAction(user.id));\n  }, []);\n\n  useEffect(() => {\n    setName(response && response.data.name);\n    setGender(response && response.data.gender);\n    setEmail(response && response.data.email);\n    setPassword(response && response.data.password);\n    setCity(response && response.data.city);\n    setAge(response && response.data.age);\n    setPhone(response && response.data.phone);\n    setBloodGroup(response && response.data.bloodGroup);\n  }, [response]);\n\n  const onUpdate = () => {\n    dispatch(\n      // console.log(\n      //   'my data ',\n      //   name,\n      //   gender,\n      //   email,\n      //   password,\n      //   city,\n      //   age,\n      //   contact,\n      //   bloodGroup\n      // ),\n      patientEditProfileAction(\n        name,\n        gender,\n        email,\n        password,\n        city,\n        age,\n        phone,\n        bloodGroup\n      )\n    );\n  };\n\n  useEffect(() => {\n    if (eresponse && eresponse.status == \"200\") {\n      alert(\"profile updated successfully\");\n      props.history.push(\"/patientHome\");\n    } else if (eresponse && eresponse.status == \"error\") {\n      alert(eresponse.error);\n    } else if (error) {\n      alert(error);\n    }\n  }, [eloading, eerror, eresponse]);\n  return (\n    <div>\n      <PatientNavBar name={user.name} />\n      <div className=\"form edit-profile\">\n        <Header title=\"Edit Profile\" />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                defaultValue={name}\n                readOnly={true}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                defaultValue={email}\n                readOnly={true}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Age</label>\n              <input\n                onChange={(e) => {\n                  setAge(e.currentTarget.value);\n                }}\n                type=\"number\"\n                className=\"form-control\"\n                defaultValue={age}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Blood Group</label>\n              <input\n                onChange={(e) => {\n                  setBloodGroup(e.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control\"\n                defaultValue={bloodGroup}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Gender</label>\n              <select\n                onChange={(e) => {\n                  setGender(e.target.value);\n                }}\n                className=\"form-select\"\n                aria-label=\"Default select example\"\n                readOnly={true}\n              >\n                <option defaultValue={gender}>{gender}</option>\n                <option value=\"MALE\">Male</option>\n                <option value=\"FEMALE\">Female</option>\n                <option value=\"OTHER\">Other</option>\n              </select>\n            </div>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Password</label>\n              <input\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                className=\"form-control\"\n                placeholder=\"*****\"\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Phone</label>\n              <input\n                onChange={(e) => {\n                  setPhone(e.currentTarget.value);\n                }}\n                type=\"number\"\n                className=\"form-control\"\n                defaultValue={phone}\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">City</label>\n              <input\n                onChange={(e) => {\n                  setCity(e.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control\"\n                defaultValue={city}\n              />\n            </div>\n          </div>\n\n          <div className=\"text-center\">\n            <button\n              onClick={onUpdate}\n              className=\"btn btn-success btn-lg btn-block\"\n            >\n              Update\n            </button>\n          </div>\n          {loading && <div>waiting for response</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default PatientEditProfileScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpHomeScreen.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorAppointmentScreen.js",["592"],"import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAppointment } from '../../actions/DoctorAction'\nimport Header from '../../components/Header'\n\nconst DoctorAppointmentScreen = (props) => {\n  const doctor = useSelector((store) => store.employeeSignin)\n  const { response } = doctor\n  const docId = response && response.data && response.data.id\n  const dispatch = useDispatch()\n  const appointments = useSelector((store) => store.appointment)\n  const { error2, response2, loading2 } = appointments\n\n  // call this only once (when the page has loaded successfully)\n  useEffect(() => {\n    dispatch(getAppointment(docId))\n  }, [])\n\n  useEffect(() => {}, [error2, response2, loading2])\n  const create_med = () => {\n    console.log('pId ' + sessionStorage['patient_id'])\n    props.history.push('/doctor/med_list')\n  }\n  const create_test = () => {\n    console.log('pId ' + sessionStorage['patient_id'])\n    props.history.push('/doctor/test_list')\n  }\n  return (\n    <div className=\"container\">\n      <Header title=\"Appointments\" />\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Appointment id</th>\n            <th>Date</th>\n            <th>Patient id</th>\n            <th>Patient name</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response2 &&\n            response2.length > 0 &&\n            response2.map((appointment) => {\n              return (\n                <tr>\n                  <td>{appointment.id}</td>\n                  <td>{appointment.apptDate}</td>\n                  <td>{appointment.apptPatient.id}</td>\n                  <td>{appointment.apptPatient.name}</td>\n                  <td>\n                    <button\n                      class=\"btn btn-success\"\n                      onClick={() => {\n                        sessionStorage.setItem(\n                          'patient_id',\n                          appointment.apptPatient.id\n                        )\n                        create_med()\n                      }}>\n                      Create Medicine Prescription\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      class=\"btn btn-success\"\n                      onClick={() => {\n                        sessionStorage.setItem(\n                          'patient_id',\n                          appointment.apptPatient.id\n                        )\n                        create_test()\n                      }}>\n                      Create Test Prescription\n                    </button>\n                  </td>\n                  <td></td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default DoctorAppointmentScreen\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorMedPrescriptionScreen.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorTestPrescriptionScreen.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorTestListScreen.js",["593","594","595"],"import Header from '../../components/Header'\nimport '../../App.css'\n\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getTests,\n  testPresc,\n} from '../../actions/DoctorAction'\nconst DoctorTestListScreen = (props) => {\n  const dispatch = useDispatch()\n\n\n  const tests = useSelector((store) => store.test)\n  const { error, response, loading } = tests\n\n  useEffect(() => {\n    dispatch(getTests())\n  }, [])\n\n  useEffect(() => {}, [error, response, loading])\n  let list = []\n  const test_presc = () => {\n    dispatch(testPresc(list))\n    props.history.push('/doctor/test_presc')\n  }\n\n  const add_to_list = (id) => {\n    list = list.filter((item) => item != id)\n    list.push(id)\n  }\n  const remove_from_list = (id) => {\n    list = list.filter((item) => item != id)\n  }\n  return (\n    <div className=\"container\">\n      <Header title=\"List\" />\n      <div>\n        <div className=\"subheader \">Select Tests</div>\n        <table className=\"table table-striped \">\n          <thead>\n            <tr>\n              <th>Test id</th>\n              <th>Test name</th>\n              <th>Test charge</th>\n\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {response &&\n              response.length > 0 &&\n              response.map((note) => {\n                return (\n                  <tr id={note.id}>\n                    <td>{note.id}</td>\n                    <td>{note.name}</td>\n                    <td>{note.charges}</td>\n\n                    <td>\n                      <button\n                        class=\"btn btn-primary mx-3\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'lightblue'\n                          add_to_list(note.id)\n                        }}>\n                        Add\n                      </button>\n                      <button\n                        class=\"btn btn-danger\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'white'\n                          remove_from_list(note.id)\n                        }}>\n                        Remove\n                      </button>\n                    </td>\n                    <td></td>\n                  </tr>\n                )\n              })}\n          </tbody>\n        </table>\n      </div>\n      <div class=\"text-center\">\n        <button onClick={test_presc} className=\"btn btn-success float-center\">\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default DoctorTestListScreen\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientViewPrescScreen.js",["596"],"import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { patientGetPrescAction } from '../../actions/patientAction'\nimport Header from '../../components/Header'\nimport PatientNavBar from '../../components/PatientNavBar'\n\nconst PatientViewPrescScreen = () => {\n  const user = JSON.parse(sessionStorage.getItem('pat_info'))\n  const prescriptions = useSelector((store) => store.patientViewPrescription)\n  const { response } = prescriptions\n\n  //const[prescription,setPrescription]=useState('')\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(patientGetPrescAction(user.id))\n  }, [])\n\n  return (\n    <div>\n      <PatientNavBar name={user.name} />\n      <Header title=\"My prescriptions\" />\n\n      <table className=\"table table-striped container\">\n        <thead>\n          <tr>\n            <th>Number</th>\n            <th>Date</th>\n            <th>Doctor</th>\n            <th>Details</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response &&\n            response.data &&\n            response.data.length > 0 &&\n            response.data.map((presc, index) => {\n              return (\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{presc.prescDate}</td>\n                  <td>Dr. {presc.name}</td>\n                  <td>\n                    <table class=\"table table-hover\">\n                      <thead>\n                        <tr>\n                          <th>No.</th>\n                          <th>Medicine Name</th>\n                          <th>Qty</th>\n                        </tr>\n                      </thead>\n                      {presc.medicines.map((med, index2) => {\n                        return (\n                          <tbody>\n                            <tr>\n                              <td>{index2 + 1}</td>\n                              <td>{med.medicine.name}</td>\n                              <td>{med.qty}</td>\n                            </tr>\n                          </tbody>\n                        )\n                      })}\n                    </table>\n                  </td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\nexport default PatientViewPrescScreen\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientHomeScreen.js",["597","598"],"import PatientNavBar from \"../../components/PatientNavBar\";\n\nconst PatientHomeScreen = (props) => {\n  const user = JSON.parse(sessionStorage.getItem(\"pat_info\"));\n  return (\n    <div>\n      <PatientNavBar name={user.name} />\n      <div className=\"page-content\">\n        <div className=\"padding\">\n          <div className=\"row container d-flex justify-content-center\">\n            <div className=\"col-xl-6 col-md-12\">\n              <div className=\"card user-card-full\">\n                <div className=\"row m-l-0 m-r-0\">\n                  <div className=\"col-sm-4 bg-c-lite-green user-profile\">\n                    <div className=\"card-block text-center text-white\">\n                      <div className=\"m-b-25\">\n                        {\" \"}\n                        <img\n                          src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                          className=\"img-radius\"\n                          alt=\"User-Profile-Image\"\n                        />{\" \"}\n                      </div>\n                      <h6 className=\"f-w-600\">{user.name}</h6>\n                      <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-8\">\n                    <div className=\"card-block\">\n                      <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">\n                        Id: {user.id}\n                      </h6>\n                      <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Role</p>\n                          <h6 className=\"text-muted f-w-400\">Patient</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Email</p>\n                          <h6 className=\"text-muted f-w-400\">{user.email}</h6>\n                        </div>\n                      </div>\n                      <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600\"></h6>\n                      <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">Phone</p>\n                          <h6 className=\"text-muted f-w-400\">{user.contact}</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">City</p>\n                          <h6 className=\"text-muted f-w-400\">{user.city}</h6>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default PatientHomeScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorMedicineListScreen.js",["599","600","601"],"import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getMedicines, medPresc } from '../../actions/DoctorAction'\nimport '../../App.css'\nimport Header from '../../components/Header'\n\nconst DoctorMedicineListScreen = (props) => {\n  const dispatch = useDispatch()\n  const medicines = useSelector((store) => store.medicine)\n  const { error, response, loading } = medicines\n\n\n  // call this only once (when the page has loaded successfully)\n  useEffect(() => {\n    dispatch(getMedicines())\n  }, [])\n\n  useEffect(() => {}, [error, response, loading])\n  let list = []\n  const med_presc = () => {\n    dispatch(medPresc(list))\n    props.history.push('/doctor/med_presc')\n  }\n  const add_to_list = (id, qty) => {\n    list = list.filter((item) => item != id)\n    list.push({\n      medicine: { id: id },\n      qty: qty,\n    })\n    console.log('lists :' + list)\n    console.log('qty :' + qty)\n  }\n  const remove_from_list = (id, qty) => {\n    list = list.filter((item) => item.medicine.id != id)\n\n    console.log('lists :' + list)\n    console.log('qty :' + qty)\n  }\n  return (\n    <div>\n      <Header title=\"List\" />\n      <div>\n        <div className=\"subheader \">Select Medicines</div>\n        <table className=\"table table-striped container\">\n          <thead>\n            <tr>\n              <th>Medicine id</th>\n              <th>Medicine name</th>\n\n              <th>Quantity</th>\n\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {response &&\n              response.length > 0 &&\n              response.map((note) => {\n                return (\n                  <tr id={note.id}>\n                    <td>{note.id}</td>\n                    <td>{note.name}</td>\n                    <td>\n                      <input id={note.name} type=\"number\" name=\"qty\" />\n                    </td>\n                    <td>\n                      <button\n                        class=\"btn btn-primary\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'lightblue'\n                          add_to_list(\n                            note.id,\n                            document.getElementById(note.name).value\n                          )\n                        }}>\n                        Add\n                      </button>\n                    </td>\n                    <td>\n                      <button\n                        class=\"btn btn-danger\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'white'\n                          remove_from_list(\n                            note.id,\n                            document.getElementById(note.name).value\n                          )\n                        }}>\n                        Remove\n                      </button>\n                    </td>\n                    <td></td>\n                  </tr>\n                )\n              })}\n          </tbody>\n        </table>\n      </div>\n      <div class=\"text-center\">\n        <button onClick={med_presc} className=\"btn btn-success float-center\">\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default DoctorMedicineListScreen\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\paymentReducer.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\recpReducers.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorScreen.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\DoctorReducer.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\LabManagerReducer.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\employeeReducers.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\reducers\\patientReducer.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\Contact.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\Doctors.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\About.js",["602"],"import Footer from \"../components/Footer\";\nimport Header from \"../components/Header\";\n\nconst AboutScreen = () => {\n  return (\n    <div className=\"container center \">\n      <Header title=\"About Us\" />\n      <section id=\"about\" className=\"about\">\n        <div className=\"row\">\n          <div className=\"wow fadeInUp  container\" data-wow-delay=\"0.8s\">\n            <p className=\"font-weight-bold text-dark about-font\">\n              Our group has over two decades of experience in the healthcare\n              sector, and is known for providing quality healthcare and valuable\n              experience to all domestic and international patients. Our\n              healthcare offerings are supported by a team of compassionate and\n              dedicated medical professionals who have rich knowledge and\n              experience in their respective domains. In addition, the company\n              is built on lasting value systems that focuses on excellence,\n              expertise, empathy and innovation. This approach has given us an\n              in-depth understanding of specific disorders and their treatments,\n              enabling us to focus on providing the best treatment options and\n              care for our patients.\n            </p>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\nexport default AboutScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminViewEmployeesScreen.js",["603","604","605"],"import Header from \"../../components/Header\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  employeeDeleteAction,\n  viewEmployeesAction,\n} from \"../../actions/employeeActions\";\nconst AdminViewEmployeesScreen = (props) => {\n  const dispatch = useDispatch();\n  const viewEmployees = useSelector((store) => store.viewEmployees);\n  const { loading, response, error } = viewEmployees;\n\n  const deleteEmployee = useSelector((store) => store.deleteEmployee);\n  const { dloading, dresponse, derror } = deleteEmployee;\n  let message;\n  const onDelete = (emp_id) => {\n    dispatch(employeeDeleteAction(emp_id));\n  };\n\n  const onUpdate = (emp_id) => {\n    sessionStorage.setItem(\"emp_id\", emp_id);\n    props.history.push(\"/admin/update-employee\");\n  };\n\n  useEffect(() => {\n    dispatch(viewEmployeesAction());\n  }, []);\n  useEffect(() => {\n    if (dresponse && dresponse.status == \"200\") {\n      alert(\"Employee deleted successfully\");\n      document.location.href = \"/admin/view-employees\";\n      // props.history.push(\"/admin/view-employees\");\n    } else if (derror) {\n      alert(\"Cannot delete employee\");\n    }\n  }, [derror, dresponse, dloading]);\n\n  useEffect(() => {\n    // console.log(\"use effect list \", response);\n  }, [error, response, loading]);\n  return (\n    <div className=\"container\">\n      <Header className=\"text-center\" title=\"List of  Employees\" />\n      <table className=\"table table-striped container\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Role</th>\n            <th>Delete</th>\n            <th>Update</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response &&\n            response.data.list.length > 0 &&\n            response.data.list.map((e) => {\n              return (\n                <tr>\n                  <td>{e.id}</td>\n                  <td>{e.name}</td>\n                  <td>{e.role}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        onDelete(e.id);\n                      }}\n                      className=\"btn btn-danger\"\n                      type=\"button\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        onUpdate(e.id);\n                      }}\n                      className=\"btn btn-primary\"\n                      type=\"button\"\n                    >\n                      Update\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminViewEmployeesScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminPaymentHistoryScreen.js",["606"],"import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Bar } from 'react-chartjs-2'\nimport { adminGetTotalChargesAction } from '../../actions/employeeActions'\nimport Header from '../../components/Header'\n\nconst AdminPaymentHistoryScreen = () => {\n  const totalCharges = useSelector((store) => store.totalCharges)\n  const { response } = totalCharges\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(adminGetTotalChargesAction())\n  }, [])\n  const data = response ? response.data : []\n  return (\n    <div className=\"container\">\n      <Header title=\"Payment History\" />\n      <Bar\n        className=\"container\"\n        data={{\n          labels: ['Cons Charges', 'Test Charges', 'Ward Charges'],\n          datasets: [\n            {\n              label: 'Revenue',\n              data: data,\n              backgroundColor: 'rgba(54, 162, 132, 0.2)',\n              borderColor: 'black',\n              borderWidth: 1,\n            },\n          ],\n        }}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n        width={100}\n        height={200}\n      />\n    </div>\n  )\n}\n\nexport default AdminPaymentHistoryScreen\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\Profile.js",["607","608"],"const Profile = () => {\n  const admin = JSON.parse(sessionStorage.getItem(\"emp_details\"));\n  return (\n    <div className=\"page-content\">\n      <div className=\"padding\">\n        <div className=\"row container d-flex justify-content-center\">\n          <div className=\"col-xl-6 col-md-12\">\n            <div className=\"card user-card-full\">\n              <div className=\"row m-l-0 m-r-0\">\n                <div className=\"col-sm-4 bg-c-lite-green user-profile\">\n                  <div className=\"card-block text-center text-white\">\n                    <div className=\"m-b-25\">\n                      {\" \"}\n                      <img\n                        src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                        className=\"img-radius\"\n                        alt=\"User-Profile-Image\"\n                      />{\" \"}\n                    </div>\n                    <h6 className=\"f-w-600\">{admin.name}</h6>\n                    <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\n                  </div>\n                </div>\n                <div className=\"col-sm-8\">\n                  <div className=\"card-block\">\n                    <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">\n                      Id: {admin.id}\n                    </h6>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Role</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.role}</h6>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Email</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.email}</h6>\n                      </div>\n                    </div>\n                    <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600\"></h6>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Phone</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.contact}</h6>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Date of Birth</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.dob}</h6>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"card text-dark  mb-3 container profile\">\n        <div className=\"card-header\">Hii {admin.name}</div>\n        <div className=\"card-body\">\n          <h3 className=\"card-title\">Your Details:</h3>\n          <h5>Id:{admin.id}</h5>\n          <h5>Role:{admin.role}</h5>\n          <h5>Email:{admin.email}</h5>\n          <h5>Dob:{admin.dob}</h5>\n          <h5>Contact:{admin.contact}</h5>\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default Profile;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminUpdateEmployeeScreen.js",["609","610"],"import { useState, useEffect } from \"react\";\nimport {employeeUpdateAction } from \"../../actions/employeeActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst { default: Header } = require(\"../../components/Header\");\n\nconst AdminUpdateEmployeeScreen = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const dispatch = useDispatch();\n  const emp_id=sessionStorage.getItem('emp_id')\n  const employee_details = {\n    name,\n    email,\n    password,\n    contact,\n  };\n  const employeeUpdate = useSelector((store) => store.updateEmployee);\n  const { loading, response, error } = employeeUpdate;\n\n  useEffect(() => {\n    if (response && response.status == \"200\") {\n      // user successfully got registered\n      props.history.push(\"/admin/view-employees\");\n    } else if (error) {\n      // there is an error while making the API call\n      console.log(error);\n      alert(\"error while making API call\");\n    }\n  }, [loading, response, error]);\n\n  const onUpdate = () => {\n    dispatch(employeeUpdateAction(emp_id,employee_details));\n  };\n  return (\n    <div>\n      <Header title=\"Update Employee Details\" />\n      <div className=\"form\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Name</label>\n          <input\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Email</label>\n          <input\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"test@test.com\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Password</label>\n          <input\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"*****\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Contact No</label>\n          <input\n            onChange={(e) => {\n              setContact(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        \n        <div className=\"text-center\">\n          <button onClick={onUpdate} className=\"btn btn-primary\">\n            Update\n          </button>\n        </div>\n      </div>\n\n      {employeeUpdate.loading && <div>waiting for result</div>}\n    </div>\n  );\n};\n\nexport default AdminUpdateEmployeeScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminAddEmployeeScreen.js",["611"],"import { useState, useEffect } from \"react\";\nimport { employeeSignupAction } from \"../../actions/employeeActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst { default: Header } = require(\"../../components/Header\");\n\nconst AdminAddEmployeeScreen = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const employee_details = {\n    name,\n    email,\n    password,\n    gender,\n    contact,\n    role,\n    dob,\n    department,\n  };\n  const employeeSignup = useSelector((store) => store.employeeSignup);\n  const { loading, response, error } = employeeSignup;\n\n  useEffect(() => {\n    if (response && response.status == \"200\") {\n      // user successfully got registered\n      alert(\"Employee added successfully\");\n      document.location.href = \"/admin/view-employees\";\n    } else if (error) {\n      // there is an error while making the API call\n      console.log(error);\n      alert(\"error while making API call\");\n    }\n  }, [loading, response, error]);\n\n  const onSignup = () => {\n    dispatch(employeeSignupAction(employee_details));\n  };\n  return (\n    <div className=\"container\">\n      <Header title=\"Add Employee\" />\n      <div className=\"form\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Name</label>\n              <input\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                className=\"form-control\"\n              ></input>\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"test@test.com\"\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Password</label>\n              <input\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"*****\"\n              ></input>\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Date of birth</label>\n              <input\n                onChange={(e) => {\n                  setDob(e.target.value);\n                }}\n                type=\"date\"\n                className=\"form-control\"\n              ></input>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Contact No</label>\n              <input\n                onChange={(e) => {\n                  setContact(e.target.value);\n                }}\n                className=\"form-control\"\n              ></input>\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Gender</label>\n              <select\n                onChange={(e) => {\n                  setGender(e.target.value);\n                }}\n                className=\"form-select\"\n                aria-label=\"Default select example\"\n              >\n                <option defaultValue>Select Gender</option>\n                <option value=\"MALE\">Male</option>\n                <option value=\"FEMALE\">Female</option>\n                <option value=\"OTHER\">Other</option>\n              </select>\n            </div>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Role</label>\n              <select\n                onChange={(e) => {\n                  setRole(e.target.value);\n                }}\n                className=\"form-select\"\n                aria-label=\"Default select example\"\n              >\n                <option defaultValue>Select Role</option>\n                <option value=\"DOCTOR\">Doctor</option>\n                <option value=\"RECEPTIONIST\">Receptionist</option>\n                <option value=\"LABMANAGER\">Lab Manager</option>\n              </select>\n            </div>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Department Id</label>\n              <select\n                onChange={(e) => {\n                  setDepartment(e.target.value);\n                }}\n                class=\"form-select\"\n                aria-label=\"Default select example\"\n              >\n                <option selected>Select Department Id</option>\n                <option value=\"1\">Admin</option>\n                <option value=\"2\">Cardiology</option>\n                <option value=\"3\">Neurology</option>\n                <option value=\"4\">Orthopedics</option>\n                <option value=\"5\">Opthalmology</option>\n                <option value=\"6\">Receptionist</option>\n                <option value=\"7\">LABMANAGER</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <button onClick={onSignup} className=\"btn btn-success btn-block\">\n              Add Employee\n            </button>\n          </div>\n        </div>\n      </div>\n      {employeeSignup.loading && <div>waiting for result</div>}\n    </div>\n  );\n};\n\nexport default AdminAddEmployeeScreen;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpAcceptPayment.js",["612","613","614"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  recpGetAllAppointmentsAction,\n  recpMakePaymentAction,\n} from \"../../actions/recpActions\";\nimport Header from \"../../components/Header\";\n\nconst RecpAcceptPayment = (props) => {\n  const [patientId, setPatientId] = useState(\"\");\n  const [apptId, setApptId] = useState(\"\");\n  const [wardCharges, setWardCharges] = useState(\"\");\n  const [testCharges, setTestCharges] = useState(\"\");\n  let appointments = [];\n  const getAppointment = (aId) => {\n    appointments = aresponse.data.filter((a) => a.id == aId);\n    setPatientId(appointments.pop().apptPatient.id);\n  };\n  const allAppts = useSelector((store) => store.recpAllAppointments);\n  const { aresponse } = allAppts;\n  const recpMakePayment = useSelector((store) => store.recpMakePayment);\n  let { merror, mresponse } = recpMakePayment;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(recpGetAllAppointmentsAction());\n  }, []);\n\n  const onPayment = () => {\n    dispatch(\n      recpMakePaymentAction(patientId, apptId, wardCharges, testCharges)\n    );\n  };\n\n  useEffect(() => {\n    if (mresponse && mresponse.status == \"202\") {\n      alert(\"Payment successfull\");\n      document.location.href = \"/receptionist/home\";\n    } else if (merror) {\n      alert(\"Payment failed....\");\n    }\n  }, [merror, mresponse]);\n\n  return (\n    <div>\n      <Header title=\"Accept Payment\" />\n      <div className=\"form\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Appt Id</label>\n          <select\n            onChange={(e) => {\n              getAppointment(e.target.value);\n              setApptId(e.target.value);\n            }}\n            className=\"form-select\"\n          >\n            <option defaultValue>Select appointment id</option>\n            {aresponse &&\n              aresponse.data.length > 0 &&\n              aresponse.data.map((a) => {\n                return <option value={a.id}>{a.id}</option>;\n              })}\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Patient Id</label>\n          <select\n            disabled\n            onChange={(e) => {\n              setPatientId(e.target.value);\n            }}\n            className=\"form-select\"\n          >\n            <option defaultValue=\"\" value={patientId}>\n              {patientId}\n            </option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Ward Charges</label>\n          <input\n            defaultValue={0.0}\n            onChange={(e) => {\n              setWardCharges(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Lab Charges</label>\n          <input\n            defaultValue={0.0}\n            onChange={(e) => {\n              setTestCharges(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        <div className=\"text-center\">\n          <button onClick={onPayment} className=\"btn btn-success btn-block \">\n            Make Payment\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecpAcceptPayment;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpViewAppointments.js",["615","616"],"import Header from \"../../components/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport {\n  recpGetDoctorsAction,\n  recpViewAppointmentsAction,\n} from \"../../actions/recpActions\";\n\nconst RecpViewAppointments = (props) => {\n  const [doc_id, setDoc_id] = useState(\"\");\n  const dispatch = useDispatch();\n  const doctors = useSelector((store) => store.recpDoctors);\n\n  const appointments = useSelector((store) => store.recpAppointments);\n  const { response } = appointments;\n\n  useEffect(() => {\n    dispatch(recpGetDoctorsAction());\n  }, []);\n\n  useEffect(() => {\n    dispatch(recpViewAppointmentsAction(doc_id));\n  }, [doc_id]);\n\n  return (\n    <div className=\"recp-view-appt container\">\n      <Header title=\"Today's All Appointments\" />\n      <div>\n        <label className=\"form-label\">Select Doctor</label>\n        <select\n          onChange={(e) => {\n            setDoc_id(e.target.value);\n          }}\n          className=\"form-select\"\n          aria-label=\"Default select example\"\n        >\n          <option defaultValue>Select Doctor</option>\n          {doctors.dresponse &&\n            doctors.dresponse.data.map((d) => {\n              return <option value={d.id}>{d.name}</option>;\n            })}\n        </select>\n      </div>\n      {doc_id &&\n      appointments.response &&\n      appointments.response.data.length > 0 ? (\n        <div>\n          <h3 className=\"title\">Appointments</h3>\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>App Id</th>\n                <th>App date</th>\n                <th>Patient Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {response.data.map((app) => {\n                return (\n                  <tr>\n                    <td>{app.id}</td>\n                    <td>{app.apptDate}</td>\n                    {app.apptPatient && <td>{app.apptPatient.name}</td>}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <h3 className=\"text-center\">No Appointments for the doctor today</h3>\n      )}\n    </div>\n  );\n};\n\nexport default RecpViewAppointments;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpDischargePatient.js",["617","618"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  recpDischargePatientAction,\n  recpGetAdmitPatientsAction,\n} from \"../../actions/recpActions\";\nimport Header from \"../../components/Header\";\n\nconst RecpDischargePatient = (props) => {\n  const dischargePat = useSelector((store) => store.recpDischargePatient);\n  const { derror, dresponse, dloading } = dischargePat;\n  let isDischarged = false;\n  const admitPatients = useSelector((store) => store.recpGetAdmitPatients);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(recpGetAdmitPatientsAction());\n  }, [isDischarged]);\n\n  useEffect(() => {\n    if (dresponse && dresponse.status == \"200\") {\n      document.location.href = \"/receptionist/discharge-patient\";\n      alert(\"Patient discharged successfully\");\n    }else if(derror){\n      alert(derror);\n    }\n  }, [derror, dresponse, dloading]);\n\n  const onDischarge = (id) => {\n    isDischarged = true;\n    dispatch(recpDischargePatientAction(id));\n    // window.location.reload(true);\n  };\n  return (\n    <div>\n      <Header title=\"Discharge Patient\" />\n      <div className=\"container\">\n        {admitPatients.response &&\n        admitPatients.response.data.list.length > 0 ? (\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Aadmit Date</th>\n                <th>Patient Id</th>\n                <th>Dept Id</th>\n                <th>Discharge</th>\n              </tr>\n            </thead>\n            <tbody>\n              {admitPatients.response.data.list.map((e) => {\n                return (\n                  <tr>\n                    <td>{e.id}</td>\n                    <td>{e.admitDate}</td>\n                    <td>{e.patient}</td>\n                    <td>{e.department}</td>\n                    <td>\n                      <button\n                        onClick={() => {\n                          onDischarge(e.id);\n                        }}\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                      >\n                        Discharge\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        ) : (\n          <h3>No Patient is admitted</h3>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default RecpDischargePatient;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpAdmitPatient.js",["619"],"import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  recpAdmitPatientAction,\n  recpGetAllAppointmentsAction,\n} from \"../../actions/recpActions\";\nimport Header from \"../../components/Header\";\nimport { useEffect, useState } from \"react\";\nconst RecpAdmitPatient = (props) => {\n  const [admitDate, setAdmitDate] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const allAppts = useSelector((store) => store.recpAllAppointments);\n  const {  aresponse } = allAppts;\n  \n  const dispatch = useDispatch();\n  const onAdmit = (id) => {\n    console.log(\"id\", id);\n    dispatch(recpAdmitPatientAction(id, admitDate, department));\n    //  window.location.reload(true)\n  };\n  useEffect(() => {}, []);\n\n  useEffect(() => {\n    dispatch(recpGetAllAppointmentsAction());\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Admit Patient\" />\n      {aresponse && aresponse.data.length > 0 ? (\n        <div className=\"form\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Select Date</label>\n            <input\n              required\n              onChange={(e) => {\n                setAdmitDate(e.target.value);\n              }}\n              type=\"date\"\n              className=\"form-control\"\n            ></input>\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Department Id</label>\n            <select\n              required\n              onChange={(e) => {\n                setDepartment(e.target.value);\n              }}\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n            >\n              <option selected>Select Department Id</option>\n              <option value=\"2\">Cardiology</option>\n              <option value=\"3\">Neurology</option>\n              <option value=\"4\">Orthopedics</option>\n              <option value=\"5\">Opthalmology</option>\n            </select>\n          </div>\n\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Appt Id</th>\n                <th>Appt Date</th>\n                <th>Patient Name</th>\n                <th>Admit</th>\n              </tr>\n            </thead>\n            <tbody>\n              {aresponse && aresponse.data.map((e) => {\n                return (\n                  <tr>\n                    <td>{e.id}</td>\n                    <td>{e.apptDate}</td>\n                    <td>{e.apptPatient.name}</td>\n                    <td>\n                      <button\n                        onClick={() => {\n                          onAdmit(e.id);\n                        }}\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                      >\n                        Admit\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <h3>No Patient to be admitted</h3>\n      )}\n    </div>\n  );\n};\n\nexport default RecpAdmitPatient;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\Home.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\RecpHomeNavBar.js",["620"],"import { Link } from \"react-router-dom\";\nimport { employeeLogoutAction } from \"../actions/employeeActions\";\n\nconst { useSelector,useDispatch } = require(\"react-redux\");\n\nconst RecpHomeNavBar = (props) => {\n  const receptionist = JSON.parse(sessionStorage.getItem('emp_details'))\n  console.log(\"receptionist\",receptionist)\n  const dispatch = useDispatch()\n  const onLogout = () => {\n    dispatch(employeeLogoutAction())\n  };\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarTogglerDemo01\"\n            aria-controls=\"navbarTogglerDemo01\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n            <span className=\"navbar-brand\">Hospital Management System</span>\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <Link to=\"/receptionist/home\">\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link active nav-bar-item\"\n                    aria-current=\"page\"\n                  >\n                    Home\n                  </span>\n                </li>\n              </Link>\n              <Link to=\"/receptionist/view-appointments\">\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link active nav-bar-item\"\n                    aria-current=\"page\"\n                  >\n                   View Appointments\n                  </span>\n                </li>\n              </Link>\n              <Link to=\"/receptionist/admit-patient\">\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link active nav-bar-item\"\n                    aria-current=\"page\"\n                  >\n                    Admit Patient\n                  </span>\n                </li>\n              </Link>\n              <Link to=\"/receptionist/discharge-patient\">\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link active nav-bar-item\"\n                    aria-current=\"page\"\n                  >\n                    Discharge Patient\n                  </span>\n                </li>\n              </Link>\n              <Link to=\"/receptionist/accept-payment\">\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link active nav-bar-item\"\n                    aria-current=\"page\"\n                  >\n                    Accept Payment\n                  </span>\n                </li>\n              </Link>\n            </ul>\n            <div>Welcome {receptionist.name}</div>\n            <div>\n              <button\n                onClick={onLogout}\n                className=\"btn btn-success mx-3 float-end\"\n                type=\"button\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\nexport default RecpHomeNavBar;\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\PatientNavBar.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\Header.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\Footer.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\DoctorHomeNavBar.js",["621"],"import { Link } from 'react-router-dom'\nimport '../App.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { employeeLogoutAction } from \"../actions/employeeActions\";\n\nconst DoctorHomeNavBar = () => {\n  const dispatch = useDispatch()\n  const doctor = JSON.parse(sessionStorage.getItem('emp_details'))\n  const onLogout = () => {\n    dispatch(employeeLogoutAction())\n  }\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarTogglerDemo01\"\n            aria-controls=\"navbarTogglerDemo01\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n            <span className=\"navbar-brand\">Hospital Management System</span>\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <Link to=\"/doctor/home\">\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link active nav-bar-item\"\n                    aria-current=\"page\">\n                    Home\n                  </span>\n                </li>\n              </Link>\n              <Link to=\"/doctor/appointments\">\n                <li className=\"nav-item\">\n                  <span\n                    className=\"nav-link active nav-bar-item\"\n                    aria-current=\"page\">\n                    View Appointment\n                  </span>\n                </li>\n              </Link>\n            </ul>\n            <div>Welcome {doctor.name} !</div>\n            <div>\n              <button\n                onClick={onLogout}\n                className=\"btn btn-success mx-3 float-end\"\n                type=\"button\">\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  )\n}\nexport default DoctorHomeNavBar\n","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\AdminHomeNavBar.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\LabNavBar.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\PaymentAction.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\labManagerActios.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\patientAction.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\components\\HomeNavBar.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\employeeActions.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\DoctorAction.js",["622"],"import {\n  APPOINTMENT_FETCH_REQUEST,\n  APPOINTMENT_FETCH_SUCCESS,\n  APPOINTMENT_FETCH_FAIL ,\n  APPOINTMENT_FETCH_RESET,\n  MEDICINELIST_FETCH_REQUEST,\n  MEDICINELIST_FETCH_SUCCESS,\n  MEDICINELIST_FETCH_FAIL,\n  TESTPRESC_FETCH_REQUEST,\n  TESTPRESC_FETCH_SUCCESS,\n  TESTPRESC_FETCH_FAIL,\n  TESTLIST_FETCH_REQUEST,\n  TESTLIST_FETCH_SUCCESS,\n  TESTLIST_FETCH_FAIL,\n  MEDPRESC_FETCH_REQUEST,\n  MEDPRESC_FETCH_SUCCESS,\n  MEDPRESC_FETCH_FAIL,\n} from \"../constants/DoctorConstants\"\nimport axios from 'axios'\nimport {SPRINGURL} from \"../constants/URLConstants\"\n\nexport const getAppointment = (docId) => {\n \n    return (dispatch) => {\n      dispatch({\n        type: APPOINTMENT_FETCH_REQUEST,\n      })\n  \n      const header = {\n        headers: {\n          'Content-Type': 'application/json',\n          \n        },\n      }\n      \n      const url = SPRINGURL+`/doctor/appointments/${sessionStorage['docId']}`;\n      axios\n        .get(url, header)\n        .then((response) => {\n          dispatch({\n            type: APPOINTMENT_FETCH_SUCCESS,\n            payload: response.data,\n          })\n        })\n        .catch((error) => {\n          dispatch({\n            type: APPOINTMENT_FETCH_FAIL,\n            payload: error,\n          })\n        })\n    }\n  }\n  \n  export const getMedicines = () => {\n    return (dispatch) => {\n      dispatch({\n        type: MEDICINELIST_FETCH_REQUEST,\n      })\n  \n      const header = {\n        headers: {\n          'Content-Type': 'application/json',\n          \n        },\n      }\n      \n      const url = SPRINGURL+\"/doctor/medicines\";\n      axios\n        .get(url, header)\n        .then((response) => {\n          dispatch({\n            type: MEDICINELIST_FETCH_SUCCESS,\n            payload: response.data,\n          })\n        })\n        .catch((error) => {\n          dispatch({\n            type: MEDICINELIST_FETCH_FAIL,\n            payload: error,\n          })\n        })\n    }\n  }\n\n  export const testPresc = (tests_id) => {\n    return (dispatch) => {\n      dispatch({\n        type: TESTPRESC_FETCH_REQUEST,\n      })\n  \n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n  \n      const body = {\n        p_id:sessionStorage['patient_id'],\n        tests_id\n      }\n      const url = SPRINGURL+`/doctor/tests/prescription/${sessionStorage['docId']}`;\n      axios\n        .post(url, body, header)\n        .then((response) => {\n          dispatch({\n            type: TESTPRESC_FETCH_SUCCESS,\n            payload: response,\n          })\n        })\n        .catch((error) => {\n          dispatch({\n            type: TESTPRESC_FETCH_FAIL,\n            payload: error,\n          })\n        })\n    }\n  }\n\n  export const getTests = () => {\n    return (dispatch) => {\n      dispatch({\n        type: TESTLIST_FETCH_REQUEST,\n      })\n  \n      const header = {\n        headers: {\n          'Content-Type': 'application/json',\n          \n        },\n      }\n      \n      const url = SPRINGURL+\"/doctor/tests\";\n      axios\n        .get(url, header)\n        .then((response) => {\n          dispatch({\n            type: TESTLIST_FETCH_SUCCESS,\n            payload: response.data,\n          })\n        })\n        .catch((error) => {\n          dispatch({\n            type: TESTLIST_FETCH_FAIL,\n            payload: error,\n          })\n        })\n    }\n  }\n\n  export const medPresc = (medicines) => {\n    return (dispatch) => {\n      dispatch({\n        type: MEDPRESC_FETCH_REQUEST,\n      })\n  \n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n  \n      const body = {\n        pId:sessionStorage['patient_id'],\n        medicines\n      }\n      const url = SPRINGURL+`/doctor/medicine/prescription/${sessionStorage['docId']}`;\n      axios\n        .post(url, body, header)\n        .then((response) => {\n          dispatch({\n            type: MEDPRESC_FETCH_SUCCESS,\n            payload: response,\n          })\n        })\n        .catch((error) => {\n          dispatch({\n            type: MEDPRESC_FETCH_FAIL,\n            payload: error,\n          })\n        })\n    }\n  }","E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\PaymentConstants.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\labManagerConstants.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\patientConstants.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\RecpConstants.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\employeeConstants.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\DoctorConstants.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\actions\\recpActions.js",[],"E:\\cdac\\PROJECT\\hospitalmanagementsystem-master\\hospitalmanagementsystem-master\\Frontend\\hmsfront\\src\\constants\\URLConstants.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\index.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reportWebVitals.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\App.js",["623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639"],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\store.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\BookAppointmentScreen.js",["640","641","642","643","644","645","646","647","648"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  patientGetdoctors,\r\n  patientBookAppointment,\r\n} from \"../../actions/patientAction\";\r\nimport Header from \"../../components/Header\";\r\nimport PatientNavBar from \"../../components/PatientNavBar\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { appointmentPaymentAction } from \"../../actions/PaymentAction\";\r\n\r\nconst BookAppointmentScreen = (props) => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"pat_info\"));\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  // const user = useSelector((store) => store.patientSignin.response.data)\r\n  const doctors = useSelector((store) => store.patientGetDoc);\r\n  const { error, response, loading } = doctors;\r\n  const bookAppointment = useSelector((store) => store.patientBookAppointment);\r\n  const { berror, bloading, bresponse } = bookAppointment;\r\n\r\n  const paymentDetails = useSelector((store) => store.paymentDetails);\r\n  const { perror, ploading, presponse } = paymentDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(patientGetdoctors());\r\n  }, []);\r\n\r\n  const onToken = (token) => {\r\n    console.log(token);\r\n    // TODO: Send the token information and any other\r\n    // relevant information to your payment process\r\n    // server, wait for the response, and update the UI\r\n    // accordingly. How this is done is up to you. Using\r\n    // XHR, fetch, or a GraphQL mutation is typical.\r\n    dispatch(appointmentPaymentAction(user.email, token.id, 300));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (presponse && presponse.status == \"200\") {\r\n      dispatch(patientBookAppointment(date, user.id, doctor));\r\n    } else if (presponse && presponse.status == \"error\") {\r\n      alert(presponse.error);\r\n    } else if (perror) {\r\n      alert(perror);\r\n    }\r\n  }, [perror, ploading, presponse]);\r\n\r\n  useEffect(() => {\r\n    if (bresponse && bresponse.status == \"200\") {\r\n      alert(\"appointment booked successfully\");\r\n      props.history.push(\"/patientHome\");\r\n    } else if (bresponse && bresponse.status == \"error\") {\r\n      alert(bresponse.error);\r\n    } else if (berror) {\r\n      alert(berror);\r\n    }\r\n  }, [berror, bloading, bresponse]);\r\n\r\n  return (\r\n    <div>\r\n      <PatientNavBar name={user.name} />\r\n      <div className=\"center-align fadeInDown\">\r\n        <h3 className=\"text-center\">Book Appointment</h3>\r\n        <div className=\"form box-shadow\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Select Doctor</label>\r\n            <select\r\n              onChange={(e) => {\r\n                setDoctor(e.target.value);\r\n              }}\r\n              className=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected>Select Doctor</option>\r\n              {response &&\r\n                response.data.map((doc) => (\r\n                  <option value={doc.id}>{doc.name}</option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Appointment Date</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setDate(e.target.value);\r\n              }}\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <StripeCheckout\r\n            stripeKey=\"pk_test_51IH49aL4tlyYStR0PBlw9PW5vQGgaIhuGy61N9FBDlDK5bEDbDx7fJvrwE8C45QyHH9A5h4IIuuc4tiyGgcIyUjR00N9lXSPrP\"\r\n            token={onToken}\r\n          >\r\n            <button className=\"btn btn-primary btn-lg btn-block\">\r\n              Pay and Book\r\n            </button>\r\n          </StripeCheckout>\r\n        </div>\r\n      </div>\r\n      {loading && <div className=\"text-center\">waiting for response</div>}\r\n    </div>\r\n  );\r\n};\r\nexport default BookAppointmentScreen;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\HomeScreen.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\EmployeeScreen.js",["649","650","651","652","653","654","655","656"],"import { useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport { employeeSigninAction } from \"../actions/employeeActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EmployeeScreen = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const employeeSignin = useSelector((store) => store.employeeSignin);\r\n  const { loading, error, response } = employeeSignin;\r\n\r\n  const dispatch = useDispatch();\r\n  const onSignin = () => {\r\n    dispatch(employeeSigninAction(email, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response && response.status == \"200\") {\r\n      sessionStorage.setItem(\"emp_details\", JSON.stringify(response.data));\r\n      sessionStorage.setItem(\"isLoggedIn\", true);\r\n      if (response.data.role == \"DOCTOR\") {\r\n        props.history.push(\"/doctor\");\r\n      } else if (response.data.role == \"ADMIN\") {\r\n        props.history.push(\"/admin\");\r\n      } else if (response.data.role == \"RECEPTIONIST\") {\r\n        props.history.push(\"/receptionist\");\r\n      } else if (response.data.role == \"LABMANAGER\") {\r\n        props.history.push(\"/lab\");\r\n      }\r\n    } else if (response && response.status == \"error\") {\r\n      alert(response.error);\r\n    } else if (error) {\r\n      alert(error);\r\n    }\r\n  }, [loading, error, response]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"center-align fadeInDown\">\r\n        <h3 className=\"text-center\">Employee Signin</h3>\r\n        <div className=\"form box-shadow\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Email</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"hms@gmail.com\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Password</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"*****\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button\r\n            onClick={onSignin}\r\n            className=\"btn btn-success btn-lg btn-block\"\r\n          >\r\n            Signin\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {loading && <div className=\"text-center\">waiting for response</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeScreen;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientEditProfileScreen.js",["657","658","659","660","661"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  patientGetProfileAction,\r\n  patientEditProfileAction,\r\n} from \"../../actions/patientAction\";\r\nimport Header from \"../../components/Header\";\r\nimport PatientNavBar from \"../../components/PatientNavBar\";\r\n\r\nconst PatientEditProfileScreen = (props) => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"pat_info\"));\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [age, setAge] = useState();\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [bloodGroup, setBloodGroup] = useState(\"\");\r\n\r\n  const patientGetProfile = useSelector((store) => store.patientGetprofile);\r\n  const { loading, error, response } = patientGetProfile;\r\n\r\n  const patientEditProfile = useSelector((store) => store.patientEditprofile);\r\n  const { eloading, eerror, eresponse } = patientEditProfile;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(patientGetProfileAction(user.id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setName(response && response.data.name);\r\n    setGender(response && response.data.gender);\r\n    setEmail(response && response.data.email);\r\n    setPassword(response && response.data.password);\r\n    setCity(response && response.data.city);\r\n    setAge(response && response.data.age);\r\n    setPhone(response && response.data.phone);\r\n    setBloodGroup(response && response.data.bloodGroup);\r\n  }, [response]);\r\n\r\n  const onUpdate = () => {\r\n    dispatch(\r\n      // console.log(\r\n      //   'my data ',\r\n      //   name,\r\n      //   gender,\r\n      //   email,\r\n      //   password,\r\n      //   city,\r\n      //   age,\r\n      //   contact,\r\n      //   bloodGroup\r\n      // ),\r\n      patientEditProfileAction(\r\n        name,\r\n        gender,\r\n        email,\r\n        password,\r\n        city,\r\n        age,\r\n        phone,\r\n        bloodGroup\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eresponse && eresponse.status == \"200\") {\r\n      alert(\"profile updated successfully\");\r\n      props.history.push(\"/patientHome\");\r\n    } else if (eresponse && eresponse.status == \"error\") {\r\n      alert(eresponse.error);\r\n    } else if (error) {\r\n      alert(error);\r\n    }\r\n  }, [eloading, eerror, eresponse]);\r\n  return (\r\n    <div>\r\n      <PatientNavBar name={user.name} />\r\n      <div className=\"form edit-profile\">\r\n        <Header title=\"Edit Profile\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                defaultValue={name}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                defaultValue={email}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Age</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setAge(e.currentTarget.value);\r\n                }}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                defaultValue={age}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Blood Group</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setBloodGroup(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                defaultValue={bloodGroup}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Gender</label>\r\n              <select\r\n                onChange={(e) => {\r\n                  setGender(e.target.value);\r\n                }}\r\n                className=\"form-select\"\r\n                aria-label=\"Default select example\"\r\n                readOnly={true}\r\n              >\r\n                <option defaultValue={gender}>{gender}</option>\r\n                <option value=\"MALE\">Male</option>\r\n                <option value=\"FEMALE\">Female</option>\r\n                <option value=\"OTHER\">Other</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Password</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n                className=\"form-control\"\r\n                placeholder=\"*****\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Phone</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setPhone(e.currentTarget.value);\r\n                }}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                defaultValue={phone}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">City</label>\r\n              <input\r\n                onChange={(e) => {\r\n                  setCity(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                defaultValue={city}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <button\r\n              onClick={onUpdate}\r\n              className=\"btn btn-success btn-lg btn-block\"\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n          {loading && <div>waiting for response</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PatientEditProfileScreen;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpHomeScreen.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientSignUpScreen.js",["662","663"],"import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { patientSignupAction } from '../../actions/patientAction'\r\nimport Header from '../../components/Header'\r\n\r\nconst PatientSignUpScreen = (props) => {\r\n  const [name, setName] = useState('')\r\n  const [gender, setGender] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const patientSignUp = useSelector((store) => store.patientSignup)\r\n  const { loading, error, response } = patientSignUp\r\n\r\n  const dispatch = useDispatch()\r\n  const onSignup = () => {\r\n    dispatch(patientSignupAction(name, gender, email, password))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (response && response.status == '200') {\r\n      props.history.push('/patientSignIn')\r\n    } else if (response && response.status == 'error') {\r\n      alert(response.error)\r\n    } else if (error) {\r\n      alert(error)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Header title='Sign Up' />\r\n      <div className='form'>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Name</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setName(e.target.value)\r\n            }}\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Your name'\r\n          />\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Gender</label>\r\n          <select\r\n            onChange={(e) => {\r\n              setGender(e.target.value)\r\n            }}\r\n            class='form-select'\r\n            aria-label='Default select example'>\r\n            <option selected>Select Gender</option>\r\n            <option value='MALE'>Male</option>\r\n            <option value='FEMALE'>Female</option>\r\n            <option value='OTHER'>Other</option>\r\n          </select>\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Email</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setEmail(e.target.value)\r\n            }}\r\n            type='email'\r\n            className='form-control'\r\n            placeholder='hms@gmail.com'\r\n          />\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Password</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setPassword(e.target.value)\r\n            }}\r\n            className='form-control'\r\n            placeholder='*****'></input>\r\n        </div>\r\n        <div className='mb-3'>\r\n          <button onClick={onSignup} className='btn btn-success'>\r\n            Sign Up\r\n          </button>\r\n          <div className='float-end'>\r\n            Already have account? <Link to='/patientSignIn'>SignIn here</Link>\r\n          </div>\r\n        </div>\r\n        {loading && (\r\n          <div className='container text-center'>waiting for response</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default PatientSignUpScreen\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientHomeScreen.js",["664","665"],"import PatientNavBar from \"../../components/PatientNavBar\";\r\n\r\nconst PatientHomeScreen = (props) => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"pat_info\"));\r\n  return (\r\n    <div>\r\n      <PatientNavBar name={user.name} />\r\n      <div className=\"page-content\">\r\n        <div className=\"padding\">\r\n          <div className=\"row container d-flex justify-content-center\">\r\n            <div className=\"col-xl-6 col-md-12\">\r\n              <div className=\"card user-card-full\">\r\n                <div className=\"row m-l-0 m-r-0\">\r\n                  <div className=\"col-sm-4 bg-c-lite-green user-profile\">\r\n                    <div className=\"card-block text-center text-white\">\r\n                      <div className=\"m-b-25\">\r\n                        {\" \"}\r\n                        <img\r\n                          src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\r\n                          className=\"img-radius\"\r\n                          alt=\"User-Profile-Image\"\r\n                        />{\" \"}\r\n                      </div>\r\n                      <h6 className=\"f-w-600\">{user.name}</h6>\r\n                      <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-8\">\r\n                    <div className=\"card-block\">\r\n                      <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">\r\n                        Id: {user.id}\r\n                      </h6>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                          <p className=\"m-b-10 f-w-600\">Role</p>\r\n                          <h6 className=\"text-muted f-w-400\">Patient</h6>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                          <p className=\"m-b-10 f-w-600\">Email</p>\r\n                          <h6 className=\"text-muted f-w-400\">{user.email}</h6>\r\n                        </div>\r\n                      </div>\r\n                      <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600\"></h6>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                          <p className=\"m-b-10 f-w-600\">Phone</p>\r\n                          <h6 className=\"text-muted f-w-400\">{user.contact}</h6>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                          <p className=\"m-b-10 f-w-600\">City</p>\r\n                          <h6 className=\"text-muted f-w-400\">{user.city}</h6>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PatientHomeScreen;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientViewPrescScreen.js",["666"],"import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { patientGetPrescAction } from '../../actions/patientAction'\r\nimport Header from '../../components/Header'\r\nimport PatientNavBar from '../../components/PatientNavBar'\r\n\r\nconst PatientViewPrescScreen = () => {\r\n  const user = JSON.parse(sessionStorage.getItem('pat_info'))\r\n  const prescriptions = useSelector((store) => store.patientViewPrescription)\r\n  const { response } = prescriptions\r\n\r\n  //const[prescription,setPrescription]=useState('')\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(patientGetPrescAction(user.id))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <PatientNavBar name={user.name} />\r\n      <Header title=\"My prescriptions\" />\r\n\r\n      <table className=\"table table-striped container\">\r\n        <thead>\r\n          <tr>\r\n            <th>Number</th>\r\n            <th>Date</th>\r\n            <th>Doctor</th>\r\n            <th>Details</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {response &&\r\n            response.data &&\r\n            response.data.length > 0 &&\r\n            response.data.map((presc, index) => {\r\n              return (\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{presc.prescDate}</td>\r\n                  <td>Dr. {presc.name}</td>\r\n                  <td>\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>No.</th>\r\n                          <th>Medicine Name</th>\r\n                          <th>Qty</th>\r\n                        </tr>\r\n                      </thead>\r\n                      {presc.medicines.map((med, index2) => {\r\n                        return (\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>{index2 + 1}</td>\r\n                              <td>{med.medicine.name}</td>\r\n                              <td>{med.qty}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        )\r\n                      })}\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nexport default PatientViewPrescScreen\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorMedicineListScreen.js",["667","668","669"],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorScreen.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorMedPrescriptionScreen.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorTestListScreen.js",["670","671","672"],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\LabMgrScreens\\LabHomeScreen.js",["673","674","675"],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorTestPrescriptionScreen.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\PatientScreens\\PatientSignInScreen.js",["676","677","678","679"],"import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { patientSigninAction } from '../../actions/patientAction'\r\nimport Header from '../../components/Header'\r\n\r\nconst PatientSignInScreen = (props) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const patientSignin = useSelector((store) => store.patientSignin)\r\n  const { loading, error, response } = patientSignin\r\n\r\n  const dispatch = useDispatch()\r\n  const onSignin = () => {\r\n    dispatch(patientSigninAction(email, password))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (response && response.status == '200') {\r\n      sessionStorage.setItem('pat_info', JSON.stringify(response.data))\r\n      sessionStorage.setItem('isLoggedIn', true)\r\n      props.history.push('/bookAppointment')\r\n    } else if (response && response.status == 'error') {\r\n      alert(response.error)\r\n    } else if (error) {\r\n      alert(error)\r\n    }\r\n  }, [loading, error, response])\r\n\r\n  return (\r\n    <div>\r\n      <div className='center-align fadeInDown'>\r\n        <h3 className='text-center'>Patient Signin</h3>\r\n        <div className='form box-shadow'>\r\n          <div className='mb-3'>\r\n            <label className='form-label'>Email</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setEmail(e.target.value)\r\n              }}\r\n              type='email'\r\n              className='form-control'\r\n              placeholder='hms@gmail.com'\r\n            />\r\n          </div>\r\n          <div className='mb-3'>\r\n            <label className='form-label'>Password</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setPassword(e.target.value)\r\n              }}\r\n              className='form-control'\r\n              placeholder='*****'></input>\r\n          </div>\r\n        </div>\r\n        <div className='text-center'>\r\n          <button\r\n            onClick={onSignin}\r\n            className='btn btn-success btn-lg btn-block'>\r\n            Signin\r\n          </button>\r\n          <div>\r\n            New User? <Link to='/patientSignUp'>Signup here</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {loading && (\r\n        <div className='Container text-center'>waiting for response</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default PatientSignInScreen\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminHomeScreen.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\recpReducers.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\LabMgrScreens\\LabManagerViewPrescScreen.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\patientReducer.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\DoctorReducer.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\LabManagerReducer.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\paymentReducer.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\reducers\\employeeReducers.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\DoctorScreens\\DoctorAppointmentScreen.js",["680"],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\About.js",["681"],"import Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\n\r\nconst AboutScreen = () => {\r\n  return (\r\n    <div className=\"container center \">\r\n      <Header title=\"About Us\" />\r\n      <section id=\"about\" className=\"about\">\r\n        <div className=\"row\">\r\n          <div className=\"wow fadeInUp  container\" data-wow-delay=\"0.8s\">\r\n            <p className=\"font-weight-bold text-dark about-font\">\r\n              Our group has over two decades of experience in the healthcare\r\n              sector, and is known for providing quality healthcare and valuable\r\n              experience to all domestic and international patients. Our\r\n              healthcare offerings are supported by a team of compassionate and\r\n              dedicated medical professionals who have rich knowledge and\r\n              experience in their respective domains. In addition, the company\r\n              is built on lasting value systems that focuses on excellence,\r\n              expertise, empathy and innovation. This approach has given us an\r\n              in-depth understanding of specific disorders and their treatments,\r\n              enabling us to focus on providing the best treatment options and\r\n              care for our patients.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default AboutScreen;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\Contact.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpAcceptPayment.js",["682","683","684"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  recpGetAllAppointmentsAction,\r\n  recpMakePaymentAction,\r\n} from \"../../actions/recpActions\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst RecpAcceptPayment = (props) => {\r\n  const [patientId, setPatientId] = useState(\"\");\r\n  const [apptId, setApptId] = useState(\"\");\r\n  const [wardCharges, setWardCharges] = useState(\"\");\r\n  const [testCharges, setTestCharges] = useState(\"\");\r\n  let appointments = [];\r\n  const getAppointment = (aId) => {\r\n    appointments = aresponse.data.filter((a) => a.id == aId);\r\n    setPatientId(appointments.pop().apptPatient.id);\r\n  };\r\n  const allAppts = useSelector((store) => store.recpAllAppointments);\r\n  const { aresponse } = allAppts;\r\n  const recpMakePayment = useSelector((store) => store.recpMakePayment);\r\n  let { merror, mresponse } = recpMakePayment;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(recpGetAllAppointmentsAction());\r\n  }, []);\r\n\r\n  const onPayment = () => {\r\n    dispatch(\r\n      recpMakePaymentAction(patientId, apptId, wardCharges, testCharges)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mresponse && mresponse.status == \"202\") {\r\n      alert(\"Payment successfull\");\r\n      document.location.href = \"/receptionist/home\";\r\n    } else if (merror) {\r\n      alert(\"Payment failed....\");\r\n    }\r\n  }, [merror, mresponse]);\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Accept Payment\" />\r\n      <div className=\"form\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Appt Id</label>\r\n          <select\r\n            onChange={(e) => {\r\n              getAppointment(e.target.value);\r\n              setApptId(e.target.value);\r\n            }}\r\n            className=\"form-select\"\r\n          >\r\n            <option defaultValue>Select appointment id</option>\r\n            {aresponse &&\r\n              aresponse.data.length > 0 &&\r\n              aresponse.data.map((a) => {\r\n                return <option value={a.id}>{a.id}</option>;\r\n              })}\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Patient Id</label>\r\n          <select\r\n            disabled\r\n            onChange={(e) => {\r\n              setPatientId(e.target.value);\r\n            }}\r\n            className=\"form-select\"\r\n          >\r\n            <option defaultValue=\"\" value={patientId}>\r\n              {patientId}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Ward Charges</label>\r\n          <input\r\n            defaultValue={0.0}\r\n            onChange={(e) => {\r\n              setWardCharges(e.target.value);\r\n            }}\r\n            className=\"form-control\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Lab Charges</label>\r\n          <input\r\n            defaultValue={0.0}\r\n            onChange={(e) => {\r\n              setTestCharges(e.target.value);\r\n            }}\r\n            className=\"form-control\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button onClick={onPayment} className=\"btn btn-success btn-block \">\r\n            Make Payment\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecpAcceptPayment;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\Doctors.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpAdmitPatient.js",["685"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  recpAdmitPatientAction,\r\n  recpGetAllAppointmentsAction,\r\n} from \"../../actions/recpActions\";\r\nimport Header from \"../../components/Header\";\r\nimport { useEffect, useState } from \"react\";\r\nconst RecpAdmitPatient = (props) => {\r\n  const [admitDate, setAdmitDate] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const allAppts = useSelector((store) => store.recpAllAppointments);\r\n  const {  aresponse } = allAppts;\r\n  \r\n  const dispatch = useDispatch();\r\n  const onAdmit = (id) => {\r\n    console.log(\"id\", id);\r\n    dispatch(recpAdmitPatientAction(id, admitDate, department));\r\n    //  window.location.reload(true)\r\n  };\r\n  useEffect(() => {}, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(recpGetAllAppointmentsAction());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Admit Patient\" />\r\n      {aresponse && aresponse.data.length > 0 ? (\r\n        <div className=\"form\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Select Date</label>\r\n            <input\r\n              required\r\n              onChange={(e) => {\r\n                setAdmitDate(e.target.value);\r\n              }}\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Department Id</label>\r\n            <select\r\n              required\r\n              onChange={(e) => {\r\n                setDepartment(e.target.value);\r\n              }}\r\n              className=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected>Select Department Id</option>\r\n              <option value=\"2\">Cardiology</option>\r\n              <option value=\"3\">Neurology</option>\r\n              <option value=\"4\">Orthopedics</option>\r\n              <option value=\"5\">Opthalmology</option>\r\n            </select>\r\n          </div>\r\n\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Appt Id</th>\r\n                <th>Appt Date</th>\r\n                <th>Patient Name</th>\r\n                <th>Admit</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {aresponse && aresponse.data.map((e) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{e.id}</td>\r\n                    <td>{e.apptDate}</td>\r\n                    <td>{e.apptPatient.name}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => {\r\n                          onAdmit(e.id);\r\n                        }}\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        Admit\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <h3>No Patient to be admitted</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecpAdmitPatient;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpViewAppointments.js",["686","687"],"import Header from \"../../components/Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  recpGetDoctorsAction,\r\n  recpViewAppointmentsAction,\r\n} from \"../../actions/recpActions\";\r\n\r\nconst RecpViewAppointments = (props) => {\r\n  const [doc_id, setDoc_id] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const doctors = useSelector((store) => store.recpDoctors);\r\n\r\n  const appointments = useSelector((store) => store.recpAppointments);\r\n  const { response } = appointments;\r\n\r\n  useEffect(() => {\r\n    dispatch(recpGetDoctorsAction());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(recpViewAppointmentsAction(doc_id));\r\n  }, [doc_id]);\r\n\r\n  return (\r\n    <div className=\"recp-view-appt container\">\r\n      <Header title=\"Today's All Appointments\" />\r\n      <div>\r\n        <label className=\"form-label\">Select Doctor</label>\r\n        <select\r\n          onChange={(e) => {\r\n            setDoc_id(e.target.value);\r\n          }}\r\n          className=\"form-select\"\r\n          aria-label=\"Default select example\"\r\n        >\r\n          <option defaultValue>Select Doctor</option>\r\n          {doctors.dresponse &&\r\n            doctors.dresponse.data.map((d) => {\r\n              return <option value={d.id}>{d.name}</option>;\r\n            })}\r\n        </select>\r\n      </div>\r\n      {doc_id &&\r\n      appointments.response &&\r\n      appointments.response.data.length > 0 ? (\r\n        <div>\r\n          <h3 className=\"title\">Appointments</h3>\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>App Id</th>\r\n                <th>App date</th>\r\n                <th>Patient Name</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {response.data.map((app) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{app.id}</td>\r\n                    <td>{app.apptDate}</td>\r\n                    {app.apptPatient && <td>{app.apptPatient.name}</td>}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <h3 className=\"text-center\">No Appointments for the doctor today</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecpViewAppointments;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\ReceptionistScreens\\RecpDischargePatient.js",["688","689"],"import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  recpDischargePatientAction,\r\n  recpGetAdmitPatientsAction,\r\n} from \"../../actions/recpActions\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst RecpDischargePatient = (props) => {\r\n  const dischargePat = useSelector((store) => store.recpDischargePatient);\r\n  const { derror, dresponse, dloading } = dischargePat;\r\n  let isDischarged = false;\r\n  const admitPatients = useSelector((store) => store.recpGetAdmitPatients);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(recpGetAdmitPatientsAction());\r\n  }, [isDischarged]);\r\n\r\n  useEffect(() => {\r\n    if (dresponse && dresponse.status == \"200\") {\r\n      document.location.href = \"/receptionist/discharge-patient\";\r\n      alert(\"Patient discharged successfully\");\r\n    }else if(derror){\r\n      alert(derror);\r\n    }\r\n  }, [derror, dresponse, dloading]);\r\n\r\n  const onDischarge = (id) => {\r\n    isDischarged = true;\r\n    dispatch(recpDischargePatientAction(id));\r\n    // window.location.reload(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header title=\"Discharge Patient\" />\r\n      <div className=\"container\">\r\n        {admitPatients.response &&\r\n        admitPatients.response.data.list.length > 0 ? (\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Aadmit Date</th>\r\n                <th>Patient Id</th>\r\n                <th>Dept Id</th>\r\n                <th>Discharge</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admitPatients.response.data.list.map((e) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{e.id}</td>\r\n                    <td>{e.admitDate}</td>\r\n                    <td>{e.patient}</td>\r\n                    <td>{e.department}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => {\r\n                          onDischarge(e.id);\r\n                        }}\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        Discharge\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <h3>No Patient is admitted</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RecpDischargePatient;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminViewEmployeesScreen.js",["690","691","692"],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\Profile.js",["693","694"],"const Profile = () => {\n  const admin = JSON.parse(sessionStorage.getItem(\"emp_details\"));\n  return (\n    <div className=\"page-content\">\n      <div className=\"padding\">\n        <div className=\"row container d-flex justify-content-center\">\n          <div className=\"col-xl-6 col-md-12\">\n            <div className=\"card user-card-full\">\n              <div className=\"row m-l-0 m-r-0\">\n                <div className=\"col-sm-4  user-profile\" style={{background : '#90e0ef'} }>\n                  <div className=\"card-block text-center text-white\">\n                    <div className=\"m-b-25\">\n                      {\" \"}\n                      <img\n                        src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                        className=\"img-radius\"\n                        alt=\"User-Profile-Image\"\n                      />{\" \"}\n                    </div>\n                    <h6 className=\"f-w-600\">{admin.name}</h6>\n                    <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\n                  </div>\n                </div>\n                <div className=\"col-sm-8\">\n                  <div className=\"card-block\">\n                    <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">\n                      Id: {admin.id}\n                    </h6>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Role</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.role}</h6>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Email</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.email}</h6>\n                      </div>\n                    </div>\n                    <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600\"></h6>\n                    <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Phone</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.contact}</h6>\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <p className=\"m-b-10 f-w-600\">Date of Birth</p>\n                        <h6 className=\"text-muted f-w-400\">{admin.dob}</h6>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"card text-dark  mb-3 container profile\">\n        <div className=\"card-header\">Hii {admin.name}</div>\n        <div className=\"card-body\">\n          <h3 className=\"card-title\">Your Details:</h3>\n          <h5>Id:{admin.id}</h5>\n          <h5>Role:{admin.role}</h5>\n          <h5>Email:{admin.email}</h5>\n          <h5>Dob:{admin.dob}</h5>\n          <h5>Contact:{admin.contact}</h5>\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default Profile;\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminAddEmployeeScreen.js",["695"],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\Header.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminPaymentHistoryScreen.js",["696"],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\Home.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\screens\\AdminScreens\\AdminUpdateEmployeeScreen.js",["697","698"],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\RecpHomeNavBar.js",["699"],"import { Link } from \"react-router-dom\";\r\nimport { employeeLogoutAction } from \"../actions/employeeActions\";\r\n\r\nconst { useSelector,useDispatch } = require(\"react-redux\");\r\n\r\nconst RecpHomeNavBar = (props) => {\r\n  const receptionist = JSON.parse(sessionStorage.getItem('emp_details'))\r\n  console.log(\"receptionist\",receptionist)\r\n  const dispatch = useDispatch()\r\n  const onLogout = () => {\r\n    dispatch(employeeLogoutAction())\r\n  };\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo01\"\r\n            aria-controls=\"navbarTogglerDemo01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <span className=\"navbar-brand\">Hospital Management System</span>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <Link to=\"/receptionist/home\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Home\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/receptionist/view-appointments\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                   View Appointments\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/receptionist/admit-patient\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Admit Patient\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/receptionist/discharge-patient\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Discharge Patient\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/receptionist/accept-payment\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Accept Payment\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n            <div>Welcome {receptionist.name}</div>\r\n            <div>\r\n              <button\r\n                onClick={onLogout}\r\n                className=\"btn btn-success mx-3 float-end\"\r\n                type=\"button\"\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default RecpHomeNavBar;\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\AdminHomeNavBar.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\HomeNavBar.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\Footer.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\PatientNavBar.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\DoctorHomeNavBar.js",["700"],"import { Link } from 'react-router-dom'\r\nimport '../App.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { employeeLogoutAction } from \"../actions/employeeActions\";\r\n\r\nconst DoctorHomeNavBar = () => {\r\n  const dispatch = useDispatch()\r\n  const doctor = JSON.parse(sessionStorage.getItem('emp_details'))\r\n  const onLogout = () => {\r\n    dispatch(employeeLogoutAction())\r\n  }\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarTogglerDemo01\"\r\n            aria-controls=\"navbarTogglerDemo01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <span className=\"navbar-brand\">Hospital Management System</span>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <Link to=\"/doctor/home\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\">\r\n                    Home\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/doctor/appointments\">\r\n                <li className=\"nav-item\">\r\n                  <span\r\n                    className=\"nav-link active nav-bar-item\"\r\n                    aria-current=\"page\">\r\n                    View Appointment\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n            <div>Welcome {doctor.name} !</div>\r\n            <div>\r\n              <button\r\n                onClick={onLogout}\r\n                className=\"btn btn-success mx-3 float-end\"\r\n                type=\"button\">\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\nexport default DoctorHomeNavBar\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\components\\LabNavBar.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\employeeActions.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\DoctorAction.js",["701"],"import {\r\n  APPOINTMENT_FETCH_REQUEST,\r\n  APPOINTMENT_FETCH_SUCCESS,\r\n  APPOINTMENT_FETCH_FAIL,\r\n  APPOINTMENT_FETCH_RESET,\r\n  MEDICINELIST_FETCH_REQUEST,\r\n  MEDICINELIST_FETCH_SUCCESS,\r\n  MEDICINELIST_FETCH_FAIL,\r\n  TESTPRESC_FETCH_REQUEST,\r\n  TESTPRESC_FETCH_SUCCESS,\r\n  TESTPRESC_FETCH_FAIL,\r\n  TESTLIST_FETCH_REQUEST,\r\n  TESTLIST_FETCH_SUCCESS,\r\n  TESTLIST_FETCH_FAIL,\r\n  MEDPRESC_FETCH_REQUEST,\r\n  MEDPRESC_FETCH_SUCCESS,\r\n  MEDPRESC_FETCH_FAIL,\r\n} from '../constants/DoctorConstants'\r\nimport axios from 'axios'\r\nimport { SPRINGURL } from '../constants/URLConstants'\r\n\r\nexport const getAppointment = (docId) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: APPOINTMENT_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + `/doctor/appointments/${sessionStorage['docId']}`\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: APPOINTMENT_FETCH_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: APPOINTMENT_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getMedicines = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: MEDICINELIST_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/doctor/medicines'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: MEDICINELIST_FETCH_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: MEDICINELIST_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const testPresc = (tests_id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TESTPRESC_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      p_id: sessionStorage['patient_id'],\r\n      tests_id,\r\n    }\r\n    const url =\r\n      SPRINGURL + `/doctor/tests/prescription/${sessionStorage['docId']}`\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: TESTPRESC_FETCH_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: TESTPRESC_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getTests = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TESTLIST_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/doctor/tests'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: TESTLIST_FETCH_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: TESTLIST_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const medPresc = (medicines) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: MEDPRESC_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      pId: sessionStorage['patient_id'],\r\n      medicines,\r\n    }\r\n    const url =\r\n      SPRINGURL + `/doctor/medicine/prescription/${sessionStorage['docId']}`\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: MEDPRESC_FETCH_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: MEDPRESC_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n","E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\labManagerActios.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\labManagerConstants.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\RecpConstants.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\patientAction.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\employeeConstants.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\PaymentConstants.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\PaymentAction.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\patientConstants.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\DoctorConstants.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\actions\\recpActions.js",[],"E:\\Project\\final-project-online-hospital-management-system\\Frontend\\hmsfront\\src\\constants\\URLConstants.js",[],{"ruleId":"702","replacedBy":"703"},{"ruleId":"704","replacedBy":"705"},{"ruleId":"706","severity":1,"message":"707","line":4,"column":8,"nodeType":"708","messageId":"709","endLine":4,"endColumn":23},{"ruleId":"706","severity":1,"message":"710","line":5,"column":8,"nodeType":"708","messageId":"709","endLine":5,"endColumn":22},{"ruleId":"706","severity":1,"message":"711","line":6,"column":8,"nodeType":"708","messageId":"709","endLine":6,"endColumn":23},{"ruleId":"706","severity":1,"message":"712","line":7,"column":8,"nodeType":"708","messageId":"709","endLine":7,"endColumn":22},{"ruleId":"706","severity":1,"message":"713","line":8,"column":8,"nodeType":"708","messageId":"709","endLine":8,"endColumn":21},{"ruleId":"706","severity":1,"message":"714","line":9,"column":8,"nodeType":"708","messageId":"709","endLine":9,"endColumn":21},{"ruleId":"706","severity":1,"message":"715","line":10,"column":8,"nodeType":"708","messageId":"709","endLine":10,"endColumn":19},{"ruleId":"706","severity":1,"message":"716","line":11,"column":8,"nodeType":"708","messageId":"709","endLine":11,"endColumn":24},{"ruleId":"706","severity":1,"message":"717","line":12,"column":8,"nodeType":"708","messageId":"709","endLine":12,"endColumn":26},{"ruleId":"706","severity":1,"message":"718","line":13,"column":8,"nodeType":"708","messageId":"709","endLine":13,"endColumn":27},{"ruleId":"706","severity":1,"message":"719","line":14,"column":8,"nodeType":"708","messageId":"709","endLine":14,"endColumn":21},{"ruleId":"706","severity":1,"message":"720","line":15,"column":8,"nodeType":"708","messageId":"709","endLine":15,"endColumn":20},{"ruleId":"706","severity":1,"message":"721","line":16,"column":8,"nodeType":"708","messageId":"709","endLine":16,"endColumn":31},{"ruleId":"706","severity":1,"message":"722","line":17,"column":8,"nodeType":"708","messageId":"709","endLine":17,"endColumn":32},{"ruleId":"706","severity":1,"message":"723","line":18,"column":8,"nodeType":"708","messageId":"709","endLine":18,"endColumn":28},{"ruleId":"706","severity":1,"message":"724","line":19,"column":8,"nodeType":"708","messageId":"709","endLine":19,"endColumn":36},{"ruleId":"706","severity":1,"message":"725","line":20,"column":8,"nodeType":"708","messageId":"709","endLine":20,"endColumn":35},{"ruleId":"706","severity":1,"message":"726","line":2,"column":8,"nodeType":"708","messageId":"709","endLine":2,"endColumn":14},{"ruleId":"727","severity":1,"message":"728","line":19,"column":37,"nodeType":"729","messageId":"730","endLine":19,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":22,"column":30,"nodeType":"729","messageId":"730","endLine":22,"endColumn":32},{"ruleId":"727","severity":1,"message":"728","line":24,"column":37,"nodeType":"729","messageId":"730","endLine":24,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":26,"column":37,"nodeType":"729","messageId":"730","endLine":26,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":28,"column":37,"nodeType":"729","messageId":"730","endLine":28,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":31,"column":44,"nodeType":"729","messageId":"730","endLine":31,"endColumn":46},{"ruleId":"731","severity":1,"message":"732","line":36,"column":6,"nodeType":"733","endLine":36,"endColumn":32,"suggestions":"734"},{"ruleId":"706","severity":1,"message":"726","line":7,"column":8,"nodeType":"708","messageId":"709","endLine":7,"endColumn":14},{"ruleId":"706","severity":1,"message":"735","line":20,"column":11,"nodeType":"708","messageId":"709","endLine":20,"endColumn":16},{"ruleId":"731","severity":1,"message":"736","line":29,"column":6,"nodeType":"733","endLine":29,"endColumn":8,"suggestions":"737"},{"ruleId":"727","severity":1,"message":"728","line":42,"column":39,"nodeType":"729","messageId":"730","endLine":42,"endColumn":41},{"ruleId":"727","severity":1,"message":"728","line":44,"column":46,"nodeType":"729","messageId":"730","endLine":44,"endColumn":48},{"ruleId":"731","severity":1,"message":"738","line":49,"column":6,"nodeType":"733","endLine":49,"endColumn":35,"suggestions":"739"},{"ruleId":"727","severity":1,"message":"728","line":52,"column":39,"nodeType":"729","messageId":"730","endLine":52,"endColumn":41},{"ruleId":"727","severity":1,"message":"728","line":55,"column":46,"nodeType":"729","messageId":"730","endLine":55,"endColumn":48},{"ruleId":"731","severity":1,"message":"732","line":60,"column":6,"nodeType":"733","endLine":60,"endColumn":35,"suggestions":"740"},{"ruleId":"706","severity":1,"message":"726","line":1,"column":8,"nodeType":"708","messageId":"709","endLine":1,"endColumn":14},{"ruleId":"741","severity":1,"message":"742","line":19,"column":25,"nodeType":"743","endLine":23,"endColumn":27},{"ruleId":"744","severity":1,"message":"745","line":44,"column":23,"nodeType":"743","endLine":44,"endColumn":79},{"ruleId":"706","severity":1,"message":"746","line":1,"column":16,"nodeType":"708","messageId":"709","endLine":1,"endColumn":25},{"ruleId":"706","severity":1,"message":"735","line":14,"column":20,"nodeType":"708","messageId":"709","endLine":14,"endColumn":25},{"ruleId":"706","severity":1,"message":"747","line":14,"column":27,"nodeType":"708","messageId":"709","endLine":14,"endColumn":35},{"ruleId":"706","severity":1,"message":"726","line":5,"column":8,"nodeType":"708","messageId":"709","endLine":5,"endColumn":14},{"ruleId":"727","severity":1,"message":"728","line":20,"column":37,"nodeType":"729","messageId":"730","endLine":20,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":24,"column":44,"nodeType":"729","messageId":"730","endLine":24,"endColumn":46},{"ruleId":"731","severity":1,"message":"732","line":29,"column":6,"nodeType":"733","endLine":29,"endColumn":32,"suggestions":"748"},{"ruleId":"706","severity":1,"message":"749","line":3,"column":10,"nodeType":"708","messageId":"709","endLine":3,"endColumn":14},{"ruleId":"731","severity":1,"message":"750","line":32,"column":6,"nodeType":"733","endLine":32,"endColumn":8,"suggestions":"751"},{"ruleId":"727","severity":1,"message":"728","line":72,"column":39,"nodeType":"729","messageId":"730","endLine":72,"endColumn":41},{"ruleId":"727","severity":1,"message":"728","line":75,"column":46,"nodeType":"729","messageId":"730","endLine":75,"endColumn":48},{"ruleId":"731","severity":1,"message":"752","line":80,"column":6,"nodeType":"733","endLine":80,"endColumn":35,"suggestions":"753"},{"ruleId":"731","severity":1,"message":"754","line":17,"column":6,"nodeType":"733","endLine":17,"endColumn":8,"suggestions":"755"},{"ruleId":"731","severity":1,"message":"736","line":19,"column":6,"nodeType":"733","endLine":19,"endColumn":8,"suggestions":"756"},{"ruleId":"727","severity":1,"message":"757","line":29,"column":39,"nodeType":"729","messageId":"730","endLine":29,"endColumn":41},{"ruleId":"727","severity":1,"message":"757","line":33,"column":39,"nodeType":"729","messageId":"730","endLine":33,"endColumn":41},{"ruleId":"731","severity":1,"message":"750","line":16,"column":6,"nodeType":"733","endLine":16,"endColumn":8,"suggestions":"758"},{"ruleId":"741","severity":1,"message":"742","line":18,"column":25,"nodeType":"743","endLine":22,"endColumn":27},{"ruleId":"744","severity":1,"message":"745","line":43,"column":23,"nodeType":"743","endLine":43,"endColumn":79},{"ruleId":"731","severity":1,"message":"736","line":16,"column":6,"nodeType":"733","endLine":16,"endColumn":8,"suggestions":"759"},{"ruleId":"727","severity":1,"message":"757","line":25,"column":39,"nodeType":"729","messageId":"730","endLine":25,"endColumn":41},{"ruleId":"727","severity":1,"message":"757","line":34,"column":51,"nodeType":"729","messageId":"730","endLine":34,"endColumn":53},{"ruleId":"706","severity":1,"message":"760","line":1,"column":8,"nodeType":"708","messageId":"709","endLine":1,"endColumn":14},{"ruleId":"706","severity":1,"message":"761","line":15,"column":7,"nodeType":"708","messageId":"709","endLine":15,"endColumn":14},{"ruleId":"731","severity":1,"message":"736","line":27,"column":6,"nodeType":"733","endLine":27,"endColumn":8,"suggestions":"762"},{"ruleId":"727","severity":1,"message":"728","line":29,"column":39,"nodeType":"729","messageId":"730","endLine":29,"endColumn":41},{"ruleId":"731","severity":1,"message":"736","line":14,"column":6,"nodeType":"733","endLine":14,"endColumn":8,"suggestions":"763"},{"ruleId":"741","severity":1,"message":"742","line":14,"column":23,"nodeType":"743","endLine":18,"endColumn":25},{"ruleId":"744","severity":1,"message":"745","line":39,"column":21,"nodeType":"743","endLine":39,"endColumn":77},{"ruleId":"727","severity":1,"message":"728","line":23,"column":37,"nodeType":"729","messageId":"730","endLine":23,"endColumn":39},{"ruleId":"731","severity":1,"message":"732","line":31,"column":6,"nodeType":"733","endLine":31,"endColumn":32,"suggestions":"764"},{"ruleId":"727","severity":1,"message":"728","line":31,"column":37,"nodeType":"729","messageId":"730","endLine":31,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":16,"column":54,"nodeType":"729","messageId":"730","endLine":16,"endColumn":56},{"ruleId":"731","severity":1,"message":"736","line":27,"column":6,"nodeType":"733","endLine":27,"endColumn":8,"suggestions":"765"},{"ruleId":"727","severity":1,"message":"728","line":36,"column":39,"nodeType":"729","messageId":"730","endLine":36,"endColumn":41},{"ruleId":"731","severity":1,"message":"736","line":19,"column":6,"nodeType":"733","endLine":19,"endColumn":8,"suggestions":"766"},{"ruleId":"731","severity":1,"message":"736","line":23,"column":6,"nodeType":"733","endLine":23,"endColumn":14,"suggestions":"767"},{"ruleId":"731","severity":1,"message":"736","line":17,"column":6,"nodeType":"733","endLine":17,"endColumn":20,"suggestions":"768"},{"ruleId":"727","severity":1,"message":"728","line":20,"column":39,"nodeType":"729","messageId":"730","endLine":20,"endColumn":41},{"ruleId":"731","severity":1,"message":"736","line":24,"column":6,"nodeType":"733","endLine":24,"endColumn":8,"suggestions":"769"},{"ruleId":"706","severity":1,"message":"770","line":4,"column":9,"nodeType":"708","messageId":"709","endLine":4,"endColumn":20},{"ruleId":"706","severity":1,"message":"771","line":3,"column":23,"nodeType":"708","messageId":"709","endLine":3,"endColumn":34},{"ruleId":"706","severity":1,"message":"772","line":5,"column":3,"nodeType":"708","messageId":"709","endLine":5,"endColumn":26},{"ruleId":"706","severity":1,"message":"707","line":4,"column":8,"nodeType":"708","messageId":"709","endLine":4,"endColumn":23},{"ruleId":"706","severity":1,"message":"710","line":5,"column":8,"nodeType":"708","messageId":"709","endLine":5,"endColumn":22},{"ruleId":"706","severity":1,"message":"711","line":6,"column":8,"nodeType":"708","messageId":"709","endLine":6,"endColumn":23},{"ruleId":"706","severity":1,"message":"712","line":7,"column":8,"nodeType":"708","messageId":"709","endLine":7,"endColumn":22},{"ruleId":"706","severity":1,"message":"713","line":8,"column":8,"nodeType":"708","messageId":"709","endLine":8,"endColumn":21},{"ruleId":"706","severity":1,"message":"714","line":9,"column":8,"nodeType":"708","messageId":"709","endLine":9,"endColumn":21},{"ruleId":"706","severity":1,"message":"715","line":10,"column":8,"nodeType":"708","messageId":"709","endLine":10,"endColumn":19},{"ruleId":"706","severity":1,"message":"716","line":11,"column":8,"nodeType":"708","messageId":"709","endLine":11,"endColumn":24},{"ruleId":"706","severity":1,"message":"717","line":12,"column":8,"nodeType":"708","messageId":"709","endLine":12,"endColumn":26},{"ruleId":"706","severity":1,"message":"718","line":13,"column":8,"nodeType":"708","messageId":"709","endLine":13,"endColumn":27},{"ruleId":"706","severity":1,"message":"719","line":14,"column":8,"nodeType":"708","messageId":"709","endLine":14,"endColumn":21},{"ruleId":"706","severity":1,"message":"720","line":15,"column":8,"nodeType":"708","messageId":"709","endLine":15,"endColumn":20},{"ruleId":"706","severity":1,"message":"721","line":16,"column":8,"nodeType":"708","messageId":"709","endLine":16,"endColumn":31},{"ruleId":"706","severity":1,"message":"722","line":17,"column":8,"nodeType":"708","messageId":"709","endLine":17,"endColumn":32},{"ruleId":"706","severity":1,"message":"723","line":18,"column":8,"nodeType":"708","messageId":"709","endLine":18,"endColumn":28},{"ruleId":"706","severity":1,"message":"724","line":19,"column":8,"nodeType":"708","messageId":"709","endLine":19,"endColumn":36},{"ruleId":"706","severity":1,"message":"725","line":20,"column":8,"nodeType":"708","messageId":"709","endLine":20,"endColumn":35},{"ruleId":"706","severity":1,"message":"726","line":7,"column":8,"nodeType":"708","messageId":"709","endLine":7,"endColumn":14},{"ruleId":"706","severity":1,"message":"735","line":20,"column":11,"nodeType":"708","messageId":"709","endLine":20,"endColumn":16},{"ruleId":"731","severity":1,"message":"736","line":29,"column":6,"nodeType":"733","endLine":29,"endColumn":8,"suggestions":"773"},{"ruleId":"727","severity":1,"message":"728","line":42,"column":39,"nodeType":"729","messageId":"730","endLine":42,"endColumn":41},{"ruleId":"727","severity":1,"message":"728","line":44,"column":46,"nodeType":"729","messageId":"730","endLine":44,"endColumn":48},{"ruleId":"731","severity":1,"message":"738","line":49,"column":6,"nodeType":"733","endLine":49,"endColumn":35,"suggestions":"774"},{"ruleId":"727","severity":1,"message":"728","line":52,"column":39,"nodeType":"729","messageId":"730","endLine":52,"endColumn":41},{"ruleId":"727","severity":1,"message":"728","line":55,"column":46,"nodeType":"729","messageId":"730","endLine":55,"endColumn":48},{"ruleId":"731","severity":1,"message":"732","line":60,"column":6,"nodeType":"733","endLine":60,"endColumn":35,"suggestions":"775"},{"ruleId":"706","severity":1,"message":"726","line":2,"column":8,"nodeType":"708","messageId":"709","endLine":2,"endColumn":14},{"ruleId":"727","severity":1,"message":"728","line":19,"column":37,"nodeType":"729","messageId":"730","endLine":19,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":22,"column":30,"nodeType":"729","messageId":"730","endLine":22,"endColumn":32},{"ruleId":"727","severity":1,"message":"728","line":24,"column":37,"nodeType":"729","messageId":"730","endLine":24,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":26,"column":37,"nodeType":"729","messageId":"730","endLine":26,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":28,"column":37,"nodeType":"729","messageId":"730","endLine":28,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":31,"column":44,"nodeType":"729","messageId":"730","endLine":31,"endColumn":46},{"ruleId":"731","severity":1,"message":"732","line":36,"column":6,"nodeType":"733","endLine":36,"endColumn":32,"suggestions":"776"},{"ruleId":"706","severity":1,"message":"749","line":3,"column":10,"nodeType":"708","messageId":"709","endLine":3,"endColumn":14},{"ruleId":"731","severity":1,"message":"750","line":32,"column":6,"nodeType":"733","endLine":32,"endColumn":8,"suggestions":"777"},{"ruleId":"727","severity":1,"message":"728","line":72,"column":39,"nodeType":"729","messageId":"730","endLine":72,"endColumn":41},{"ruleId":"727","severity":1,"message":"728","line":75,"column":46,"nodeType":"729","messageId":"730","endLine":75,"endColumn":48},{"ruleId":"731","severity":1,"message":"752","line":80,"column":6,"nodeType":"733","endLine":80,"endColumn":35,"suggestions":"778"},{"ruleId":"727","severity":1,"message":"728","line":22,"column":37,"nodeType":"729","messageId":"730","endLine":22,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":24,"column":44,"nodeType":"729","messageId":"730","endLine":24,"endColumn":46},{"ruleId":"741","severity":1,"message":"742","line":18,"column":25,"nodeType":"743","endLine":22,"endColumn":27},{"ruleId":"744","severity":1,"message":"745","line":43,"column":23,"nodeType":"743","endLine":43,"endColumn":79},{"ruleId":"731","severity":1,"message":"750","line":16,"column":6,"nodeType":"733","endLine":16,"endColumn":8,"suggestions":"779"},{"ruleId":"731","severity":1,"message":"736","line":16,"column":6,"nodeType":"733","endLine":16,"endColumn":8,"suggestions":"780"},{"ruleId":"727","severity":1,"message":"757","line":25,"column":39,"nodeType":"729","messageId":"730","endLine":25,"endColumn":41},{"ruleId":"727","severity":1,"message":"757","line":34,"column":51,"nodeType":"729","messageId":"730","endLine":34,"endColumn":53},{"ruleId":"731","severity":1,"message":"736","line":19,"column":6,"nodeType":"733","endLine":19,"endColumn":8,"suggestions":"781"},{"ruleId":"727","severity":1,"message":"757","line":29,"column":39,"nodeType":"729","messageId":"730","endLine":29,"endColumn":41},{"ruleId":"727","severity":1,"message":"757","line":33,"column":39,"nodeType":"729","messageId":"730","endLine":33,"endColumn":41},{"ruleId":"706","severity":1,"message":"726","line":1,"column":8,"nodeType":"708","messageId":"709","endLine":1,"endColumn":14},{"ruleId":"741","severity":1,"message":"742","line":19,"column":25,"nodeType":"743","endLine":23,"endColumn":27},{"ruleId":"744","severity":1,"message":"745","line":44,"column":23,"nodeType":"743","endLine":44,"endColumn":79},{"ruleId":"706","severity":1,"message":"726","line":5,"column":8,"nodeType":"708","messageId":"709","endLine":5,"endColumn":14},{"ruleId":"727","severity":1,"message":"728","line":20,"column":37,"nodeType":"729","messageId":"730","endLine":20,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":24,"column":44,"nodeType":"729","messageId":"730","endLine":24,"endColumn":46},{"ruleId":"731","severity":1,"message":"732","line":29,"column":6,"nodeType":"733","endLine":29,"endColumn":32,"suggestions":"782"},{"ruleId":"731","severity":1,"message":"754","line":17,"column":6,"nodeType":"733","endLine":17,"endColumn":8,"suggestions":"783"},{"ruleId":"706","severity":1,"message":"760","line":1,"column":8,"nodeType":"708","messageId":"709","endLine":1,"endColumn":14},{"ruleId":"727","severity":1,"message":"728","line":16,"column":54,"nodeType":"729","messageId":"730","endLine":16,"endColumn":56},{"ruleId":"731","severity":1,"message":"736","line":27,"column":6,"nodeType":"733","endLine":27,"endColumn":8,"suggestions":"784"},{"ruleId":"727","severity":1,"message":"728","line":36,"column":39,"nodeType":"729","messageId":"730","endLine":36,"endColumn":41},{"ruleId":"731","severity":1,"message":"736","line":24,"column":6,"nodeType":"733","endLine":24,"endColumn":8,"suggestions":"785"},{"ruleId":"731","severity":1,"message":"736","line":19,"column":6,"nodeType":"733","endLine":19,"endColumn":8,"suggestions":"786"},{"ruleId":"731","severity":1,"message":"736","line":23,"column":6,"nodeType":"733","endLine":23,"endColumn":14,"suggestions":"787"},{"ruleId":"731","severity":1,"message":"736","line":17,"column":6,"nodeType":"733","endLine":17,"endColumn":20,"suggestions":"788"},{"ruleId":"727","severity":1,"message":"728","line":20,"column":39,"nodeType":"729","messageId":"730","endLine":20,"endColumn":41},{"ruleId":"706","severity":1,"message":"761","line":15,"column":7,"nodeType":"708","messageId":"709","endLine":15,"endColumn":14},{"ruleId":"731","severity":1,"message":"736","line":27,"column":6,"nodeType":"733","endLine":27,"endColumn":8,"suggestions":"789"},{"ruleId":"727","severity":1,"message":"728","line":29,"column":39,"nodeType":"729","messageId":"730","endLine":29,"endColumn":41},{"ruleId":"741","severity":1,"message":"742","line":14,"column":23,"nodeType":"743","endLine":18,"endColumn":25},{"ruleId":"744","severity":1,"message":"745","line":39,"column":21,"nodeType":"743","endLine":39,"endColumn":77},{"ruleId":"727","severity":1,"message":"728","line":31,"column":37,"nodeType":"729","messageId":"730","endLine":31,"endColumn":39},{"ruleId":"731","severity":1,"message":"736","line":14,"column":6,"nodeType":"733","endLine":14,"endColumn":8,"suggestions":"790"},{"ruleId":"727","severity":1,"message":"728","line":23,"column":37,"nodeType":"729","messageId":"730","endLine":23,"endColumn":39},{"ruleId":"731","severity":1,"message":"732","line":31,"column":6,"nodeType":"733","endLine":31,"endColumn":32,"suggestions":"791"},{"ruleId":"706","severity":1,"message":"770","line":4,"column":9,"nodeType":"708","messageId":"709","endLine":4,"endColumn":20},{"ruleId":"706","severity":1,"message":"771","line":3,"column":23,"nodeType":"708","messageId":"709","endLine":3,"endColumn":34},{"ruleId":"706","severity":1,"message":"772","line":5,"column":3,"nodeType":"708","messageId":"709","endLine":5,"endColumn":26},"no-native-reassign",["792"],"no-negated-in-lhs",["793"],"no-unused-vars","'BookAppointment' is defined but never used.","Identifier","unusedVar","'EmployeeScreen' is defined but never used.","'AdminHomeScreen' is defined but never used.","'RecpHomeScreen' is defined but never used.","'PatientSignIn' is defined but never used.","'PatientSignUp' is defined but never used.","'PatientHome' is defined but never used.","'PatientViewPresc' is defined but never used.","'PatientEditProfile' is defined but never used.","'LabManagerViewPresc' is defined but never used.","'LabHomeScreen' is defined but never used.","'DoctorScreen' is defined but never used.","'DoctorAppointmentScreen' is defined but never used.","'DoctorMedicineListScreen' is defined but never used.","'DoctorTestListScreen' is defined but never used.","'DoctorTestPrescriptionScreen' is defined but never used.","'DoctorMedPrescriptionScreen' is defined but never used.","'Header' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["794"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["795"],"React Hook useEffect has missing dependencies: 'date', 'dispatch', 'doctor', and 'user.id'. Either include them or remove the dependency array.",["796"],["797"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'useEffect' is defined but never used.","'response' is assigned a value but never used.",["798"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user.id'. Either include them or remove the dependency array.",["799"],"React Hook useEffect has missing dependencies: 'error' and 'props.history'. Either include them or remove the dependency array.",["800"],"React Hook useEffect has missing dependencies: 'dispatch' and 'docId'. Either include them or remove the dependency array.",["801"],["802"],"Expected '!==' and instead saw '!='.",["803"],["804"],"'Footer' is defined but never used.","'message' is defined but never used.",["805"],["806"],["807"],["808"],["809"],["810"],["811"],["812"],"'useSelector' is assigned a value but never used.","'useSelector' is defined but never used.","'APPOINTMENT_FETCH_RESET' is defined but never used.",["813"],["814"],["815"],["816"],["817"],["818"],["819"],["820"],["821"],["822"],["823"],["824"],["825"],["826"],["827"],["828"],["829"],["830"],["831"],"no-global-assign","no-unsafe-negation",{"desc":"832","fix":"833"},{"desc":"834","fix":"835"},{"desc":"836","fix":"837"},{"desc":"838","fix":"839"},{"desc":"832","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"845","fix":"846"},{"desc":"834","fix":"847"},{"desc":"841","fix":"848"},{"desc":"834","fix":"849"},{"desc":"834","fix":"850"},{"desc":"834","fix":"851"},{"desc":"852","fix":"853"},{"desc":"834","fix":"854"},{"desc":"834","fix":"855"},{"desc":"856","fix":"857"},{"desc":"858","fix":"859"},{"desc":"834","fix":"860"},{"desc":"834","fix":"861"},{"desc":"836","fix":"862"},{"desc":"838","fix":"863"},{"desc":"832","fix":"864"},{"desc":"841","fix":"865"},{"desc":"843","fix":"866"},{"desc":"841","fix":"867"},{"desc":"834","fix":"868"},{"desc":"834","fix":"869"},{"desc":"832","fix":"870"},{"desc":"845","fix":"871"},{"desc":"834","fix":"872"},{"desc":"834","fix":"873"},{"desc":"834","fix":"874"},{"desc":"856","fix":"875"},{"desc":"858","fix":"876"},{"desc":"834","fix":"877"},{"desc":"834","fix":"878"},{"desc":"852","fix":"879"},"Update the dependencies array to be: [loading, error, response, props.history]",{"range":"880","text":"881"},"Update the dependencies array to be: [dispatch]",{"range":"882","text":"883"},"Update the dependencies array to be: [date, dispatch, doctor, perror, ploading, presponse, user.id]",{"range":"884","text":"885"},"Update the dependencies array to be: [berror, bloading, bresponse, props.history]",{"range":"886","text":"887"},{"range":"888","text":"881"},"Update the dependencies array to be: [dispatch, user.id]",{"range":"889","text":"890"},"Update the dependencies array to be: [eloading, eerror, eresponse, error, props.history]",{"range":"891","text":"892"},"Update the dependencies array to be: [dispatch, docId]",{"range":"893","text":"894"},{"range":"895","text":"883"},{"range":"896","text":"890"},{"range":"897","text":"883"},{"range":"898","text":"883"},{"range":"899","text":"883"},"Update the dependencies array to be: [loading, response, error, props.history]",{"range":"900","text":"901"},{"range":"902","text":"883"},{"range":"903","text":"883"},"Update the dependencies array to be: [dispatch, doc_id]",{"range":"904","text":"905"},"Update the dependencies array to be: [dispatch, isDischarged]",{"range":"906","text":"907"},{"range":"908","text":"883"},{"range":"909","text":"883"},{"range":"910","text":"885"},{"range":"911","text":"887"},{"range":"912","text":"881"},{"range":"913","text":"890"},{"range":"914","text":"892"},{"range":"915","text":"890"},{"range":"916","text":"883"},{"range":"917","text":"883"},{"range":"918","text":"881"},{"range":"919","text":"894"},{"range":"920","text":"883"},{"range":"921","text":"883"},{"range":"922","text":"883"},{"range":"923","text":"905"},{"range":"924","text":"907"},{"range":"925","text":"883"},{"range":"926","text":"883"},{"range":"927","text":"901"},[1293,1319],"[loading, error, response, props.history]",[1168,1170],"[dispatch]",[1853,1882],"[date, dispatch, doctor, perror, ploading, presponse, user.id]",[2192,2221],"[berror, bloading, bresponse, props.history]",[1009,1035],[1191,1193],"[dispatch, user.id]",[2348,2377],"[eloading, eerror, eresponse, error, props.history]",[674,676],"[dispatch, docId]",[452,454],[635,637],[534,536],[861,863],[494,496],[1068,1094],"[loading, response, error, props.history]",[1002,1004],[601,603],[682,690],"[dispatch, doc_id]",[623,637],"[dispatch, isDischarged]",[793,795],[1196,1198],[1901,1930],[2251,2280],[1328,1354],[1222,1224],[2427,2456],[650,652],[534,536],[452,454],[1020,1046],[674,676],[1028,1030],[816,818],[619,621],[704,712],[639,653],[861,863],[494,496],[1068,1094]]