{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { adminTotalChargesReducer, employeeDeleteReducer, employeeSigninReducer, employeeSignupReducer, employeeUpdateReducer, viewEmployeesReducer } from './reducers/employeeReducers';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { recpAdmitPatientReducer, recpDischargePatientReducer, recpGetAdmitPatientsReducer, recpGetAllAppointmentsReducer, recpGetDoctorsReducer, recpMakePaymentReducer, recpViewAppointmentsReducer } from './reducers/recpReducers';\nimport { patientSigninReducer, patientSignupReducer, patientGetDocReducer, patientBookAppoReducer, patientGetProfileReducer, patientEditProfileReducer, patientviewPrescReducer } from './reducers/patientReducer';\nimport { createMedPrescReducer, createTestPrescReducer, fetchAppointmentReducer, fetchMedicinesReducer, fetchTestsReducer } from \"./reducers/DoctorReducer\";\nimport { labManagerViewPrescReducer } from './reducers/LabManagerReducer';\nimport { paymentReducer } from './reducers/paymentReducer'; // combined reducers\n\nconst reducers = combineReducers({\n  employeeSignin: employeeSigninReducer,\n  employeeSignup: employeeSignupReducer,\n  //admin\n  viewEmployees: viewEmployeesReducer,\n  deleteEmployee: employeeDeleteReducer,\n  updateEmployee: employeeUpdateReducer,\n  totalCharges: adminTotalChargesReducer,\n  //doctor\n  appointment: fetchAppointmentReducer,\n  medicine: fetchMedicinesReducer,\n  test: fetchTestsReducer,\n  prescription: createTestPrescReducer,\n  medicinePresc: createMedPrescReducer,\n  //receptionist\n  recpDoctors: recpGetDoctorsReducer,\n  recpAppointments: recpViewAppointmentsReducer,\n  recpAllAppointments: recpGetAllAppointmentsReducer,\n  recpAdmitPatient: recpAdmitPatientReducer,\n  recpGetAdmitPatients: recpGetAdmitPatientsReducer,\n  recpDischargePatient: recpDischargePatientReducer,\n  recpMakePayment: recpMakePaymentReducer,\n  //lab manager\n  labManagerviewPresc: labManagerViewPrescReducer,\n  //patient\n  patientSignin: patientSigninReducer,\n  patientSignup: patientSignupReducer,\n  patientGetDoc: patientGetDocReducer,\n  patientBookAppointment: patientBookAppoReducer,\n  patientGetprofile: patientGetProfileReducer,\n  patientEditprofile: patientEditProfileReducer,\n  patientViewPrescription: patientviewPrescReducer,\n  paymentDetails: paymentReducer\n});\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(logger, thunk)));\nexport default store;","map":{"version":3,"sources":["E:/cdac/PROJECT/hospitalmanagementsystem-master/hospitalmanagementsystem-master/Frontend/hmsfront/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","adminTotalChargesReducer","employeeDeleteReducer","employeeSigninReducer","employeeSignupReducer","employeeUpdateReducer","viewEmployeesReducer","logger","thunk","composeWithDevTools","recpAdmitPatientReducer","recpDischargePatientReducer","recpGetAdmitPatientsReducer","recpGetAllAppointmentsReducer","recpGetDoctorsReducer","recpMakePaymentReducer","recpViewAppointmentsReducer","patientSigninReducer","patientSignupReducer","patientGetDocReducer","patientBookAppoReducer","patientGetProfileReducer","patientEditProfileReducer","patientviewPrescReducer","createMedPrescReducer","createTestPrescReducer","fetchAppointmentReducer","fetchMedicinesReducer","fetchTestsReducer","labManagerViewPrescReducer","paymentReducer","reducers","employeeSignin","employeeSignup","viewEmployees","deleteEmployee","updateEmployee","totalCharges","appointment","medicine","test","prescription","medicinePresc","recpDoctors","recpAppointments","recpAllAppointments","recpAdmitPatient","recpGetAdmitPatients","recpDischargePatient","recpMakePayment","labManagerviewPresc","patientSignin","patientSignup","patientGetDoc","patientBookAppointment","patientGetprofile","patientEditprofile","patientViewPrescription","paymentDetails","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAAQC,wBAAR,EAAkCC,qBAAlC,EAAwDC,qBAAxD,EAA8EC,qBAA9E,EAAoGC,qBAApG,EAA0HC,oBAA1H,QAAsJ,6BAAtJ;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,uBAAT,EAAkCC,2BAAlC,EAA+DC,2BAA/D,EAA4FC,6BAA5F,EAA2HC,qBAA3H,EAAkJC,sBAAlJ,EAA0KC,2BAA1K,QAA6M,yBAA7M;AACA,SAAQC,oBAAR,EAA6BC,oBAA7B,EAAkDC,oBAAlD,EAAuEC,sBAAvE,EAA8FC,wBAA9F,EAAuHC,yBAAvH,EAAiJC,uBAAjJ,QAAgL,2BAAhL;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,EAAwDC,uBAAxD,EAAiFC,qBAAjF,EAAwGC,iBAAxG,QAAiI,0BAAjI;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,SAASC,cAAT,QAA+B,2BAA/B,C,CAEA;;AACA,MAAMC,QAAQ,GAAGhC,eAAe,CAAC;AAC/BiC,EAAAA,cAAc,EAAE7B,qBADe;AAG/B8B,EAAAA,cAAc,EAAE7B,qBAHe;AAI/B;AACA8B,EAAAA,aAAa,EAAC5B,oBALiB;AAM/B6B,EAAAA,cAAc,EAACjC,qBANgB;AAO/BkC,EAAAA,cAAc,EAAC/B,qBAPgB;AAQ/BgC,EAAAA,YAAY,EAACpC,wBARkB;AAY/B;AACAqC,EAAAA,WAAW,EAACZ,uBAbmB;AAc/Ba,EAAAA,QAAQ,EAACZ,qBAdsB;AAe/Ba,EAAAA,IAAI,EAACZ,iBAf0B;AAgB/Ba,EAAAA,YAAY,EAAChB,sBAhBkB;AAiB/BiB,EAAAA,aAAa,EAAClB,qBAjBiB;AAmB/B;AACAmB,EAAAA,WAAW,EAAC7B,qBApBmB;AAqB/B8B,EAAAA,gBAAgB,EAAC5B,2BArBc;AAsB/B6B,EAAAA,mBAAmB,EAAChC,6BAtBW;AAuB/BiC,EAAAA,gBAAgB,EAACpC,uBAvBc;AAwB/BqC,EAAAA,oBAAoB,EAACnC,2BAxBU;AAyB/BoC,EAAAA,oBAAoB,EAACrC,2BAzBU;AA0B/BsC,EAAAA,eAAe,EAAClC,sBA1Be;AA2B/B;AACAmC,EAAAA,mBAAmB,EAAErB,0BA5BU;AAiC/B;AACAsB,EAAAA,aAAa,EAAElC,oBAlCgB;AAmC/BmC,EAAAA,aAAa,EAAElC,oBAnCgB;AAoC/BmC,EAAAA,aAAa,EAAElC,oBApCgB;AAqC/BmC,EAAAA,sBAAsB,EAAElC,sBArCO;AAsC/BmC,EAAAA,iBAAiB,EAAElC,wBAtCY;AAuC/BmC,EAAAA,kBAAkB,EAAElC,yBAvCW;AAwC/BmC,EAAAA,uBAAuB,EAAElC,uBAxCM;AAyC/BmC,EAAAA,cAAc,EAAC5B;AAzCgB,CAAD,CAAhC;AA4CA,MAAM6B,KAAK,GAAG7D,WAAW,CACvBiC,QADuB,EAEvBtB,mBAAmB,CAACT,eAAe,CAACO,MAAD,EAASC,KAAT,CAAhB,CAFI,CAAzB;AAKA,eAAemD,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport {adminTotalChargesReducer, employeeDeleteReducer,employeeSigninReducer,employeeSignupReducer,employeeUpdateReducer,viewEmployeesReducer,} from './reducers/employeeReducers'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { recpAdmitPatientReducer, recpDischargePatientReducer, recpGetAdmitPatientsReducer, recpGetAllAppointmentsReducer, recpGetDoctorsReducer, recpMakePaymentReducer, recpViewAppointmentsReducer } from './reducers/recpReducers'\nimport {patientSigninReducer,patientSignupReducer,patientGetDocReducer,patientBookAppoReducer,patientGetProfileReducer,patientEditProfileReducer,patientviewPrescReducer,} from './reducers/patientReducer'\nimport { createMedPrescReducer, createTestPrescReducer, fetchAppointmentReducer, fetchMedicinesReducer, fetchTestsReducer } from \"./reducers/DoctorReducer\";\nimport { labManagerViewPrescReducer } from './reducers/LabManagerReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\n\n// combined reducers\nconst reducers = combineReducers({\n  employeeSignin: employeeSigninReducer,\n\n  employeeSignup: employeeSignupReducer,\n  //admin\n  viewEmployees:viewEmployeesReducer,\n  deleteEmployee:employeeDeleteReducer,\n  updateEmployee:employeeUpdateReducer,\n  totalCharges:adminTotalChargesReducer,\n\n\n\n  //doctor\n  appointment:fetchAppointmentReducer,\n  medicine:fetchMedicinesReducer,\n  test:fetchTestsReducer,\n  prescription:createTestPrescReducer,\n  medicinePresc:createMedPrescReducer,\n  \n  //receptionist\n  recpDoctors:recpGetDoctorsReducer,\n  recpAppointments:recpViewAppointmentsReducer,\n  recpAllAppointments:recpGetAllAppointmentsReducer,\n  recpAdmitPatient:recpAdmitPatientReducer,\n  recpGetAdmitPatients:recpGetAdmitPatientsReducer,\n  recpDischargePatient:recpDischargePatientReducer,\n  recpMakePayment:recpMakePaymentReducer,\n  //lab manager\n  labManagerviewPresc: labManagerViewPrescReducer,\n\n\n\n\n  //patient\n  patientSignin: patientSigninReducer,\n  patientSignup: patientSignupReducer,\n  patientGetDoc: patientGetDocReducer,\n  patientBookAppointment: patientBookAppoReducer,\n  patientGetprofile: patientGetProfileReducer,\n  patientEditprofile: patientEditProfileReducer,\n  patientViewPrescription: patientviewPrescReducer,\n  paymentDetails:paymentReducer\n})\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(logger, thunk))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}