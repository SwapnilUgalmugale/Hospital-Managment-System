{"ast":null,"code":"import { RECP_ADMIT_PATIENT_FAIL, RECP_ADMIT_PATIENT_REQUEST, RECP_ADMIT_PATIENT_SUCCESS, RECP_ALL_APPOINTMENTS_FAIL, RECP_ALL_APPOINTMENTS_REQUEST, RECP_ALL_APPOINTMENTS_SUCCESS, RECP_DISCHARGE_PATIENT_FAIL, RECP_DISCHARGE_PATIENT_REQUEST, RECP_DISCHARGE_PATIENT_SUCCESS, RECP_GET_ADMIT_PATIENT_FAIL, RECP_GET_ADMIT_PATIENT_REQUEST, RECP_GET_ADMIT_PATIENT_SUCCESS, RECP_GET_DOCTORS_FAIL, RECP_GET_DOCTORS_REQUEST, RECP_GET_DOCTORS_SUCCESS, RECP_MAKE_PAYMENT_REQUEST, RECP_MAKE_PAYMENT_SUCCESS, RECP_MAKE_PAYMENT_FAIL, RECP_VIEW_APPOINTMENTS_FAIL, RECP_VIEW_APPOINTMENTS_REQUEST, RECP_VIEW_APPOINTMENTS_SUCCESS } from \"../constants/RecpConstants\";\nimport axios from \"axios\";\nimport { SPRINGURL } from \"../constants/URLConstants\";\nexport const recpGetDoctorsAction = () => {\n  return dispatch => {\n    dispatch({\n      type: RECP_GET_DOCTORS_REQUEST\n    });\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const url = SPRINGURL + \"/receptionist/appointments\";\n    axios.get(url, header).then(response => {\n      dispatch({\n        type: RECP_GET_DOCTORS_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECP_GET_DOCTORS_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const recpViewAppointmentsAction = doc_id => {\n  return dispatch => {\n    dispatch({\n      type: RECP_VIEW_APPOINTMENTS_REQUEST\n    });\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const url = SPRINGURL + \"/receptionist/appointments/\" + doc_id;\n    axios.get(url, header).then(response => {\n      dispatch({\n        type: RECP_VIEW_APPOINTMENTS_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECP_VIEW_APPOINTMENTS_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const recpGetAllAppointmentsAction = () => {\n  return dispatch => {\n    dispatch({\n      type: RECP_ALL_APPOINTMENTS_REQUEST\n    });\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const url = SPRINGURL + \"/receptionist/allAppointments\";\n    axios.get(url, header).then(response => {\n      dispatch({\n        type: RECP_ALL_APPOINTMENTS_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECP_ALL_APPOINTMENTS_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const recpAdmitPatientAction = (appointment, admitDate, department) => {\n  return dispatch => {\n    dispatch({\n      type: RECP_ADMIT_PATIENT_REQUEST\n    });\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const admitPatDetails = {\n      appointment,\n      admitDate,\n      department\n    };\n    const url = SPRINGURL + \"/receptionist/admitPatient\";\n    axios.post(url, admitPatDetails, header).then(response => {\n      dispatch({\n        type: RECP_ADMIT_PATIENT_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECP_ADMIT_PATIENT_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const recpGetAdmitPatientsAction = () => {\n  return dispatch => {\n    dispatch({\n      type: RECP_GET_ADMIT_PATIENT_REQUEST\n    });\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const url = SPRINGURL + \"/receptionist/dischargePatient\";\n    axios.get(url, header).then(response => {\n      dispatch({\n        type: RECP_GET_ADMIT_PATIENT_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECP_GET_ADMIT_PATIENT_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const recpDischargePatientAction = id => {\n  return dispatch => {\n    dispatch({\n      type: RECP_DISCHARGE_PATIENT_REQUEST\n    });\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const url = SPRINGURL + \"/receptionist/dischargePatient/\" + id;\n    axios.put(url, header).then(response => {\n      dispatch({\n        type: RECP_DISCHARGE_PATIENT_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECP_DISCHARGE_PATIENT_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const recpMakePaymentAction = (patientId, apptId, wardCharges, testCharges) => {\n  return dispatch => {\n    dispatch({\n      type: RECP_MAKE_PAYMENT_REQUEST\n    });\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = {\n      apptId,\n      patientId,\n      testCharges,\n      wardCharges\n    };\n    const url = SPRINGURL + \"/receptionist/acceptPayment\";\n    axios.put(url, body, header).then(response => {\n      dispatch({\n        type: RECP_MAKE_PAYMENT_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECP_MAKE_PAYMENT_FAIL,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/src/actions/recpActions.js"],"names":["RECP_ADMIT_PATIENT_FAIL","RECP_ADMIT_PATIENT_REQUEST","RECP_ADMIT_PATIENT_SUCCESS","RECP_ALL_APPOINTMENTS_FAIL","RECP_ALL_APPOINTMENTS_REQUEST","RECP_ALL_APPOINTMENTS_SUCCESS","RECP_DISCHARGE_PATIENT_FAIL","RECP_DISCHARGE_PATIENT_REQUEST","RECP_DISCHARGE_PATIENT_SUCCESS","RECP_GET_ADMIT_PATIENT_FAIL","RECP_GET_ADMIT_PATIENT_REQUEST","RECP_GET_ADMIT_PATIENT_SUCCESS","RECP_GET_DOCTORS_FAIL","RECP_GET_DOCTORS_REQUEST","RECP_GET_DOCTORS_SUCCESS","RECP_MAKE_PAYMENT_REQUEST","RECP_MAKE_PAYMENT_SUCCESS","RECP_MAKE_PAYMENT_FAIL","RECP_VIEW_APPOINTMENTS_FAIL","RECP_VIEW_APPOINTMENTS_REQUEST","RECP_VIEW_APPOINTMENTS_SUCCESS","axios","SPRINGURL","recpGetDoctorsAction","dispatch","type","header","headers","url","get","then","response","payload","catch","error","recpViewAppointmentsAction","doc_id","recpGetAllAppointmentsAction","recpAdmitPatientAction","appointment","admitDate","department","admitPatDetails","post","recpGetAdmitPatientsAction","recpDischargePatientAction","id","put","recpMakePaymentAction","patientId","apptId","wardCharges","testCharges","body"],"mappings":"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","sourcesContent":["import {\r\n  RECP_ADMIT_PATIENT_FAIL,\r\n  RECP_ADMIT_PATIENT_REQUEST,\r\n  RECP_ADMIT_PATIENT_SUCCESS,\r\n  RECP_ALL_APPOINTMENTS_FAIL,\r\n  RECP_ALL_APPOINTMENTS_REQUEST,\r\n  RECP_ALL_APPOINTMENTS_SUCCESS,\r\n  RECP_DISCHARGE_PATIENT_FAIL,\r\n  RECP_DISCHARGE_PATIENT_REQUEST,\r\n  RECP_DISCHARGE_PATIENT_SUCCESS,\r\n  RECP_GET_ADMIT_PATIENT_FAIL,\r\n  RECP_GET_ADMIT_PATIENT_REQUEST,\r\n  RECP_GET_ADMIT_PATIENT_SUCCESS,\r\n  RECP_GET_DOCTORS_FAIL,\r\n  RECP_GET_DOCTORS_REQUEST,\r\n  RECP_GET_DOCTORS_SUCCESS,\r\n  RECP_MAKE_PAYMENT_REQUEST,\r\n  RECP_MAKE_PAYMENT_SUCCESS,\r\n  RECP_MAKE_PAYMENT_FAIL,\r\n  RECP_VIEW_APPOINTMENTS_FAIL,\r\n  RECP_VIEW_APPOINTMENTS_REQUEST,\r\n  RECP_VIEW_APPOINTMENTS_SUCCESS,\r\n} from \"../constants/RecpConstants\";\r\nimport axios from \"axios\";\r\nimport {SPRINGURL} from \"../constants/URLConstants\"\r\n\r\nexport const recpGetDoctorsAction = () => {\r\n  \r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_GET_DOCTORS_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/appointments\";\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_GET_DOCTORS_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_GET_DOCTORS_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpViewAppointmentsAction = (doc_id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_VIEW_APPOINTMENTS_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/appointments/\" + doc_id;\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_VIEW_APPOINTMENTS_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_VIEW_APPOINTMENTS_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpGetAllAppointmentsAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_ALL_APPOINTMENTS_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/allAppointments\";\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_ALL_APPOINTMENTS_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_ALL_APPOINTMENTS_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpAdmitPatientAction = (appointment, admitDate, department) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_ADMIT_PATIENT_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const admitPatDetails = { appointment, admitDate, department };\r\n    const url = SPRINGURL+\"/receptionist/admitPatient\";\r\n    axios\r\n      .post(url, admitPatDetails, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_ADMIT_PATIENT_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_ADMIT_PATIENT_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpGetAdmitPatientsAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_GET_ADMIT_PATIENT_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/dischargePatient\";\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_GET_ADMIT_PATIENT_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_GET_ADMIT_PATIENT_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpDischargePatientAction = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_DISCHARGE_PATIENT_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const url = SPRINGURL+\"/receptionist/dischargePatient/\" + id;\r\n    axios\r\n      .put(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_DISCHARGE_PATIENT_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_DISCHARGE_PATIENT_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const recpMakePaymentAction = (\r\n  patientId,\r\n  apptId,\r\n  wardCharges,\r\n  testCharges\r\n) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: RECP_MAKE_PAYMENT_REQUEST,\r\n    });\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = { apptId, patientId, testCharges, wardCharges };\r\n    const url = SPRINGURL+\"/receptionist/acceptPayment\";\r\n    axios\r\n      .put(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: RECP_MAKE_PAYMENT_SUCCESS,\r\n          payload: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: RECP_MAKE_PAYMENT_FAIL,\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}