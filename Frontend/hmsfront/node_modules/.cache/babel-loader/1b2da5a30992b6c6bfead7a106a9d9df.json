{"ast":null,"code":"import { EMPLOYEE_SIGNIN_REQUEST, EMPLOYEE_SIGNIN_SUCCESS, EMPLOYEE_SIGNIN_FAIL, EMPLOYEE_SIGNUP_REQUEST, EMPLOYEE_SIGNUP_SUCCESS, EMPLOYEE_SIGNUP_FAIL, EMPLOYEE_VIEWEMPLOYEES_REQUEST, EMPLOYEE_VIEWEMPLOYEES_FAIL, EMPLOYEE_VIEWEMPLOYEES_SUCCESS, EMPLOYEE_DELETE_REQUEST, EMPLOYEE_DELETE_SUCCESS, EMPLOYEE_DELETE_FAIL, EMPLOYEE_UPDATE_REQUEST, EMPLOYEE_UPDATE_SUCCESS, EMPLOYEE_UPDATE_FAIL, EMPLOYEE_SIGNOUT, ADMIN_GET_ALL_CHARGES_FAIL, ADMIN_GET_ALL_CHARGES_REQUEST, ADMIN_GET_ALL_CHARGES_SUCCESS } from '../constants/employeeConstants';\nimport axios from 'axios';\nimport { SPRINGURL } from '../constants/URLConstants';\nexport const employeeSigninAction = (email, password) => {\n  return dispatch => {\n    dispatch({\n      type: EMPLOYEE_SIGNIN_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = {\n      email,\n      password\n    };\n    const url = SPRINGURL + '/user/login';\n    axios.post(url, body, header).then(response => {\n      dispatch({\n        type: EMPLOYEE_SIGNIN_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: EMPLOYEE_SIGNIN_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const employeeSignupAction = employee_details => {\n  return dispatch => {\n    dispatch({\n      type: EMPLOYEE_SIGNUP_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const url = SPRINGURL + '/admin/register';\n    axios.post(url, employee_details, header).then(response => {\n      dispatch({\n        type: EMPLOYEE_SIGNUP_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: EMPLOYEE_SIGNUP_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const viewEmployeesAction = () => {\n  return dispatch => {\n    dispatch({\n      type: EMPLOYEE_VIEWEMPLOYEES_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const url = SPRINGURL + '/admin';\n    axios.get(url, header).then(response => {\n      dispatch({\n        type: EMPLOYEE_VIEWEMPLOYEES_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: EMPLOYEE_VIEWEMPLOYEES_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const employeeDeleteAction = emp_id => {\n  return dispatch => {\n    dispatch({\n      type: EMPLOYEE_DELETE_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const url = SPRINGURL + '/admin/delete/' + emp_id;\n    axios.delete(url, header).then(dresponse => {\n      dispatch({\n        type: EMPLOYEE_DELETE_SUCCESS,\n        payload: dresponse\n      });\n    }).catch(derror => {\n      dispatch({\n        type: EMPLOYEE_DELETE_FAIL,\n        payload: derror\n      });\n    });\n  };\n};\nexport const employeeUpdateAction = (emp_id, emp_details) => {\n  return dispatch => {\n    dispatch({\n      type: EMPLOYEE_UPDATE_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const url = SPRINGURL + '/admin/update/' + emp_id;\n    axios.put(url, emp_details, header).then(response => {\n      dispatch({\n        type: EMPLOYEE_UPDATE_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: EMPLOYEE_UPDATE_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const employeeLogoutAction = () => {\n  return dispatch => {\n    sessionStorage.removeItem('emp_details');\n    sessionStorage.removeItem('emp_id');\n    sessionStorage.removeItem('isLoggedIn');\n    sessionStorage.removeItem('patient_id');\n    sessionStorage.removeItem('docId');\n    dispatch({\n      type: EMPLOYEE_SIGNOUT\n    });\n    document.location.href = '/home';\n  };\n};\nexport const adminGetTotalChargesAction = () => {\n  return dispatch => {\n    dispatch({\n      type: ADMIN_GET_ALL_CHARGES_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const url = SPRINGURL + '/receptionist/totalCharges';\n    axios.get(url, header).then(response => {\n      dispatch({\n        type: ADMIN_GET_ALL_CHARGES_SUCCESS,\n        payload: response\n      });\n    }).catch(error => {\n      dispatch({\n        type: ADMIN_GET_ALL_CHARGES_FAIL,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/src/actions/employeeActions.js"],"names":["EMPLOYEE_SIGNIN_REQUEST","EMPLOYEE_SIGNIN_SUCCESS","EMPLOYEE_SIGNIN_FAIL","EMPLOYEE_SIGNUP_REQUEST","EMPLOYEE_SIGNUP_SUCCESS","EMPLOYEE_SIGNUP_FAIL","EMPLOYEE_VIEWEMPLOYEES_REQUEST","EMPLOYEE_VIEWEMPLOYEES_FAIL","EMPLOYEE_VIEWEMPLOYEES_SUCCESS","EMPLOYEE_DELETE_REQUEST","EMPLOYEE_DELETE_SUCCESS","EMPLOYEE_DELETE_FAIL","EMPLOYEE_UPDATE_REQUEST","EMPLOYEE_UPDATE_SUCCESS","EMPLOYEE_UPDATE_FAIL","EMPLOYEE_SIGNOUT","ADMIN_GET_ALL_CHARGES_FAIL","ADMIN_GET_ALL_CHARGES_REQUEST","ADMIN_GET_ALL_CHARGES_SUCCESS","axios","SPRINGURL","employeeSigninAction","email","password","dispatch","type","header","headers","body","url","post","then","response","payload","catch","error","employeeSignupAction","employee_details","viewEmployeesAction","get","employeeDeleteAction","emp_id","delete","dresponse","derror","employeeUpdateAction","emp_details","put","employeeLogoutAction","sessionStorage","removeItem","document","location","href","adminGetTotalChargesAction"],"mappings":"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","sourcesContent":["import {\r\n  EMPLOYEE_SIGNIN_REQUEST,\r\n  EMPLOYEE_SIGNIN_SUCCESS,\r\n  EMPLOYEE_SIGNIN_FAIL,\r\n  EMPLOYEE_SIGNUP_REQUEST,\r\n  EMPLOYEE_SIGNUP_SUCCESS,\r\n  EMPLOYEE_SIGNUP_FAIL,\r\n  EMPLOYEE_VIEWEMPLOYEES_REQUEST,\r\n  EMPLOYEE_VIEWEMPLOYEES_FAIL,\r\n  EMPLOYEE_VIEWEMPLOYEES_SUCCESS,\r\n  EMPLOYEE_DELETE_REQUEST,\r\n  EMPLOYEE_DELETE_SUCCESS,\r\n  EMPLOYEE_DELETE_FAIL,\r\n  EMPLOYEE_UPDATE_REQUEST,\r\n  EMPLOYEE_UPDATE_SUCCESS,\r\n  EMPLOYEE_UPDATE_FAIL,\r\n  EMPLOYEE_SIGNOUT,\r\n  ADMIN_GET_ALL_CHARGES_FAIL,\r\n  ADMIN_GET_ALL_CHARGES_REQUEST,\r\n  ADMIN_GET_ALL_CHARGES_SUCCESS,\r\n} from '../constants/employeeConstants'\r\nimport axios from 'axios'\r\nimport { SPRINGURL } from '../constants/URLConstants'\r\n\r\nexport const employeeSigninAction = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_SIGNIN_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      email,\r\n      password,\r\n    }\r\n    const url = SPRINGURL + '/user/login'\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: EMPLOYEE_SIGNIN_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: EMPLOYEE_SIGNIN_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const employeeSignupAction = (employee_details) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_SIGNUP_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL + '/admin/register'\r\n    axios\r\n      .post(url, employee_details, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: EMPLOYEE_SIGNUP_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: EMPLOYEE_SIGNUP_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const viewEmployeesAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_VIEWEMPLOYEES_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/admin'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: EMPLOYEE_VIEWEMPLOYEES_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: EMPLOYEE_VIEWEMPLOYEES_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const employeeDeleteAction = (emp_id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_DELETE_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL + '/admin/delete/' + emp_id\r\n    axios\r\n      .delete(url, header)\r\n      .then((dresponse) => {\r\n        dispatch({\r\n          type: EMPLOYEE_DELETE_SUCCESS,\r\n          payload: dresponse,\r\n        })\r\n      })\r\n      .catch((derror) => {\r\n        dispatch({\r\n          type: EMPLOYEE_DELETE_FAIL,\r\n          payload: derror,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const employeeUpdateAction = (emp_id, emp_details) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: EMPLOYEE_UPDATE_REQUEST,\r\n    })\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL + '/admin/update/' + emp_id\r\n    axios\r\n      .put(url, emp_details, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: EMPLOYEE_UPDATE_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: EMPLOYEE_UPDATE_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const employeeLogoutAction = () => {\r\n  return (dispatch) => {\r\n    sessionStorage.removeItem('emp_details')\r\n    sessionStorage.removeItem('emp_id')\r\n    sessionStorage.removeItem('isLoggedIn')\r\n    sessionStorage.removeItem('patient_id')\r\n    sessionStorage.removeItem('docId')\r\n    dispatch({ type: EMPLOYEE_SIGNOUT })\r\n    document.location.href = '/home'\r\n  }\r\n}\r\n\r\nexport const adminGetTotalChargesAction = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_GET_ALL_CHARGES_REQUEST,\r\n    })\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/receptionist/totalCharges'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: ADMIN_GET_ALL_CHARGES_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: ADMIN_GET_ALL_CHARGES_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}