{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\final-project-online-hospital-management-system\\\\Frontend\\\\hmsfront\\\\src\\\\screens\\\\ReceptionistScreens\\\\RecpAdmitPatient.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { recpAdmitPatientAction, recpGetAllAppointmentsAction } from \"../../actions/recpActions\";\nimport Header from \"../../components/Header\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecpAdmitPatient = props => {\n  _s();\n\n  const [admitDate, setAdmitDate] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const allAppts = useSelector(store => store.recpAllAppointments);\n  const {\n    aresponse\n  } = allAppts;\n  const dispatch = useDispatch();\n\n  const onAdmit = id => {\n    console.log(\"id\", id);\n    dispatch(recpAdmitPatientAction(id, admitDate, department)); //  window.location.reload(true)\n  };\n\n  useEffect(() => {}, []);\n  useEffect(() => {\n    dispatch(recpGetAllAppointmentsAction());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Admit Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), aresponse && aresponse.data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Select Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          onChange: e => {\n            setAdmitDate(e.target.value);\n          },\n          type: \"date\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Department Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          onChange: e => {\n            setDepartment(e.target.value);\n          },\n          className: \"form-select\",\n          \"aria-label\": \"Default select example\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            children: \"Select Department Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Cardiology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"Neurology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"Orthopedics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"Opthalmology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Appt Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Appt Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Patient Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Admit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: aresponse && aresponse.data.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.apptDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.apptPatient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    onAdmit(e.id);\n                  },\n                  className: \"btn btn-primary\",\n                  type: \"button\",\n                  children: \"Admit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No Patient to be admitted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecpAdmitPatient, \"b4aQAExKI92N6L9GV7XO0pBr9NE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RecpAdmitPatient;\nexport default RecpAdmitPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecpAdmitPatient\");","map":{"version":3,"sources":["E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/src/screens/ReceptionistScreens/RecpAdmitPatient.js"],"names":["useDispatch","useSelector","recpAdmitPatientAction","recpGetAllAppointmentsAction","Header","useEffect","useState","RecpAdmitPatient","props","admitDate","setAdmitDate","department","setDepartment","allAppts","store","recpAllAppointments","aresponse","dispatch","onAdmit","id","console","log","data","length","e","target","value","map","apptDate","apptPatient","name"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  recpAdmitPatientAction,\r\n  recpGetAllAppointmentsAction,\r\n} from \"../../actions/recpActions\";\r\nimport Header from \"../../components/Header\";\r\nimport { useEffect, useState } from \"react\";\r\nconst RecpAdmitPatient = (props) => {\r\n  const [admitDate, setAdmitDate] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const allAppts = useSelector((store) => store.recpAllAppointments);\r\n  const {  aresponse } = allAppts;\r\n  \r\n  const dispatch = useDispatch();\r\n  const onAdmit = (id) => {\r\n    console.log(\"id\", id);\r\n    dispatch(recpAdmitPatientAction(id, admitDate, department));\r\n    //  window.location.reload(true)\r\n  };\r\n  useEffect(() => {}, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(recpGetAllAppointmentsAction());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Admit Patient\" />\r\n      {aresponse && aresponse.data.length > 0 ? (\r\n        <div className=\"form\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Select Date</label>\r\n            <input\r\n              required\r\n              onChange={(e) => {\r\n                setAdmitDate(e.target.value);\r\n              }}\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Department Id</label>\r\n            <select\r\n              required\r\n              onChange={(e) => {\r\n                setDepartment(e.target.value);\r\n              }}\r\n              className=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected>Select Department Id</option>\r\n              <option value=\"2\">Cardiology</option>\r\n              <option value=\"3\">Neurology</option>\r\n              <option value=\"4\">Orthopedics</option>\r\n              <option value=\"5\">Opthalmology</option>\r\n            </select>\r\n          </div>\r\n\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Appt Id</th>\r\n                <th>Appt Date</th>\r\n                <th>Patient Name</th>\r\n                <th>Admit</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {aresponse && aresponse.data.map((e) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{e.id}</td>\r\n                    <td>{e.apptDate}</td>\r\n                    <td>{e.apptPatient.name}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => {\r\n                          onAdmit(e.id);\r\n                        }}\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        Admit\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <h3>No Patient to be admitted</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecpAdmitPatient;\r\n"]},"metadata":{},"sourceType":"module"}