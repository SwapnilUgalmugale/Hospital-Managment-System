{"ast":null,"code":"import{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{getAppointment}from'../../actions/DoctorAction';import Header from'../../components/Header';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DoctorAppointmentScreen=function DoctorAppointmentScreen(props){var doctor=useSelector(function(store){return store.employeeSignin;});var response=doctor.response;var docId=response&&response.data&&response.data.id;var dispatch=useDispatch();var appointments=useSelector(function(store){return store.appointment;});var error2=appointments.error2,response2=appointments.response2,loading2=appointments.loading2;// call this only once (when the page has loaded successfully)\nuseEffect(function(){dispatch(getAppointment(docId));},[]);useEffect(function(){},[error2,response2,loading2]);var create_med=function create_med(){console.log('pId '+sessionStorage['patient_id']);props.history.push('/doctor/med_list');};var create_test=function create_test(){console.log('pId '+sessionStorage['patient_id']);props.history.push('/doctor/test_list');};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{title:\"Appointments\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Appointment id\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Patient id\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Patient name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:response2&&response2.length>0&&response2.map(function(appointment){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:appointment.id}),/*#__PURE__*/_jsx(\"td\",{children:appointment.apptDate}),/*#__PURE__*/_jsx(\"td\",{children:appointment.apptPatient.id}),/*#__PURE__*/_jsx(\"td\",{children:appointment.apptPatient.name}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-success\",onClick:function onClick(){sessionStorage.setItem('patient_id',appointment.apptPatient.id);create_med();},children:\"Create Medicine Prescription\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-success\",onClick:function onClick(){sessionStorage.setItem('patient_id',appointment.apptPatient.id);create_test();},children:\"Create Test Prescription\"})}),/*#__PURE__*/_jsx(\"td\",{})]});})})]})]});};export default DoctorAppointmentScreen;","map":{"version":3,"sources":["E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/src/screens/DoctorScreens/DoctorAppointmentScreen.js"],"names":["useEffect","useDispatch","useSelector","getAppointment","Header","DoctorAppointmentScreen","props","doctor","store","employeeSignin","response","docId","data","id","dispatch","appointments","appointment","error2","response2","loading2","create_med","console","log","sessionStorage","history","push","create_test","length","map","apptDate","apptPatient","name","setItem"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAppointment } from '../../actions/DoctorAction'\nimport Header from '../../components/Header'\n\nconst DoctorAppointmentScreen = (props) => {\n  const doctor = useSelector((store) => store.employeeSignin)\n  const { response } = doctor\n  const docId = response && response.data && response.data.id\n  const dispatch = useDispatch()\n  const appointments = useSelector((store) => store.appointment)\n  const { error2, response2, loading2 } = appointments\n\n  // call this only once (when the page has loaded successfully)\n  useEffect(() => {\n    dispatch(getAppointment(docId))\n  }, [])\n\n  useEffect(() => {}, [error2, response2, loading2])\n  const create_med = () => {\n    console.log('pId ' + sessionStorage['patient_id'])\n    props.history.push('/doctor/med_list')\n  }\n  const create_test = () => {\n    console.log('pId ' + sessionStorage['patient_id'])\n    props.history.push('/doctor/test_list')\n  }\n  return (\n    <div className=\"container\">\n      <Header title=\"Appointments\" />\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Appointment id</th>\n            <th>Date</th>\n            <th>Patient id</th>\n            <th>Patient name</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response2 &&\n            response2.length > 0 &&\n            response2.map((appointment) => {\n              return (\n                <tr>\n                  <td>{appointment.id}</td>\n                  <td>{appointment.apptDate}</td>\n                  <td>{appointment.apptPatient.id}</td>\n                  <td>{appointment.apptPatient.name}</td>\n                  <td>\n                    <button\n                      class=\"btn btn-success\"\n                      onClick={() => {\n                        sessionStorage.setItem(\n                          'patient_id',\n                          appointment.apptPatient.id\n                        )\n                        create_med()\n                      }}>\n                      Create Medicine Prescription\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      class=\"btn btn-success\"\n                      onClick={() => {\n                        sessionStorage.setItem(\n                          'patient_id',\n                          appointment.apptPatient.id\n                        )\n                        create_test()\n                      }}>\n                      Create Test Prescription\n                    </button>\n                  </td>\n                  <td></td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default DoctorAppointmentScreen\n"]},"metadata":{},"sourceType":"module"}