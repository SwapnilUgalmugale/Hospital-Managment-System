{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\final-project-online-hospital-management-system\\\\Frontend\\\\hmsfront\\\\src\\\\screens\\\\AdminScreens\\\\AdminViewEmployeesScreen.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"../../components/Header\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { employeeDeleteAction, viewEmployeesAction } from \"../../actions/employeeActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminViewEmployeesScreen = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const viewEmployees = useSelector(store => store.viewEmployees);\n  const {\n    loading,\n    response,\n    error\n  } = viewEmployees;\n  const deleteEmployee = useSelector(store => store.deleteEmployee);\n  const {\n    dloading,\n    dresponse,\n    derror\n  } = deleteEmployee;\n  let message;\n\n  const onDelete = emp_id => {\n    dispatch(employeeDeleteAction(emp_id));\n  };\n\n  const onUpdate = emp_id => {\n    sessionStorage.setItem(\"emp_id\", emp_id);\n    props.history.push(\"/admin/update-employee\");\n  };\n\n  useEffect(() => {\n    dispatch(viewEmployeesAction());\n  }, []);\n  useEffect(() => {\n    if (dresponse && dresponse.status == \"200\") {\n      alert(\"Employee deleted successfully\");\n      document.location.href = \"/admin/view-employees\"; // props.history.push(\"/admin/view-employees\");\n    } else if (derror) {\n      alert(\"Cannot delete employee\");\n    }\n  }, [derror, dresponse, dloading]);\n  useEffect(() => {// console.log(\"use effect list \", response);\n  }, [error, response, loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"text-center\",\n      title: \"List of  Employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped container\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: response && response.data.list.length > 0 && response.data.list.map(e => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: e.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onDelete(e.id);\n                },\n                className: \"btn btn-danger\",\n                type: \"button\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onUpdate(e.id);\n                },\n                className: \"btn btn-primary\",\n                type: \"button\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminViewEmployeesScreen, \"BC86Vh/CZVd4Aq5cyKIuk0iNPaA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AdminViewEmployeesScreen;\nexport default AdminViewEmployeesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminViewEmployeesScreen\");","map":{"version":3,"sources":["E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/src/screens/AdminScreens/AdminViewEmployeesScreen.js"],"names":["Header","useEffect","useDispatch","useSelector","employeeDeleteAction","viewEmployeesAction","AdminViewEmployeesScreen","props","dispatch","viewEmployees","store","loading","response","error","deleteEmployee","dloading","dresponse","derror","message","onDelete","emp_id","onUpdate","sessionStorage","setItem","history","push","status","alert","document","location","href","data","list","length","map","e","id","name","role"],"mappings":"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","sourcesContent":["import Header from \"../../components/Header\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  employeeDeleteAction,\n  viewEmployeesAction,\n} from \"../../actions/employeeActions\";\nconst AdminViewEmployeesScreen = (props) => {\n  const dispatch = useDispatch();\n  const viewEmployees = useSelector((store) => store.viewEmployees);\n  const { loading, response, error } = viewEmployees;\n\n  const deleteEmployee = useSelector((store) => store.deleteEmployee);\n  const { dloading, dresponse, derror } = deleteEmployee;\n  let message;\n  const onDelete = (emp_id) => {\n    dispatch(employeeDeleteAction(emp_id));\n  };\n\n  const onUpdate = (emp_id) => {\n    sessionStorage.setItem(\"emp_id\", emp_id);\n    props.history.push(\"/admin/update-employee\");\n  };\n\n  useEffect(() => {\n    dispatch(viewEmployeesAction());\n  }, []);\n  useEffect(() => {\n    if (dresponse && dresponse.status == \"200\") {\n      alert(\"Employee deleted successfully\");\n      document.location.href = \"/admin/view-employees\";\n      // props.history.push(\"/admin/view-employees\");\n    } else if (derror) {\n      alert(\"Cannot delete employee\");\n    }\n  }, [derror, dresponse, dloading]);\n\n  useEffect(() => {\n    // console.log(\"use effect list \", response);\n  }, [error, response, loading]);\n  return (\n    <div className=\"container\">\n      <Header className=\"text-center\" title=\"List of  Employees\" />\n      <table className=\"table table-striped container\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Role</th>\n            <th>Delete</th>\n            <th>Update</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response &&\n            response.data.list.length > 0 &&\n            response.data.list.map((e) => {\n              return (\n                <tr>\n                  <td>{e.id}</td>\n                  <td>{e.name}</td>\n                  <td>{e.role}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        onDelete(e.id);\n                      }}\n                      className=\"btn btn-danger\"\n                      type=\"button\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        onUpdate(e.id);\n                      }}\n                      className=\"btn btn-primary\"\n                      type=\"button\"\n                    >\n                      Update\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminViewEmployeesScreen;\n"]},"metadata":{},"sourceType":"module"}