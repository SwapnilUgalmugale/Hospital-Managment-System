{"ast":null,"code":"var _jsxFileName = \"E:\\\\cdac\\\\PROJECT\\\\hospitalmanagementsystem-master\\\\hospitalmanagementsystem-master\\\\Frontend\\\\hmsfront\\\\src\\\\screens\\\\AdminScreens\\\\AdminUpdateEmployeeScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { employeeUpdateAction } from \"../../actions/employeeActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: Header\n} = require(\"../../components/Header\");\n\nconst AdminUpdateEmployeeScreen = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const dispatch = useDispatch();\n  const emp_id = sessionStorage.getItem('emp_id');\n  const employee_details = {\n    name,\n    email,\n    password,\n    contact\n  };\n  const employeeUpdate = useSelector(store => store.updateEmployee);\n  const {\n    loading,\n    response,\n    error\n  } = employeeUpdate;\n  useEffect(() => {\n    if (response && response.status == \"200\") {\n      // user successfully got registered\n      props.history.push(\"/admin/view-employees\");\n    } else if (error) {\n      // there is an error while making the API call\n      console.log(error);\n      alert(\"error while making API call\");\n    }\n  }, [loading, response, error]);\n\n  const onUpdate = () => {\n    dispatch(employeeUpdateAction(emp_id, employee_details));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Update Employee Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setName(e.target.value);\n          },\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setEmail(e.target.value);\n          },\n          type: \"email\",\n          className: \"form-control\",\n          placeholder: \"test@test.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setPassword(e.target.value);\n          },\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"*****\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Contact No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setContact(e.target.value);\n          },\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onUpdate,\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), employeeUpdate.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"waiting for result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminUpdateEmployeeScreen, \"lFYiXoZf5kLv88vkT6cs4iSYq2U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AdminUpdateEmployeeScreen;\nexport default AdminUpdateEmployeeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUpdateEmployeeScreen\");","map":{"version":3,"sources":["E:/cdac/PROJECT/hospitalmanagementsystem-master/hospitalmanagementsystem-master/Frontend/hmsfront/src/screens/AdminScreens/AdminUpdateEmployeeScreen.js"],"names":["useState","useEffect","employeeUpdateAction","useDispatch","useSelector","default","Header","require","AdminUpdateEmployeeScreen","props","name","setName","email","setEmail","password","setPassword","contact","setContact","dispatch","emp_id","sessionStorage","getItem","employee_details","employeeUpdate","store","updateEmployee","loading","response","error","status","history","push","console","log","alert","onUpdate","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,oBAAR,QAAoC,+BAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AACA,MAAM;AAAEC,EAAAA,OAAO,EAAEC;AAAX,IAAsBC,OAAO,CAAC,yBAAD,CAAnC;;AAEA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMkB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,MAAM,GAACC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAb;AACA,QAAMC,gBAAgB,GAAG;AACvBZ,IAAAA,IADuB;AAEvBE,IAAAA,KAFuB;AAGvBE,IAAAA,QAHuB;AAIvBE,IAAAA;AAJuB,GAAzB;AAMA,QAAMO,cAAc,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,cAAlB,CAAlC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BL,cAArC;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,QAAQ,IAAIA,QAAQ,CAACE,MAAT,IAAmB,KAAnC,EAA0C;AACxC;AACApB,MAAAA,KAAK,CAACqB,OAAN,CAAcC,IAAd,CAAmB,uBAAnB;AACD,KAHD,MAGO,IAAIH,KAAJ,EAAW;AAChB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAM,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;AACF,GATQ,EASN,CAACR,OAAD,EAAUC,QAAV,EAAoBC,KAApB,CATM,CAAT;;AAWA,QAAMO,QAAQ,GAAG,MAAM;AACrBjB,IAAAA,QAAQ,CAAChB,oBAAoB,CAACiB,MAAD,EAAQG,gBAAR,CAArB,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGc,CAAD,IAAO;AACfzB,YAAAA,OAAO,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,WAHH;AAIE,UAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGF,CAAD,IAAO;AACfvB,YAAAA,QAAQ,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,WAHH;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,SAAS,EAAC,cALZ;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAqBE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGF,CAAD,IAAO;AACfrB,YAAAA,WAAW,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,WAHH;AAIE,UAAA,IAAI,EAAC,UAJP;AAKE,UAAA,SAAS,EAAC,cALZ;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAgCE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGF,CAAD,IAAO;AACfnB,YAAAA,UAAU,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,WAHH;AAIE,UAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF,eA0CE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEH,QAAjB;AAA2B,UAAA,SAAS,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAmDGZ,cAAc,CAACG,OAAf,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnD7B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CArFD;;GAAMlB,yB;UAKaL,W,EAQMC,W;;;KAbnBI,yB;AAuFN,eAAeA,yBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {employeeUpdateAction } from \"../../actions/employeeActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst { default: Header } = require(\"../../components/Header\");\n\nconst AdminUpdateEmployeeScreen = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const dispatch = useDispatch();\n  const emp_id=sessionStorage.getItem('emp_id')\n  const employee_details = {\n    name,\n    email,\n    password,\n    contact,\n  };\n  const employeeUpdate = useSelector((store) => store.updateEmployee);\n  const { loading, response, error } = employeeUpdate;\n\n  useEffect(() => {\n    if (response && response.status == \"200\") {\n      // user successfully got registered\n      props.history.push(\"/admin/view-employees\");\n    } else if (error) {\n      // there is an error while making the API call\n      console.log(error);\n      alert(\"error while making API call\");\n    }\n  }, [loading, response, error]);\n\n  const onUpdate = () => {\n    dispatch(employeeUpdateAction(emp_id,employee_details));\n  };\n  return (\n    <div>\n      <Header title=\"Update Employee Details\" />\n      <div className=\"form\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Name</label>\n          <input\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Email</label>\n          <input\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"test@test.com\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Password</label>\n          <input\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"*****\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Contact No</label>\n          <input\n            onChange={(e) => {\n              setContact(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        \n        <div className=\"text-center\">\n          <button onClick={onUpdate} className=\"btn btn-primary\">\n            Update\n          </button>\n        </div>\n      </div>\n\n      {employeeUpdate.loading && <div>waiting for result</div>}\n    </div>\n  );\n};\n\nexport default AdminUpdateEmployeeScreen;\n"]},"metadata":{},"sourceType":"module"}