{"ast":null,"code":"var _jsxFileName = \"E:\\\\cdac\\\\PROJECT\\\\hospitalmanagementsystem-master\\\\hospitalmanagementsystem-master\\\\Frontend\\\\hmsfront\\\\src\\\\screens\\\\ReceptionistScreens\\\\RecpAcceptPayment.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { recpGetAllAppointmentsAction, recpMakePaymentAction } from \"../../actions/recpActions\";\nimport Header from \"../../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecpAcceptPayment = props => {\n  _s();\n\n  const [patientId, setPatientId] = useState(\"\");\n  const [apptId, setApptId] = useState(\"\");\n  const [wardCharges, setWardCharges] = useState(\"\");\n  const [testCharges, setTestCharges] = useState(\"\");\n  let appointments = [];\n\n  const getAppointment = aId => {\n    appointments = aresponse.data.filter(a => a.id == aId);\n    setPatientId(appointments.pop().apptPatient.id);\n  };\n\n  const allAppts = useSelector(store => store.recpAllAppointments);\n  const {\n    aresponse\n  } = allAppts;\n  const recpMakePayment = useSelector(store => store.recpMakePayment);\n  let {\n    merror,\n    mresponse\n  } = recpMakePayment;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(recpGetAllAppointmentsAction());\n  }, []);\n\n  const onPayment = () => {\n    dispatch(recpMakePaymentAction(patientId, apptId, wardCharges, testCharges));\n  };\n\n  useEffect(() => {\n    if (mresponse && mresponse.status == \"202\") {\n      alert(\"Payment successfull\");\n      document.location.href = \"/receptionist/home\";\n    } else if (merror) {\n      alert(\"Payment failed....\");\n    }\n  }, [merror, mresponse]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Accept Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Appt Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            getAppointment(e.target.value);\n            setApptId(e.target.value);\n          },\n          className: \"form-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            defaultValue: true,\n            children: \"Select appointment id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), aresponse && aresponse.data.length > 0 && aresponse.data.map(a => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: a.id,\n              children: a.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 24\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Patient Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          disabled: true,\n          onChange: e => {\n            setPatientId(e.target.value);\n          },\n          className: \"form-select\",\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            defaultValue: \"\",\n            value: patientId,\n            children: patientId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Ward Charges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: 0.0,\n          onChange: e => {\n            setWardCharges(e.target.value);\n          },\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Lab Charges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: 0.0,\n          onChange: e => {\n            setTestCharges(e.target.value);\n          },\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onPayment,\n          className: \"btn btn-success btn-block \",\n          children: \"Make Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecpAcceptPayment, \"OeFZnsCpEtjdy7wl68nUCgMkL98=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = RecpAcceptPayment;\nexport default RecpAcceptPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecpAcceptPayment\");","map":{"version":3,"sources":["E:/cdac/PROJECT/hospitalmanagementsystem-master/hospitalmanagementsystem-master/Frontend/hmsfront/src/screens/ReceptionistScreens/RecpAcceptPayment.js"],"names":["useEffect","useState","useDispatch","useSelector","recpGetAllAppointmentsAction","recpMakePaymentAction","Header","RecpAcceptPayment","props","patientId","setPatientId","apptId","setApptId","wardCharges","setWardCharges","testCharges","setTestCharges","appointments","getAppointment","aId","aresponse","data","filter","a","id","pop","apptPatient","allAppts","store","recpAllAppointments","recpMakePayment","merror","mresponse","dispatch","onPayment","status","alert","document","location","href","e","target","value","length","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,4BADF,EAEEC,qBAFF,QAGO,2BAHP;AAIA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,MAAIgB,YAAY,GAAG,EAAnB;;AACA,QAAMC,cAAc,GAAIC,GAAD,IAAS;AAC9BF,IAAAA,YAAY,GAAGG,SAAS,CAACC,IAAV,CAAeC,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACC,EAAF,IAAQL,GAArC,CAAf;AACAT,IAAAA,YAAY,CAACO,YAAY,CAACQ,GAAb,GAAmBC,WAAnB,CAA+BF,EAAhC,CAAZ;AACD,GAHD;;AAIA,QAAMG,QAAQ,GAAGxB,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACC,mBAAlB,CAA5B;AACA,QAAM;AAAET,IAAAA;AAAF,MAAgBO,QAAtB;AACA,QAAMG,eAAe,GAAG3B,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACE,eAAlB,CAAnC;AACA,MAAI;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBF,eAA5B;AAEA,QAAMG,QAAQ,GAAG/B,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,QAAQ,CAAC7B,4BAA4B,EAA7B,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAM8B,SAAS,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CACN5B,qBAAqB,CAACI,SAAD,EAAYE,MAAZ,EAAoBE,WAApB,EAAiCE,WAAjC,CADf,CAAR;AAGD,GAJD;;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgC,SAAS,IAAIA,SAAS,CAACG,MAAV,IAAoB,KAArC,EAA4C;AAC1CC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACAC,MAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,oBAAzB;AACD,KAHD,MAGO,IAAIR,MAAJ,EAAY;AACjBK,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;AACF,GAPQ,EAON,CAACL,MAAD,EAASC,SAAT,CAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGQ,CAAD,IAAO;AACftB,YAAAA,cAAc,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACA9B,YAAAA,SAAS,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,WAJH;AAKE,UAAA,SAAS,EAAC,aALZ;AAAA,kCAOE;AAAQ,YAAA,YAAY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAQGtB,SAAS,IACRA,SAAS,CAACC,IAAV,CAAesB,MAAf,GAAwB,CADzB,IAECvB,SAAS,CAACC,IAAV,CAAeuB,GAAf,CAAoBrB,CAAD,IAAO;AACxB,gCAAO;AAAQ,cAAA,KAAK,EAAEA,CAAC,CAACC,EAAjB;AAAA,wBAAsBD,CAAC,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFD,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,QAAQ,EAAGgB,CAAD,IAAO;AACf9B,YAAAA,YAAY,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,WAJH;AAKE,UAAA,SAAS,EAAC,aALZ;AAAA,iCAOE;AAAQ,YAAA,YAAY,EAAC,EAArB;AAAwB,YAAA,KAAK,EAAEjC,SAA/B;AAAA,sBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAgCE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,YAAY,EAAE,GADhB;AAEE,UAAA,QAAQ,EAAG+B,CAAD,IAAO;AACf1B,YAAAA,cAAc,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,WAJH;AAKE,UAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF,eA0CE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,YAAY,EAAE,GADhB;AAEE,UAAA,QAAQ,EAAGF,CAAD,IAAO;AACfxB,YAAAA,cAAc,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,WAJH;AAKE,UAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CF,eAoDE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAER,SAAjB;AAA4B,UAAA,SAAS,EAAC,4BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD,CAlGD;;GAAM3B,iB;UAUaJ,W,EAEOA,W,EAGPD,W;;;KAfbK,iB;AAoGN,eAAeA,iBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  recpGetAllAppointmentsAction,\n  recpMakePaymentAction,\n} from \"../../actions/recpActions\";\nimport Header from \"../../components/Header\";\n\nconst RecpAcceptPayment = (props) => {\n  const [patientId, setPatientId] = useState(\"\");\n  const [apptId, setApptId] = useState(\"\");\n  const [wardCharges, setWardCharges] = useState(\"\");\n  const [testCharges, setTestCharges] = useState(\"\");\n  let appointments = [];\n  const getAppointment = (aId) => {\n    appointments = aresponse.data.filter((a) => a.id == aId);\n    setPatientId(appointments.pop().apptPatient.id);\n  };\n  const allAppts = useSelector((store) => store.recpAllAppointments);\n  const { aresponse } = allAppts;\n  const recpMakePayment = useSelector((store) => store.recpMakePayment);\n  let { merror, mresponse } = recpMakePayment;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(recpGetAllAppointmentsAction());\n  }, []);\n\n  const onPayment = () => {\n    dispatch(\n      recpMakePaymentAction(patientId, apptId, wardCharges, testCharges)\n    );\n  };\n\n  useEffect(() => {\n    if (mresponse && mresponse.status == \"202\") {\n      alert(\"Payment successfull\");\n      document.location.href = \"/receptionist/home\";\n    } else if (merror) {\n      alert(\"Payment failed....\");\n    }\n  }, [merror, mresponse]);\n\n  return (\n    <div>\n      <Header title=\"Accept Payment\" />\n      <div className=\"form\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Appt Id</label>\n          <select\n            onChange={(e) => {\n              getAppointment(e.target.value);\n              setApptId(e.target.value);\n            }}\n            className=\"form-select\"\n          >\n            <option defaultValue>Select appointment id</option>\n            {aresponse &&\n              aresponse.data.length > 0 &&\n              aresponse.data.map((a) => {\n                return <option value={a.id}>{a.id}</option>;\n              })}\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Patient Id</label>\n          <select\n            disabled\n            onChange={(e) => {\n              setPatientId(e.target.value);\n            }}\n            className=\"form-select\"\n          >\n            <option defaultValue=\"\" value={patientId}>\n              {patientId}\n            </option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Ward Charges</label>\n          <input\n            defaultValue={0.0}\n            onChange={(e) => {\n              setWardCharges(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Lab Charges</label>\n          <input\n            defaultValue={0.0}\n            onChange={(e) => {\n              setTestCharges(e.target.value);\n            }}\n            className=\"form-control\"\n          ></input>\n        </div>\n        <div className=\"text-center\">\n          <button onClick={onPayment} className=\"btn btn-success btn-block \">\n            Make Payment\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecpAcceptPayment;\n"]},"metadata":{},"sourceType":"module"}