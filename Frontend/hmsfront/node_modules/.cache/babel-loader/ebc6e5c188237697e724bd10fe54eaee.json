{"ast":null,"code":"import{PATIENT_SIGNIN_REQUEST,PATIENT_SIGNIN_SUCCESS,PATIENT_SIGNIN_FAIL,PATIENT_SIGNOUT,PATIENT_SIGNUP_REQUEST,PATIENT_SIGNUP_SUCCESS,PATIENT_SIGNUP_FAIL,PATIENT_GET_DOC_REQUEST,PATIENT_GET_DOC_SUCCESS,PATIENT_GET_DOC_FAIL,PATIENT_BOOK_Appointment_REQUEST,PATIENT_BOOK_Appointment_SUCCESS,PATIENT_BOOK_Appointment_FAIL,PATIENT_GET_PROFILE_REQUEST,PATIENT_GET_PROFILE_SUCCESS,PATIENT_GET_PROFILE_FAIL,PATIENT_EDIT_PROFILE_REQUEST,PATIENT_EDIT_PROFILE_SUCCESS,PATIENT_EDIT_PROFILE_FAIL,PATIENT_VIEW_PRESC_REQUEST,PATIENT_VIEW_PRESC_SUCCESS,PATIENT_VIEW_PRESC_FAIL}from'../constants/patientConstants';import axios from'axios';import{SPRINGURL}from\"../constants/URLConstants\";export var patientSigninAction=function patientSigninAction(email,password){return function(dispatch){dispatch({type:PATIENT_SIGNIN_REQUEST});var header={headers:{'Content-Type':'application/json'}};var body={email:email,password:password};var url=SPRINGURL+'/patient/login';axios.post(url,body,header).then(function(response){dispatch({type:PATIENT_SIGNIN_SUCCESS,payload:response});}).catch(function(error){dispatch({type:PATIENT_SIGNIN_FAIL,payload:error});});};};export var patientSignupAction=function patientSignupAction(name,gender,email,password){return function(dispatch){dispatch({type:PATIENT_SIGNUP_REQUEST});var header={Headers:{'Content-Type':'application/json'}};var body={name:name,gender:gender,email:email,password:password};var url=SPRINGURL+'/patient/register';axios.post(url,body,header).then(function(response){dispatch({type:PATIENT_SIGNUP_SUCCESS,payload:response});}).catch(function(error){dispatch({type:PATIENT_SIGNUP_FAIL,payload:error});});};};export var patientGetdoctors=function patientGetdoctors(){return function(dispatch){dispatch({type:PATIENT_GET_DOC_REQUEST});var header={Headers:{'Content-Type':'application/json'}};var url=SPRINGURL+'/patient/bookAppointment';axios.get(url,header).then(function(response){dispatch({type:PATIENT_GET_DOC_SUCCESS,payload:response});}).catch(function(error){dispatch({type:PATIENT_GET_DOC_FAIL,payload:error});});};};export var patientBookAppointment=function patientBookAppointment(date,p_id,d_id){return function(dispatch){dispatch({type:PATIENT_BOOK_Appointment_REQUEST});var header={Headers:{'Content-Type':'application/json'}};var body={apptDate:date,apptPatient:{id:p_id},apptDoctor:{id:d_id}};var url=SPRINGURL+'/patient/bookAppointment';axios.post(url,body,header).then(function(response){dispatch({type:PATIENT_BOOK_Appointment_SUCCESS,payload:response});}).catch(function(error){dispatch({type:PATIENT_BOOK_Appointment_FAIL,payload:error});});};};export var patientGetProfileAction=function patientGetProfileAction(id){return function(dispatch){dispatch({type:PATIENT_GET_PROFILE_REQUEST});var header={Headers:{'Content-Type':'application/json'}};var url=SPRINGURL+'/patient/editProfile/'+id;axios.get(url,header).then(function(response){dispatch({type:PATIENT_GET_PROFILE_SUCCESS,payload:response});}).catch(function(error){dispatch({type:PATIENT_GET_PROFILE_FAIL,payload:error});});};};export var patientEditProfileAction=function patientEditProfileAction(name,gender,email,password,city,age,contact,bloodGroup){return function(dispatch){dispatch({type:PATIENT_EDIT_PROFILE_REQUEST});var header={Headers:{'Content-Type':'application/json'}};var body={name:name,gender:gender,email:email,password:password,city:city,age:age,contact:contact,bloodGroup:bloodGroup};var url=SPRINGURL+'/patient/editProfile';axios.put(url,body,header).then(function(response){dispatch({type:PATIENT_EDIT_PROFILE_SUCCESS,payload:response});}).catch(function(error){dispatch({type:PATIENT_EDIT_PROFILE_FAIL,payload:error});});};};export var patientGetPrescAction=function patientGetPrescAction(id){return function(dispatch){dispatch({type:PATIENT_VIEW_PRESC_REQUEST});var header={Headers:{'Content-Type':'application/json'}};var url=SPRINGURL+'/patient/viewPrescription/'+id;axios.get(url,header).then(function(response){dispatch({type:PATIENT_VIEW_PRESC_SUCCESS,payload:response});}).catch(function(error){dispatch({type:PATIENT_VIEW_PRESC_FAIL,payload:error});});};};export var patientLogout=function patientLogout(){return function(dispatch){sessionStorage.removeItem('pat_info');sessionStorage.removeItem('isLoggedIn');dispatch({type:PATIENT_SIGNOUT});document.location.href='/home';};};","map":{"version":3,"sources":["E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/src/actions/patientAction.js"],"names":["PATIENT_SIGNIN_REQUEST","PATIENT_SIGNIN_SUCCESS","PATIENT_SIGNIN_FAIL","PATIENT_SIGNOUT","PATIENT_SIGNUP_REQUEST","PATIENT_SIGNUP_SUCCESS","PATIENT_SIGNUP_FAIL","PATIENT_GET_DOC_REQUEST","PATIENT_GET_DOC_SUCCESS","PATIENT_GET_DOC_FAIL","PATIENT_BOOK_Appointment_REQUEST","PATIENT_BOOK_Appointment_SUCCESS","PATIENT_BOOK_Appointment_FAIL","PATIENT_GET_PROFILE_REQUEST","PATIENT_GET_PROFILE_SUCCESS","PATIENT_GET_PROFILE_FAIL","PATIENT_EDIT_PROFILE_REQUEST","PATIENT_EDIT_PROFILE_SUCCESS","PATIENT_EDIT_PROFILE_FAIL","PATIENT_VIEW_PRESC_REQUEST","PATIENT_VIEW_PRESC_SUCCESS","PATIENT_VIEW_PRESC_FAIL","axios","SPRINGURL","patientSigninAction","email","password","dispatch","type","header","headers","body","url","post","then","response","payload","catch","error","patientSignupAction","name","gender","Headers","patientGetdoctors","get","patientBookAppointment","date","p_id","d_id","apptDate","apptPatient","id","apptDoctor","patientGetProfileAction","patientEditProfileAction","city","age","contact","bloodGroup","put","patientGetPrescAction","patientLogout","sessionStorage","removeItem","document","location","href"],"mappings":"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","sourcesContent":["import {\r\n  PATIENT_SIGNIN_REQUEST,\r\n  PATIENT_SIGNIN_SUCCESS,\r\n  PATIENT_SIGNIN_FAIL,\r\n  PATIENT_SIGNOUT,\r\n  PATIENT_SIGNUP_REQUEST,\r\n  PATIENT_SIGNUP_SUCCESS,\r\n  PATIENT_SIGNUP_FAIL,\r\n  PATIENT_GET_DOC_REQUEST,\r\n  PATIENT_GET_DOC_SUCCESS,\r\n  PATIENT_GET_DOC_FAIL,\r\n  PATIENT_BOOK_Appointment_REQUEST,\r\n  PATIENT_BOOK_Appointment_SUCCESS,\r\n  PATIENT_BOOK_Appointment_FAIL,\r\n  PATIENT_GET_PROFILE_REQUEST,\r\n  PATIENT_GET_PROFILE_SUCCESS,\r\n  PATIENT_GET_PROFILE_FAIL,\r\n  PATIENT_EDIT_PROFILE_REQUEST,\r\n  PATIENT_EDIT_PROFILE_SUCCESS,\r\n  PATIENT_EDIT_PROFILE_FAIL,\r\n  PATIENT_VIEW_PRESC_REQUEST,\r\n  PATIENT_VIEW_PRESC_SUCCESS,\r\n  PATIENT_VIEW_PRESC_FAIL,\r\n} from '../constants/patientConstants'\r\nimport axios from 'axios'\r\nimport {SPRINGURL} from \"../constants/URLConstants\"\r\n\r\nexport const patientSigninAction = (email, password) => {\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_SIGNIN_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      email,\r\n      password,\r\n    }\r\n    const url = SPRINGURL+'/patient/login'\r\n\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_SIGNIN_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_SIGNIN_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\nexport const patientSignupAction = (name, gender, email, password) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_SIGNUP_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      name,\r\n      gender,\r\n      email,\r\n      password,\r\n    }\r\n    const url = SPRINGURL+'/patient/register'\r\n\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_SIGNUP_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_SIGNUP_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\nexport const patientGetdoctors = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_GET_DOC_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL+'/patient/bookAppointment'\r\n\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_GET_DOC_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_GET_DOC_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\nexport const patientBookAppointment = (date, p_id, d_id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_BOOK_Appointment_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const body = {\r\n      apptDate: date,\r\n      apptPatient: {\r\n        id: p_id,\r\n      },\r\n      apptDoctor: {\r\n        id: d_id,\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL+'/patient/bookAppointment'\r\n\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_BOOK_Appointment_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_BOOK_Appointment_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const patientGetProfileAction = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_GET_PROFILE_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL+'/patient/editProfile/' + id\r\n\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_GET_PROFILE_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_GET_PROFILE_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const patientEditProfileAction = (\r\n  name,gender,email,password,city,age,contact,bloodGroup) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_EDIT_PROFILE_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const body = {name,gender,email,password,city,age,contact,bloodGroup}\r\n\r\n    const url = SPRINGURL+'/patient/editProfile'\r\n\r\n    axios\r\n      .put(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_EDIT_PROFILE_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_EDIT_PROFILE_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const patientGetPrescAction = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PATIENT_VIEW_PRESC_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const url = SPRINGURL+'/patient/viewPrescription/' + id\r\n\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: PATIENT_VIEW_PRESC_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: PATIENT_VIEW_PRESC_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const patientLogout = () => {\r\n  return (dispatch) => {\r\n    sessionStorage.removeItem('pat_info')    \r\n    sessionStorage.removeItem('isLoggedIn')\r\n    dispatch({ type: PATIENT_SIGNOUT })\r\n    document.location.href = '/home'\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}