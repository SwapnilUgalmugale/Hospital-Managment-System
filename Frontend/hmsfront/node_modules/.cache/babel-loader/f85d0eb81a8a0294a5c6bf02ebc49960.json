{"ast":null,"code":"import{APPOINTMENT_FETCH_REQUEST,APPOINTMENT_FETCH_SUCCESS,APPOINTMENT_FETCH_FAIL,APPOINTMENT_FETCH_RESET,MEDICINELIST_FETCH_REQUEST,MEDICINELIST_FETCH_SUCCESS,MEDICINELIST_FETCH_FAIL,TESTPRESC_FETCH_REQUEST,TESTPRESC_FETCH_SUCCESS,TESTPRESC_FETCH_FAIL,TESTLIST_FETCH_REQUEST,TESTLIST_FETCH_SUCCESS,TESTLIST_FETCH_FAIL,MEDPRESC_FETCH_REQUEST,MEDPRESC_FETCH_SUCCESS,MEDPRESC_FETCH_FAIL}from'../constants/DoctorConstants';import axios from'axios';import{SPRINGURL}from'../constants/URLConstants';export var getAppointment=function getAppointment(docId){return function(dispatch){dispatch({type:APPOINTMENT_FETCH_REQUEST});var header={headers:{'Content-Type':'application/json'}};var url=SPRINGURL+\"/doctor/appointments/\".concat(sessionStorage['docId']);axios.get(url,header).then(function(response){dispatch({type:APPOINTMENT_FETCH_SUCCESS,payload:response.data});}).catch(function(error){dispatch({type:APPOINTMENT_FETCH_FAIL,payload:error});});};};export var getMedicines=function getMedicines(){return function(dispatch){dispatch({type:MEDICINELIST_FETCH_REQUEST});var header={headers:{'Content-Type':'application/json'}};var url=SPRINGURL+'/doctor/medicines';axios.get(url,header).then(function(response){dispatch({type:MEDICINELIST_FETCH_SUCCESS,payload:response.data});}).catch(function(error){dispatch({type:MEDICINELIST_FETCH_FAIL,payload:error});});};};export var testPresc=function testPresc(tests_id){return function(dispatch){dispatch({type:TESTPRESC_FETCH_REQUEST});var header={headers:{'Content-Type':'application/json'}};var body={p_id:sessionStorage['patient_id'],tests_id:tests_id};var url=SPRINGURL+\"/doctor/tests/prescription/\".concat(sessionStorage['docId']);axios.post(url,body,header).then(function(response){dispatch({type:TESTPRESC_FETCH_SUCCESS,payload:response});}).catch(function(error){dispatch({type:TESTPRESC_FETCH_FAIL,payload:error});});};};export var getTests=function getTests(){return function(dispatch){dispatch({type:TESTLIST_FETCH_REQUEST});var header={headers:{'Content-Type':'application/json'}};var url=SPRINGURL+'/doctor/tests';axios.get(url,header).then(function(response){dispatch({type:TESTLIST_FETCH_SUCCESS,payload:response.data});}).catch(function(error){dispatch({type:TESTLIST_FETCH_FAIL,payload:error});});};};export var medPresc=function medPresc(medicines){return function(dispatch){dispatch({type:MEDPRESC_FETCH_REQUEST});var header={headers:{'Content-Type':'application/json'}};var body={pId:sessionStorage['patient_id'],medicines:medicines};var url=SPRINGURL+\"/doctor/medicine/prescription/\".concat(sessionStorage['docId']);axios.post(url,body,header).then(function(response){dispatch({type:MEDPRESC_FETCH_SUCCESS,payload:response});}).catch(function(error){dispatch({type:MEDPRESC_FETCH_FAIL,payload:error});});};};","map":{"version":3,"sources":["E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/src/actions/DoctorAction.js"],"names":["APPOINTMENT_FETCH_REQUEST","APPOINTMENT_FETCH_SUCCESS","APPOINTMENT_FETCH_FAIL","APPOINTMENT_FETCH_RESET","MEDICINELIST_FETCH_REQUEST","MEDICINELIST_FETCH_SUCCESS","MEDICINELIST_FETCH_FAIL","TESTPRESC_FETCH_REQUEST","TESTPRESC_FETCH_SUCCESS","TESTPRESC_FETCH_FAIL","TESTLIST_FETCH_REQUEST","TESTLIST_FETCH_SUCCESS","TESTLIST_FETCH_FAIL","MEDPRESC_FETCH_REQUEST","MEDPRESC_FETCH_SUCCESS","MEDPRESC_FETCH_FAIL","axios","SPRINGURL","getAppointment","docId","dispatch","type","header","headers","url","sessionStorage","get","then","response","payload","data","catch","error","getMedicines","testPresc","tests_id","body","p_id","post","getTests","medPresc","medicines","pId"],"mappings":"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","sourcesContent":["import {\r\n  APPOINTMENT_FETCH_REQUEST,\r\n  APPOINTMENT_FETCH_SUCCESS,\r\n  APPOINTMENT_FETCH_FAIL,\r\n  APPOINTMENT_FETCH_RESET,\r\n  MEDICINELIST_FETCH_REQUEST,\r\n  MEDICINELIST_FETCH_SUCCESS,\r\n  MEDICINELIST_FETCH_FAIL,\r\n  TESTPRESC_FETCH_REQUEST,\r\n  TESTPRESC_FETCH_SUCCESS,\r\n  TESTPRESC_FETCH_FAIL,\r\n  TESTLIST_FETCH_REQUEST,\r\n  TESTLIST_FETCH_SUCCESS,\r\n  TESTLIST_FETCH_FAIL,\r\n  MEDPRESC_FETCH_REQUEST,\r\n  MEDPRESC_FETCH_SUCCESS,\r\n  MEDPRESC_FETCH_FAIL,\r\n} from '../constants/DoctorConstants'\r\nimport axios from 'axios'\r\nimport { SPRINGURL } from '../constants/URLConstants'\r\n\r\nexport const getAppointment = (docId) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: APPOINTMENT_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + `/doctor/appointments/${sessionStorage['docId']}`\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: APPOINTMENT_FETCH_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: APPOINTMENT_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getMedicines = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: MEDICINELIST_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/doctor/medicines'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: MEDICINELIST_FETCH_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: MEDICINELIST_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const testPresc = (tests_id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TESTPRESC_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      p_id: sessionStorage['patient_id'],\r\n      tests_id,\r\n    }\r\n    const url =\r\n      SPRINGURL + `/doctor/tests/prescription/${sessionStorage['docId']}`\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: TESTPRESC_FETCH_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: TESTPRESC_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getTests = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TESTLIST_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const url = SPRINGURL + '/doctor/tests'\r\n    axios\r\n      .get(url, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: TESTLIST_FETCH_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: TESTLIST_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const medPresc = (medicines) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: MEDPRESC_FETCH_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      pId: sessionStorage['patient_id'],\r\n      medicines,\r\n    }\r\n    const url =\r\n      SPRINGURL + `/doctor/medicine/prescription/${sessionStorage['docId']}`\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: MEDPRESC_FETCH_SUCCESS,\r\n          payload: response,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: MEDPRESC_FETCH_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}