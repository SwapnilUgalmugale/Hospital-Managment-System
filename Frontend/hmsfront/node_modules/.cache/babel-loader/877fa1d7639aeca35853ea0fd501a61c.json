{"ast":null,"code":"var _jsxFileName = \"E:\\\\cdac\\\\PROJECT\\\\hospitalmanagementsystem-master\\\\hospitalmanagementsystem-master\\\\Frontend\\\\hmsfront\\\\src\\\\screens\\\\DoctorScreens\\\\DoctorMedicineListScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMedicines, medPresc } from '../../actions/DoctorAction';\nimport '../../App.css';\nimport Header from '../../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DoctorMedicineListScreen = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const medicines = useSelector(store => store.medicine);\n  const {\n    error,\n    response,\n    loading\n  } = medicines; // call this only once (when the page has loaded successfully)\n\n  useEffect(() => {\n    dispatch(getMedicines());\n  }, []);\n  useEffect(() => {}, [error, response, loading]);\n  let list = [];\n\n  const med_presc = () => {\n    dispatch(medPresc(list));\n    props.history.push('/doctor/med_presc');\n  };\n\n  const add_to_list = (id, qty) => {\n    list = list.filter(item => item != id);\n    list.push({\n      medicine: {\n        id: id\n      },\n      qty: qty\n    });\n    console.log('lists :' + list);\n    console.log('qty :' + qty);\n  };\n\n  const remove_from_list = (id, qty) => {\n    list = list.filter(item => item.medicine.id != id);\n    console.log('lists :' + list);\n    console.log('qty :' + qty);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subheader \",\n        children: \"Select Medicines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped container\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Medicine id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Medicine name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: response && response.length > 0 && response.map(note => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              id: note.id,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: note.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: note.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: note.name,\n                  type: \"number\",\n                  name: \"qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn btn-primary\",\n                  onClick: () => {\n                    document.getElementById(note.id).style.background = 'lightblue';\n                    add_to_list(note.id, document.getElementById(note.name).value);\n                  },\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn btn-danger\",\n                  onClick: () => {\n                    document.getElementById(note.id).style.background = 'white';\n                    remove_from_list(note.id, document.getElementById(note.name).value);\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: med_presc,\n        className: \"btn btn-success float-center\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DoctorMedicineListScreen, \"BgiRKZrB638yAiLlofFKGyPyJ3w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DoctorMedicineListScreen;\nexport default DoctorMedicineListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorMedicineListScreen\");","map":{"version":3,"sources":["E:/cdac/PROJECT/hospitalmanagementsystem-master/hospitalmanagementsystem-master/Frontend/hmsfront/src/screens/DoctorScreens/DoctorMedicineListScreen.js"],"names":["useEffect","useDispatch","useSelector","getMedicines","medPresc","Header","DoctorMedicineListScreen","props","dispatch","medicines","store","medicine","error","response","loading","list","med_presc","history","push","add_to_list","id","qty","filter","item","console","log","remove_from_list","length","map","note","name","document","getElementById","style","background","value"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getMedicines, medPresc } from '../../actions/DoctorAction'\nimport '../../App.css'\nimport Header from '../../components/Header'\n\nconst DoctorMedicineListScreen = (props) => {\n  const dispatch = useDispatch()\n  const medicines = useSelector((store) => store.medicine)\n  const { error, response, loading } = medicines\n\n\n  // call this only once (when the page has loaded successfully)\n  useEffect(() => {\n    dispatch(getMedicines())\n  }, [])\n\n  useEffect(() => {}, [error, response, loading])\n  let list = []\n  const med_presc = () => {\n    dispatch(medPresc(list))\n    props.history.push('/doctor/med_presc')\n  }\n  const add_to_list = (id, qty) => {\n    list = list.filter((item) => item != id)\n    list.push({\n      medicine: { id: id },\n      qty: qty,\n    })\n    console.log('lists :' + list)\n    console.log('qty :' + qty)\n  }\n  const remove_from_list = (id, qty) => {\n    list = list.filter((item) => item.medicine.id != id)\n\n    console.log('lists :' + list)\n    console.log('qty :' + qty)\n  }\n  return (\n    <div>\n      <Header title=\"List\" />\n      <div>\n        <div className=\"subheader \">Select Medicines</div>\n        <table className=\"table table-striped container\">\n          <thead>\n            <tr>\n              <th>Medicine id</th>\n              <th>Medicine name</th>\n\n              <th>Quantity</th>\n\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {response &&\n              response.length > 0 &&\n              response.map((note) => {\n                return (\n                  <tr id={note.id}>\n                    <td>{note.id}</td>\n                    <td>{note.name}</td>\n                    <td>\n                      <input id={note.name} type=\"number\" name=\"qty\" />\n                    </td>\n                    <td>\n                      <button\n                        class=\"btn btn-primary\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'lightblue'\n                          add_to_list(\n                            note.id,\n                            document.getElementById(note.name).value\n                          )\n                        }}>\n                        Add\n                      </button>\n                    </td>\n                    <td>\n                      <button\n                        class=\"btn btn-danger\"\n                        onClick={() => {\n                          document.getElementById(note.id).style.background =\n                            'white'\n                          remove_from_list(\n                            note.id,\n                            document.getElementById(note.name).value\n                          )\n                        }}>\n                        Remove\n                      </button>\n                    </td>\n                    <td></td>\n                  </tr>\n                )\n              })}\n          </tbody>\n        </table>\n      </div>\n      <div class=\"text-center\">\n        <button onClick={med_presc} className=\"btn btn-success float-center\">\n          Submit\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default DoctorMedicineListScreen\n"]},"metadata":{},"sourceType":"module"}