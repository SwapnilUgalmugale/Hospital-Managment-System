{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\final-project-online-hospital-management-system\\\\Frontend\\\\hmsfront\\\\src\\\\screens\\\\ReceptionistScreens\\\\RecpDischargePatient.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { recpDischargePatientAction, recpGetAdmitPatientsAction } from \"../../actions/recpActions\";\nimport Header from \"../../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecpDischargePatient = props => {\n  _s();\n\n  const dischargePat = useSelector(store => store.recpDischargePatient);\n  const {\n    derror,\n    dresponse,\n    dloading\n  } = dischargePat;\n  let isDischarged = false;\n  const admitPatients = useSelector(store => store.recpGetAdmitPatients);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(recpGetAdmitPatientsAction());\n  }, [isDischarged]);\n  useEffect(() => {\n    if (dresponse && dresponse.status == \"200\") {\n      document.location.href = \"/receptionist/discharge-patient\";\n      alert(\"Patient discharged successfully\");\n    } else if (derror) {\n      alert(derror);\n    }\n  }, [derror, dresponse, dloading]);\n\n  const onDischarge = id => {\n    isDischarged = true;\n    dispatch(recpDischargePatientAction(id)); // window.location.reload(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Discharge Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: admitPatients.response && admitPatients.response.data.list.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Aadmit Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Patient Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dept Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Discharge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: admitPatients.response.data.list.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.admitDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.patient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: e.department\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    onDischarge(e.id);\n                  },\n                  className: \"btn btn-primary\",\n                  type: \"button\",\n                  children: \"Discharge\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Patient is admitted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecpDischargePatient, \"QE5GYnMusCYNBv7txogW+Z1bB4o=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = RecpDischargePatient;\nexport default RecpDischargePatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecpDischargePatient\");","map":{"version":3,"sources":["E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/src/screens/ReceptionistScreens/RecpDischargePatient.js"],"names":["useEffect","useDispatch","useSelector","recpDischargePatientAction","recpGetAdmitPatientsAction","Header","RecpDischargePatient","props","dischargePat","store","recpDischargePatient","derror","dresponse","dloading","isDischarged","admitPatients","recpGetAdmitPatients","dispatch","status","document","location","href","alert","onDischarge","id","response","data","list","length","map","e","admitDate","patient","department"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  recpDischargePatientAction,\r\n  recpGetAdmitPatientsAction,\r\n} from \"../../actions/recpActions\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst RecpDischargePatient = (props) => {\r\n  const dischargePat = useSelector((store) => store.recpDischargePatient);\r\n  const { derror, dresponse, dloading } = dischargePat;\r\n  let isDischarged = false;\r\n  const admitPatients = useSelector((store) => store.recpGetAdmitPatients);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(recpGetAdmitPatientsAction());\r\n  }, [isDischarged]);\r\n\r\n  useEffect(() => {\r\n    if (dresponse && dresponse.status == \"200\") {\r\n      document.location.href = \"/receptionist/discharge-patient\";\r\n      alert(\"Patient discharged successfully\");\r\n    }else if(derror){\r\n      alert(derror);\r\n    }\r\n  }, [derror, dresponse, dloading]);\r\n\r\n  const onDischarge = (id) => {\r\n    isDischarged = true;\r\n    dispatch(recpDischargePatientAction(id));\r\n    // window.location.reload(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header title=\"Discharge Patient\" />\r\n      <div className=\"container\">\r\n        {admitPatients.response &&\r\n        admitPatients.response.data.list.length > 0 ? (\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Aadmit Date</th>\r\n                <th>Patient Id</th>\r\n                <th>Dept Id</th>\r\n                <th>Discharge</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admitPatients.response.data.list.map((e) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{e.id}</td>\r\n                    <td>{e.admitDate}</td>\r\n                    <td>{e.patient}</td>\r\n                    <td>{e.department}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => {\r\n                          onDischarge(e.id);\r\n                        }}\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        Discharge\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <h3>No Patient is admitted</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RecpDischargePatient;\r\n"]},"metadata":{},"sourceType":"module"}