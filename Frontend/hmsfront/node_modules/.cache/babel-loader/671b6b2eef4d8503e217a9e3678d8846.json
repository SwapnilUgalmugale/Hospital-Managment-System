{"ast":null,"code":"import _slicedToArray from\"E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{recpGetAllAppointmentsAction,recpMakePaymentAction}from\"../../actions/recpActions\";import Header from\"../../components/Header\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RecpAcceptPayment=function RecpAcceptPayment(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),patientId=_useState2[0],setPatientId=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),apptId=_useState4[0],setApptId=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),wardCharges=_useState6[0],setWardCharges=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),testCharges=_useState8[0],setTestCharges=_useState8[1];var appointments=[];var getAppointment=function getAppointment(aId){appointments=aresponse.data.filter(function(a){return a.id==aId;});setPatientId(appointments.pop().apptPatient.id);};var allAppts=useSelector(function(store){return store.recpAllAppointments;});var aresponse=allAppts.aresponse;var recpMakePayment=useSelector(function(store){return store.recpMakePayment;});var merror=recpMakePayment.merror,mresponse=recpMakePayment.mresponse;var dispatch=useDispatch();useEffect(function(){dispatch(recpGetAllAppointmentsAction());},[]);var onPayment=function onPayment(){dispatch(recpMakePaymentAction(patientId,apptId,wardCharges,testCharges));};useEffect(function(){if(mresponse&&mresponse.status==\"202\"){alert(\"Payment successfull\");document.location.href=\"/receptionist/home\";}else if(merror){alert(\"Payment failed....\");}},[merror,mresponse]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{title:\"Accept Payment\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Appt Id\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(e){getAppointment(e.target.value);setApptId(e.target.value);},className:\"form-select\",children:[/*#__PURE__*/_jsx(\"option\",{defaultValue:true,children:\"Select appointment id\"}),aresponse&&aresponse.data.length>0&&aresponse.data.map(function(a){return/*#__PURE__*/_jsx(\"option\",{value:a.id,children:a.id});})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Patient Id\"}),/*#__PURE__*/_jsx(\"select\",{disabled:true,onChange:function onChange(e){setPatientId(e.target.value);},className:\"form-select\",children:/*#__PURE__*/_jsx(\"option\",{defaultValue:\"\",value:patientId,children:patientId})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Ward Charges\"}),/*#__PURE__*/_jsx(\"input\",{defaultValue:0.0,onChange:function onChange(e){setWardCharges(e.target.value);},className:\"form-control\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Lab Charges\"}),/*#__PURE__*/_jsx(\"input\",{defaultValue:0.0,onChange:function onChange(e){setTestCharges(e.target.value);},className:\"form-control\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"button\",{onClick:onPayment,className:\"btn btn-success btn-block \",children:\"Make Payment\"})})]})]});};export default RecpAcceptPayment;","map":{"version":3,"sources":["E:/Project/final-project-online-hospital-management-system/Frontend/hmsfront/src/screens/ReceptionistScreens/RecpAcceptPayment.js"],"names":["useEffect","useState","useDispatch","useSelector","recpGetAllAppointmentsAction","recpMakePaymentAction","Header","RecpAcceptPayment","props","patientId","setPatientId","apptId","setApptId","wardCharges","setWardCharges","testCharges","setTestCharges","appointments","getAppointment","aId","aresponse","data","filter","a","id","pop","apptPatient","allAppts","store","recpAllAppointments","recpMakePayment","merror","mresponse","dispatch","onPayment","status","alert","document","location","href","e","target","value","length","map"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  recpGetAllAppointmentsAction,\r\n  recpMakePaymentAction,\r\n} from \"../../actions/recpActions\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst RecpAcceptPayment = (props) => {\r\n  const [patientId, setPatientId] = useState(\"\");\r\n  const [apptId, setApptId] = useState(\"\");\r\n  const [wardCharges, setWardCharges] = useState(\"\");\r\n  const [testCharges, setTestCharges] = useState(\"\");\r\n  let appointments = [];\r\n  const getAppointment = (aId) => {\r\n    appointments = aresponse.data.filter((a) => a.id == aId);\r\n    setPatientId(appointments.pop().apptPatient.id);\r\n  };\r\n  const allAppts = useSelector((store) => store.recpAllAppointments);\r\n  const { aresponse } = allAppts;\r\n  const recpMakePayment = useSelector((store) => store.recpMakePayment);\r\n  let { merror, mresponse } = recpMakePayment;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(recpGetAllAppointmentsAction());\r\n  }, []);\r\n\r\n  const onPayment = () => {\r\n    dispatch(\r\n      recpMakePaymentAction(patientId, apptId, wardCharges, testCharges)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mresponse && mresponse.status == \"202\") {\r\n      alert(\"Payment successfull\");\r\n      document.location.href = \"/receptionist/home\";\r\n    } else if (merror) {\r\n      alert(\"Payment failed....\");\r\n    }\r\n  }, [merror, mresponse]);\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Accept Payment\" />\r\n      <div className=\"form\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Appt Id</label>\r\n          <select\r\n            onChange={(e) => {\r\n              getAppointment(e.target.value);\r\n              setApptId(e.target.value);\r\n            }}\r\n            className=\"form-select\"\r\n          >\r\n            <option defaultValue>Select appointment id</option>\r\n            {aresponse &&\r\n              aresponse.data.length > 0 &&\r\n              aresponse.data.map((a) => {\r\n                return <option value={a.id}>{a.id}</option>;\r\n              })}\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Patient Id</label>\r\n          <select\r\n            disabled\r\n            onChange={(e) => {\r\n              setPatientId(e.target.value);\r\n            }}\r\n            className=\"form-select\"\r\n          >\r\n            <option defaultValue=\"\" value={patientId}>\r\n              {patientId}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Ward Charges</label>\r\n          <input\r\n            defaultValue={0.0}\r\n            onChange={(e) => {\r\n              setWardCharges(e.target.value);\r\n            }}\r\n            className=\"form-control\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Lab Charges</label>\r\n          <input\r\n            defaultValue={0.0}\r\n            onChange={(e) => {\r\n              setTestCharges(e.target.value);\r\n            }}\r\n            className=\"form-control\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button onClick={onPayment} className=\"btn btn-success btn-block \">\r\n            Make Payment\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecpAcceptPayment;\r\n"]},"metadata":{},"sourceType":"module"}